<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\orm\common\fields;

use \nMorph\framework\orm\interfaces\ISet;
use \nMorph\framework\orm\common\sentences\Val;
use \php\Boot;
use \nMorph\framework\orm\common\enums\Op;
use \nMorph\framework\orm\common\enums\DBTypeEnum;
use \nMorph\framework\orm\common\conditions\Condition;
use \nMorph\framework\orm\common\sentences\FieldSentence;
use \nMorph\framework\orm\common\sentences\Assign;
use \nMorph\framework\orm\common\enums\HaxeTypeEnum;
use \nMorph\framework\orm\common\enums\NullableEnum;

class IntegerSentence extends FieldSentence {
	/**
	 * @var string
	 */
	static public $__rtti = "<class path=\"nMorph.framework.orm.common.fields.IntegerSentence\" params=\"\">\x0A\x09<extends path=\"nMorph.framework.orm.common.sentences.FieldSentence\"/>\x0A\x09<ValidateDBCompatibility public=\"1\" set=\"method\" line=\"19\"><f a=\"IntValue\">\x0A\x09<x path=\"Int\"/>\x0A\x09<x path=\"Void\"/>\x0A</f></ValidateDBCompatibility>\x0A\x09<Equals public=\"1\" set=\"method\" line=\"23\"><f a=\"IntValue\">\x0A\x09<x path=\"Int\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.conditions.Condition\"/>\x0A</f></Equals>\x0A\x09<Different public=\"1\" set=\"method\" line=\"28\"><f a=\"IntValue\">\x0A\x09<x path=\"Int\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.conditions.Condition\"/>\x0A</f></Different>\x0A\x09<LessThan public=\"1\" set=\"method\" line=\"33\"><f a=\"IntValue\">\x0A\x09<x path=\"Int\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.conditions.Condition\"/>\x0A</f></LessThan>\x0A\x09<LessThanAndEquals public=\"1\" set=\"method\" line=\"38\"><f a=\"IntValue\">\x0A\x09<x path=\"Int\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.conditions.Condition\"/>\x0A</f></LessThanAndEquals>\x0A\x09<MoreThan public=\"1\" set=\"method\" line=\"43\"><f a=\"IntValue\">\x0A\x09<x path=\"Int\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.conditions.Condition\"/>\x0A</f></MoreThan>\x0A\x09<MoreThanAndEquals public=\"1\" set=\"method\" line=\"48\"><f a=\"IntValue\">\x0A\x09<x path=\"Int\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.conditions.Condition\"/>\x0A</f></MoreThanAndEquals>\x0A\x09<IsNull public=\"1\" set=\"method\" line=\"53\"><f a=\"\"><c path=\"nMorph.framework.orm.common.conditions.Condition\"/></f></IsNull>\x0A\x09<IsNotNull public=\"1\" set=\"method\" line=\"57\"><f a=\"\"><c path=\"nMorph.framework.orm.common.conditions.Condition\"/></f></IsNotNull>\x0A\x09<SET public=\"1\" set=\"method\" line=\"61\"><f a=\"IntValue\">\x0A\x09<x path=\"Int\"/>\x0A\x09<c path=\"nMorph.framework.orm.interfaces.ISet\"/>\x0A</f></SET>\x0A\x09<new public=\"1\" set=\"method\" line=\"15\"><f a=\"FieldTable:FieldName:Nullable:IsPrimaryKey\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"String\"/>\x0A\x09<e path=\"nMorph.framework.orm.common.enums.NullableEnum\"/>\x0A\x09<x path=\"Bool\"/>\x0A\x09<x path=\"Void\"/>\x0A</f></new>\x0A\x09<meta>\x0A\x09\x09<m n=\":directlyUsed\"/>\x0A\x09\x09<m n=\":keep\"/>\x0A\x09</meta>\x0A</class>";

	/**
	 * @param string $FieldTable
	 * @param string $FieldName
	 * @param NullableEnum $Nullable
	 * @param bool $IsPrimaryKey
	 * 
	 * @return void
	 */
	public function __construct ($FieldTable, $FieldName, $Nullable, $IsPrimaryKey) {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:16: characters 9-111
		parent::__construct($FieldTable, $FieldName, DBTypeEnum::INTEGER(), HaxeTypeEnum::INT(), null, null, $Nullable, $IsPrimaryKey);
	}

	/**
	 * @param int $IntValue
	 * 
	 * @return Condition
	 */
	public function Different ($IntValue) {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:29: characters 9-42
		$this->ValidateDBCompatibility($IntValue);
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:30: characters 9-68
		return Condition::SET($this, Op::Different(), Val::int($IntValue));
	}

	/**
	 * @param int $IntValue
	 * 
	 * @return Condition
	 */
	public function Equals ($IntValue) {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:24: characters 9-42
		$this->ValidateDBCompatibility($IntValue);
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:25: characters 9-64
		return Condition::SET($this, Op::Equal(), Val::int($IntValue));
	}

	/**
	 * @return Condition
	 */
	public function IsNotNull () {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:58: characters 9-64
		return Condition::SET($this, Op::Different(), Val::int(null));
	}

	/**
	 * @return Condition
	 */
	public function IsNull () {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:54: characters 9-60
		return Condition::SET($this, Op::Equal(), Val::int(null));
	}

	/**
	 * @param int $IntValue
	 * 
	 * @return Condition
	 */
	public function LessThan ($IntValue) {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:34: characters 9-42
		$this->ValidateDBCompatibility($IntValue);
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:35: characters 9-67
		return Condition::SET($this, Op::LessThan(), Val::int($IntValue));
	}

	/**
	 * @param int $IntValue
	 * 
	 * @return Condition
	 */
	public function LessThanAndEquals ($IntValue) {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:39: characters 9-42
		$this->ValidateDBCompatibility($IntValue);
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:40: characters 9-76
		return Condition::SET($this, Op::LessThanAndEquals(), Val::int($IntValue));
	}

	/**
	 * @param int $IntValue
	 * 
	 * @return Condition
	 */
	public function MoreThan ($IntValue) {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:44: characters 9-42
		$this->ValidateDBCompatibility($IntValue);
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:45: characters 9-67
		return Condition::SET($this, Op::MoreThan(), Val::int($IntValue));
	}

	/**
	 * @param int $IntValue
	 * 
	 * @return Condition
	 */
	public function MoreThanAndEquals ($IntValue) {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:49: characters 9-42
		$this->ValidateDBCompatibility($IntValue);
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:50: characters 9-76
		return Condition::SET($this, Op::MoreThanAndEquals(), Val::int($IntValue));
	}

	/**
	 * @param int $IntValue
	 * 
	 * @return ISet
	 */
	public function SET ($IntValue) {
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:62: characters 9-55
		$asg = Assign::SET($this, Val::int($IntValue));
		#5_framework\orm\src/nMorph/framework/orm/common/fields/IntegerSentence.hx:63: characters 9-19
		return $asg;
	}

	/**
	 * @param int $IntValue
	 * 
	 * @return void
	 */
	public function ValidateDBCompatibility ($IntValue) {
	}
}

Boot::registerClass(IntegerSentence::class, 'nMorph.framework.orm.common.fields.IntegerSentence');
