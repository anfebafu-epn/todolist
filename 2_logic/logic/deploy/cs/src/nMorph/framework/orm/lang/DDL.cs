// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.lang {
	public class DDL : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.ILang {
		
		public DDL(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public DDL() {
			global::nMorph.framework.orm.lang.DDL.__hx_ctor_nMorph_framework_orm_lang_DDL(this);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_lang_DDL(global::nMorph.framework.orm.lang.DDL __hx_this) {
			__hx_this.GeneratedBlocks = new global::Array<string>();
			__hx_this.QueryBlocks = new global::Array<object>();
			__hx_this.Clauses = new global::Array<object>();
			{
			}
			
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.CreateTableClause CREATETABLE(string TableName, global::Array<object> Columns) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.CreateTableClause ctc = new global::nMorph.framework.orm.common.ddl.CreateTableClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (TableName) ), ((global::Array<object>) (Columns) ));
			CurrentDDL.AddClause(ctc);
			return ctc;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.CreateSql CREATEsql(string Querys) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.CreateSql ctc = new global::nMorph.framework.orm.common.ddl.CreateSql(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (Querys) ));
			CurrentDDL.AddClause(ctc);
			return ctc;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.AlterTableClause ALTERTABLE(string TableName) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.AlterTableClause atc = new global::nMorph.framework.orm.common.ddl.AlterTableClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (TableName) ));
			CurrentDDL.AddClause(atc);
			return atc;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.AlterTableClause RENAMETABLE() {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.AlterTableClause dtc = new global::nMorph.framework.orm.common.ddl.AlterTableClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), default(string));
			CurrentDDL.AddClause(dtc);
			return dtc;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.DropTableClause DROPTABLE(string TableName) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.DropTableClause dtc = new global::nMorph.framework.orm.common.ddl.DropTableClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (TableName) ));
			CurrentDDL.AddClause(dtc);
			return dtc;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.CreateViewClause CREATEVIEW(string ViewName) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.CreateViewClause vtc = new global::nMorph.framework.orm.common.ddl.CreateViewClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (ViewName) ));
			CurrentDDL.AddClause(vtc);
			return vtc;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.AlterViewClause ALTERVIEW(string ViewName) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.AlterViewClause vav = new global::nMorph.framework.orm.common.ddl.AlterViewClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (ViewName) ));
			CurrentDDL.AddClause(vav);
			return vav;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.DropViewClause DROPVIEW(string ViewName) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.DropViewClause vav = new global::nMorph.framework.orm.common.ddl.DropViewClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (ViewName) ));
			CurrentDDL.AddClause(vav);
			return vav;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.ExistClause EXISTTABLE(string TableName) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.ExistClause vav = new global::nMorph.framework.orm.common.ddl.ExistClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (TableName) ));
			CurrentDDL.AddClause(vav);
			return vav;
		}
		
		
		public static void CREATEUSER() {
		}
		
		
		public static void ALTERUSER() {
		}
		
		
		public static void DROPUSER() {
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.CreateIndexClause CREATEINDEX(string IndexName, global::nMorph.framework.orm.common.sentences.FielIndexDefinitionSentences Columns) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.CreateIndexClause ci = new global::nMorph.framework.orm.common.ddl.CreateIndexClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (IndexName) ), ((global::nMorph.framework.orm.common.sentences.FielIndexDefinitionSentences) (Columns) ));
			CurrentDDL.AddClause(ci);
			return ci;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.DropIndexClause DROPINDEX(string IndexName, string TableName) {
			global::nMorph.framework.orm.lang.DDL CurrentDDL = new global::nMorph.framework.orm.lang.DDL();
			global::nMorph.framework.orm.common.ddl.DropIndexClause di = new global::nMorph.framework.orm.common.ddl.DropIndexClause(((global::nMorph.framework.orm.lang.DDL) (CurrentDDL) ), ((string) (IndexName) ), ((string) (TableName) ));
			CurrentDDL.AddClause(di);
			return di;
		}
		
		
		public global::Array<object> Clauses;
		
		public global::Array<object> QueryBlocks;
		
		public global::Array<string> GeneratedBlocks;
		
		public virtual void AddClause(global::nMorph.framework.orm.interfaces.IClause Clause) {
			this.Clauses.push(Clause);
		}
		
		
		public virtual void AddQueryBlock(global::nMorph.framework.orm.client.QueryBlock b) {
			this.QueryBlocks.push(b);
		}
		
		
		public virtual void AddBlock(string Block) {
			this.GeneratedBlocks.push(Block);
		}
		
		
		public virtual void RemoveLastBlock() {
			string __temp_expr1 = global::haxe.lang.Runtime.toString((this.GeneratedBlocks.pop()).toDynamic());
		}
		
		
		public virtual global::nMorph.framework.orm.configuration.DatabaseEngineEnum getCurrentEngine() {
			return global::nMorph.framework.orm.configuration.Configuration.Data.get_CurrentDatabaseConnection().get_DatabaseEngine();
		}
		
		
		public virtual string GenerateAll() {
			unchecked {
				switch (this.getCurrentEngine()._hx_index) {
					case 0:
					{
						string Script = "";
						{
							int _g = 0;
							global::Array<object> _g1 = this.Clauses;
							while (( _g < _g1.length )) {
								global::nMorph.framework.orm.interfaces.IClause clause = ((global::nMorph.framework.orm.interfaces.IClause) (_g1[_g]) );
								 ++ _g;
								clause.SCRIPT_PART(null);
								this.AddBlock("\n");
							}
							
						}
						
						break;
					}
					
					
					case 1:
					{
						string Script1 = "";
						{
							int _g2 = 0;
							global::Array<object> _g3 = this.Clauses;
							while (( _g2 < _g3.length )) {
								global::nMorph.framework.orm.interfaces.IClause clause1 = ((global::nMorph.framework.orm.interfaces.IClause) (_g3[_g2]) );
								 ++ _g2;
								clause1.SCRIPT_PART(null);
								this.AddBlock("\n");
							}
							
						}
						
						break;
					}
					
					
					case 2:
					{
						string Script2 = "";
						{
							int _g4 = 0;
							global::Array<object> _g5 = this.Clauses;
							while (( _g4 < _g5.length )) {
								global::nMorph.framework.orm.interfaces.IClause clause2 = ((global::nMorph.framework.orm.interfaces.IClause) (_g5[_g4]) );
								 ++ _g4;
								clause2.SCRIPT_PART(null);
								this.AddBlock("\n");
							}
							
						}
						
						break;
					}
					
					
					case 3:
					{
						string Script3 = "";
						{
							int _g6 = 0;
							global::Array<object> _g7 = this.Clauses;
							while (( _g6 < _g7.length )) {
								global::nMorph.framework.orm.interfaces.IClause clause3 = ((global::nMorph.framework.orm.interfaces.IClause) (_g7[_g6]) );
								 ++ _g6;
								clause3.SCRIPT_PART(null);
								this.AddBlock("\n");
							}
							
						}
						
						break;
					}
					
					
					case 4:
					{
						int _g8 = 0;
						global::Array<object> _g9 = this.Clauses;
						while (( _g8 < _g9.length )) {
							global::nMorph.framework.orm.interfaces.IClause clause4 = ((global::nMorph.framework.orm.interfaces.IClause) (_g9[_g8]) );
							 ++ _g8;
							clause4.SCRIPT_PART(null);
							this.AddBlock("\n");
						}
						
						break;
					}
					
					
				}
				
				string FinalScript = "";
				{
					int _g10 = 0;
					global::Array<string> _g11 = this.GeneratedBlocks;
					while (( _g10 < _g11.length )) {
						string CodeBlock = _g11[_g10];
						 ++ _g10;
						if (CodeBlock.StartsWith("{{")) {
							global::Array<object> _this = this.QueryBlocks;
							global::Array<object> ret = new global::Array<object>(new object[]{});
							{
								int _g12 = 0;
								int _g13 = _this.length;
								while (( _g12 < _g13 )) {
									int i = _g12++;
									global::nMorph.framework.orm.client.QueryBlock elt = ((global::nMorph.framework.orm.client.QueryBlock) (_this.__a[i]) );
									if (( elt.get_BlockName() == CodeBlock )) {
										ret.push(elt);
									}
									
								}
								
							}
							
							global::Array<object> BlockFound = ret;
							if (( BlockFound.length > 0 )) {
								FinalScript = global::haxe.lang.Runtime.concat(FinalScript, global::Std.@string(((global::nMorph.framework.orm.client.QueryBlock) (BlockFound[0]) )));
							}
							
						}
						else {
							FinalScript = global::haxe.lang.Runtime.concat(FinalScript, CodeBlock);
						}
						
					}
					
				}
				
				return FinalScript;
			}
		}
		
		
		public virtual object Execute() {
			string GeneratedSQL = this.GenerateAll();
			GeneratedSQL = global::StringTools.replace(GeneratedSQL, ".**\n", ".");
			global::Array<object> Parameters = new global::Array<object>();
			return global::nMorph.framework.orm.client.Connector.Execute(GeneratedSQL, Parameters);
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 165031765:
					{
						this.GeneratedBlocks = ((global::Array<string>) (global::Array<object>.__hx_cast<string>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 1581366158:
					{
						this.QueryBlocks = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 942990276:
					{
						this.Clauses = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 425603605:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Execute", 425603605)) );
					}
					
					
					case 709859532:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "GenerateAll", 709859532)) );
					}
					
					
					case 1241608805:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "getCurrentEngine", 1241608805)) );
					}
					
					
					case 592725523:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "RemoveLastBlock", 592725523)) );
					}
					
					
					case 134961036:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "AddBlock", 134961036)) );
					}
					
					
					case 977008262:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "AddQueryBlock", 977008262)) );
					}
					
					
					case 1594446480:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "AddClause", 1594446480)) );
					}
					
					
					case 165031765:
					{
						return this.GeneratedBlocks;
					}
					
					
					case 1581366158:
					{
						return this.QueryBlocks;
					}
					
					
					case 942990276:
					{
						return this.Clauses;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 425603605:
					{
						return this.Execute();
					}
					
					
					case 709859532:
					{
						return this.GenerateAll();
					}
					
					
					case 1241608805:
					{
						return this.getCurrentEngine();
					}
					
					
					case 592725523:
					{
						this.RemoveLastBlock();
						break;
					}
					
					
					case 134961036:
					{
						this.AddBlock(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					case 977008262:
					{
						this.AddQueryBlock(((global::nMorph.framework.orm.client.QueryBlock) (dynargs[0]) ));
						break;
					}
					
					
					case 1594446480:
					{
						this.AddClause(((global::nMorph.framework.orm.interfaces.IClause) (dynargs[0]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("GeneratedBlocks");
			baseArr.push("QueryBlocks");
			baseArr.push("Clauses");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


