// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.sentences {
	public class FieldSentence : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.ISentence {
		
		static FieldSentence() {
			global::nMorph.framework.orm.common.sentences.FieldSentence.__rtti = "<class path=\"nMorph.framework.orm.common.sentences.FieldSentence\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<FieldName public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</FieldName>\n\t<FieldTable public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</FieldTable>\n\t<DBType public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<e path=\"nMorph.framework.orm.common.enums.DBTypeEnum\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</DBType>\n\t<HXType public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<e path=\"nMorph.framework.orm.common.enums.HaxeTypeEnum\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</HXType>\n\t<Length public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<x path=\"Null\"><x path=\"Int\"/></x>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</Length>\n\t<Scale public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<x path=\"Null\"><x path=\"Int\"/></x>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</Scale>\n\t<Nullable public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<e path=\"nMorph.framework.orm.common.enums.NullableEnum\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</Nullable>\n\t<IsPrimaryKey public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<x path=\"Bool\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</IsPrimaryKey>\n\t<CurrentSQL public=\"1\" get=\"accessor\" set=\"null\">\n\t\t<c path=\"nMorph.framework.orm.lang.SQL\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</CurrentSQL>\n\t<RegisterQuery public=\"1\" set=\"method\" line=\"54\"><f a=\"CurrentSQL\">\n\t<c path=\"nMorph.framework.orm.interfaces.ILang\"/>\n\t<x path=\"Void\"/>\n</f></RegisterQuery>\n\t<IsNullValue public=\"1\" set=\"method\" line=\"60\"><f a=\"\"><x path=\"Bool\"/></f></IsNullValue>\n\t<get_FieldName set=\"method\" line=\"64\"><f a=\"\"><c path=\"String\"/></f></get_FieldName>\n\t<get_FieldTable set=\"method\" line=\"68\"><f a=\"\"><c path=\"String\"/></f></get_FieldTable>\n\t<get_DBType set=\"method\" line=\"72\"><f a=\"\"><e path=\"nMorph.framework.orm.common.enums.DBTypeEnum\"/></f></get_DBType>\n\t<get_HXType set=\"method\" line=\"76\"><f a=\"\"><e path=\"nMorph.framework.orm.common.enums.HaxeTypeEnum\"/></f></get_HXType>\n\t<get_Length set=\"method\" line=\"80\"><f a=\"\"><x path=\"Null\"><x path=\"Int\"/></x></f></get_Length>\n\t<get_Scale set=\"method\" line=\"84\"><f a=\"\"><x path=\"Null\"><x path=\"Int\"/></x></f></get_Scale>\n\t<get_Nullable set=\"method\" line=\"88\"><f a=\"\"><e path=\"nMorph.framework.orm.common.enums.NullableEnum\"/></f></get_Nullable>\n\t<get_IsPrimaryKey set=\"method\" line=\"92\"><f a=\"\"><x path=\"Bool\"/></f></get_IsPrimaryKey>\n\t<get_CurrentSQL set=\"method\" line=\"97\"><f a=\"\"><c path=\"nMorph.framework.orm.lang.SQL\"/></f></get_CurrentSQL>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"103\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<new public=\"1\" set=\"method\" line=\"31\"><f a=\"FieldTable:FieldName:DBType:HXType:Length:Scale:Nullable:IsPrimaryKey\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n\t<e path=\"nMorph.framework.orm.common.enums.DBTypeEnum\"/>\n\t<e path=\"nMorph.framework.orm.common.enums.HaxeTypeEnum\"/>\n\t<x path=\"Null\"><x path=\"Int\"/></x>\n\t<x path=\"Null\"><x path=\"Int\"/></x>\n\t<e path=\"nMorph.framework.orm.common.enums.NullableEnum\"/>\n\t<x path=\"Bool\"/>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public FieldSentence(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FieldSentence(string FieldTable, string FieldName, global::nMorph.framework.orm.common.enums.DBTypeEnum DBType, global::nMorph.framework.orm.common.enums.HaxeTypeEnum HXType, global::haxe.lang.Null<int> Length, global::haxe.lang.Null<int> Scale, global::nMorph.framework.orm.common.enums.NullableEnum Nullable, bool IsPrimaryKey) {
			global::nMorph.framework.orm.common.sentences.FieldSentence.__hx_ctor_nMorph_framework_orm_common_sentences_FieldSentence(this, FieldTable, FieldName, DBType, HXType, Length, Scale, Nullable, IsPrimaryKey);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_sentences_FieldSentence(global::nMorph.framework.orm.common.sentences.FieldSentence __hx_this, string FieldTable, string FieldName, global::nMorph.framework.orm.common.enums.DBTypeEnum DBType, global::nMorph.framework.orm.common.enums.HaxeTypeEnum HXType, global::haxe.lang.Null<int> Length, global::haxe.lang.Null<int> Scale, global::nMorph.framework.orm.common.enums.NullableEnum Nullable, bool IsPrimaryKey) {
			__hx_this.FieldName = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\"", FieldName), "\"");
			__hx_this.FieldTable = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\"", FieldTable), "\"");
			__hx_this.DBType = DBType;
			__hx_this.HXType = HXType;
			__hx_this.Length = Length;
			__hx_this.Scale = Scale;
			__hx_this.Nullable = Nullable;
			__hx_this.IsPrimaryKey = IsPrimaryKey;
			if (( __hx_this.get_CurrentSQL() == null )) {
				__hx_this.CurrentSQL = new global::nMorph.framework.orm.lang.SQL();
			}
			
		}
		
		
		public static string __rtti;
		
		public string FieldName;
		
		public string FieldTable;
		
		public global::nMorph.framework.orm.common.enums.DBTypeEnum DBType;
		
		public global::nMorph.framework.orm.common.enums.HaxeTypeEnum HXType;
		
		public global::haxe.lang.Null<int> Length;
		
		public global::haxe.lang.Null<int> Scale;
		
		public global::nMorph.framework.orm.common.enums.NullableEnum Nullable;
		
		public bool IsPrimaryKey;
		
		public global::nMorph.framework.orm.lang.SQL CurrentSQL;
		
		public virtual void RegisterQuery(global::nMorph.framework.orm.interfaces.ILang CurrentSQL) {
			this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (CurrentSQL) );
		}
		
		
		public virtual bool IsNullValue() {
			return false;
		}
		
		
		public virtual string get_FieldName() {
			return this.FieldName;
		}
		
		
		public virtual string get_FieldTable() {
			return this.FieldTable;
		}
		
		
		public virtual global::nMorph.framework.orm.common.enums.DBTypeEnum get_DBType() {
			return this.DBType;
		}
		
		
		public virtual global::nMorph.framework.orm.common.enums.HaxeTypeEnum get_HXType() {
			return this.HXType;
		}
		
		
		public virtual global::haxe.lang.Null<int> get_Length() {
			return this.Length;
		}
		
		
		public virtual global::haxe.lang.Null<int> get_Scale() {
			return this.Scale;
		}
		
		
		public virtual global::nMorph.framework.orm.common.enums.NullableEnum get_Nullable() {
			return this.Nullable;
		}
		
		
		public virtual bool get_IsPrimaryKey() {
			return this.IsPrimaryKey;
		}
		
		
		public virtual global::nMorph.framework.orm.lang.SQL get_CurrentSQL() {
			return this.CurrentSQL;
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			unchecked {
				switch (this.get_CurrentSQL().getCurrentEngine()._hx_index) {
					case 0:
					{
						if (( args != null )) {
							if (( args == "ONLYNAME" )) {
								this.get_CurrentSQL().AddBlock(this.get_FieldName());
							}
							else if (( args == "WITHTABLE" )) {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							else {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							
						}
						else {
							this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
						}
						
						break;
					}
					
					
					case 1:
					{
						if (( args != null )) {
							if (( args == "ONLYNAME" )) {
								this.get_CurrentSQL().AddBlock(this.get_FieldName());
							}
							else if (( args == "WITHTABLE" )) {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							else {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							
						}
						else {
							this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
						}
						
						break;
					}
					
					
					case 2:
					{
						if (( args != null )) {
							if (( args == "ONLYNAME" )) {
								this.get_CurrentSQL().AddBlock(this.get_FieldName());
							}
							else if (( args == "WITHTABLE" )) {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							else {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							
						}
						else {
							this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
						}
						
						break;
					}
					
					
					case 3:
					{
						if (( args != null )) {
							if (( args == "ONLYNAME" )) {
								this.get_CurrentSQL().AddBlock(this.get_FieldName());
							}
							else if (( args == "WITHTABLE" )) {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							else {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							
						}
						else {
							this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
						}
						
						break;
					}
					
					
					case 4:
					{
						if (( args != null )) {
							if (( args == "ONLYNAME" )) {
								this.get_CurrentSQL().AddBlock(this.get_FieldName());
							}
							else if (( args == "WITHTABLE" )) {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							else {
								this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
							}
							
						}
						else {
							this.get_CurrentSQL().AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.get_FieldTable(), "."), this.get_FieldName()));
						}
						
						break;
					}
					
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1038308213:
					{
						this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					case 286997415:
					{
						this.IsPrimaryKey = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 216537025:
					{
						this.Nullable = ((global::nMorph.framework.orm.common.enums.NullableEnum) (@value) );
						return @value;
					}
					
					
					case 201080426:
					{
						this.Scale = global::haxe.lang.Null<object>.ofDynamic<int>(@value);
						return @value;
					}
					
					
					case 1402734854:
					{
						this.Length = global::haxe.lang.Null<object>.ofDynamic<int>(@value);
						return @value;
					}
					
					
					case 752297450:
					{
						this.HXType = ((global::nMorph.framework.orm.common.enums.HaxeTypeEnum) (@value) );
						return @value;
					}
					
					
					case 1754853720:
					{
						this.DBType = ((global::nMorph.framework.orm.common.enums.DBTypeEnum) (@value) );
						return @value;
					}
					
					
					case 1326920980:
					{
						this.FieldTable = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 35715077:
					{
						this.FieldName = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 869850046:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_CurrentSQL", 869850046)) );
					}
					
					
					case 364521520:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_IsPrimaryKey", 364521520)) );
					}
					
					
					case 1107413962:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_Nullable", 1107413962)) );
					}
					
					
					case 1336253121:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_Scale", 1336253121)) );
					}
					
					
					case 1143175375:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_Length", 1143175375)) );
					}
					
					
					case 492737971:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_HXType", 492737971)) );
					}
					
					
					case 1495294241:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_DBType", 1495294241)) );
					}
					
					
					case 1158462813:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_FieldTable", 1158462813)) );
					}
					
					
					case 1132776412:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_FieldName", 1132776412)) );
					}
					
					
					case 150705664:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "IsNullValue", 150705664)) );
					}
					
					
					case 457416069:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "RegisterQuery", 457416069)) );
					}
					
					
					case 1038308213:
					{
						return ( (handleProperties) ? (this.get_CurrentSQL()) : (this.CurrentSQL) );
					}
					
					
					case 286997415:
					{
						return ( (handleProperties) ? (this.get_IsPrimaryKey()) : (this.IsPrimaryKey) );
					}
					
					
					case 216537025:
					{
						return ( (handleProperties) ? (this.get_Nullable()) : (this.Nullable) );
					}
					
					
					case 201080426:
					{
						return (( (handleProperties) ? (this.get_Scale()) : (this.Scale) )).toDynamic();
					}
					
					
					case 1402734854:
					{
						return (( (handleProperties) ? (this.get_Length()) : (this.Length) )).toDynamic();
					}
					
					
					case 752297450:
					{
						return ( (handleProperties) ? (this.get_HXType()) : (this.HXType) );
					}
					
					
					case 1754853720:
					{
						return ( (handleProperties) ? (this.get_DBType()) : (this.DBType) );
					}
					
					
					case 1326920980:
					{
						return ( (handleProperties) ? (this.get_FieldTable()) : (this.FieldTable) );
					}
					
					
					case 35715077:
					{
						return ( (handleProperties) ? (this.get_FieldName()) : (this.FieldName) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 869850046:
					{
						return this.get_CurrentSQL();
					}
					
					
					case 364521520:
					{
						return this.get_IsPrimaryKey();
					}
					
					
					case 1107413962:
					{
						return this.get_Nullable();
					}
					
					
					case 1336253121:
					{
						return (this.get_Scale()).toDynamic();
					}
					
					
					case 1143175375:
					{
						return (this.get_Length()).toDynamic();
					}
					
					
					case 492737971:
					{
						return this.get_HXType();
					}
					
					
					case 1495294241:
					{
						return this.get_DBType();
					}
					
					
					case 1158462813:
					{
						return this.get_FieldTable();
					}
					
					
					case 1132776412:
					{
						return this.get_FieldName();
					}
					
					
					case 150705664:
					{
						return this.IsNullValue();
					}
					
					
					case 457416069:
					{
						this.RegisterQuery(((global::nMorph.framework.orm.interfaces.ILang) (dynargs[0]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("CurrentSQL");
			baseArr.push("IsPrimaryKey");
			baseArr.push("Nullable");
			baseArr.push("Scale");
			baseArr.push("Length");
			baseArr.push("HXType");
			baseArr.push("DBType");
			baseArr.push("FieldTable");
			baseArr.push("FieldName");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


