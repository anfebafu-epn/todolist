// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Serializer : global::haxe.lang.HxObject {
		
		static Serializer() {
			global::haxe.Serializer.USE_CACHE = false;
			global::haxe.Serializer.USE_ENUM_INDEX = false;
			global::haxe.Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
			global::haxe.Serializer.BASE64_CODES = null;
		}
		
		
		public Serializer(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Serializer() {
			global::haxe.Serializer.__hx_ctor_haxe_Serializer(this);
		}
		
		
		protected static void __hx_ctor_haxe_Serializer(global::haxe.Serializer __hx_this) {
			__hx_this.buf = new global::StringBuf();
			__hx_this.cache = new global::Array<object>();
			__hx_this.useCache = global::haxe.Serializer.USE_CACHE;
			__hx_this.useEnumIndex = global::haxe.Serializer.USE_ENUM_INDEX;
			__hx_this.shash = new global::haxe.ds.StringMap<int>();
			__hx_this.scount = 0;
		}
		
		
		public static bool USE_CACHE;
		
		public static bool USE_ENUM_INDEX;
		
		public static string BASE64;
		
		public static object[] BASE64_CODES;
		
		public static string run(object v) {
			global::haxe.Serializer s = new global::haxe.Serializer();
			s.serialize(v);
			return s.toString();
		}
		
		
		public global::StringBuf buf;
		
		public global::Array cache;
		
		public global::haxe.ds.StringMap<int> shash;
		
		public int scount;
		
		public bool useCache;
		
		public bool useEnumIndex;
		
		public virtual string toString() {
			return this.buf.b.ToString();
		}
		
		
		public virtual void serializeString(string s) {
			global::haxe.lang.Null<int> x = this.shash.@get(s);
			if (x.hasValue) {
				this.buf.b.Append(((string) ("R") ));
				this.buf.b.Append(((string) (global::Std.@string((x).toDynamic())) ));
				return;
			}
			
			this.shash.@set(s, this.scount++);
			this.buf.b.Append(((string) ("y") ));
			s = global::System.Uri.EscapeDataString(((string) (s) ));
			this.buf.b.Append(((string) (global::Std.@string(s.Length)) ));
			this.buf.b.Append(((string) (":") ));
			this.buf.b.Append(((string) (global::Std.@string(s)) ));
		}
		
		
		public virtual bool serializeRef(object v) {
			{
				int _g = 0;
				int _g1 = ((int) (global::haxe.lang.Runtime.getField_f(this.cache, "length", 520590566, true)) );
				while (( _g < _g1 )) {
					int i = _g++;
					if (global::haxe.lang.Runtime.eq(this.cache[i], v)) {
						this.buf.b.Append(((string) ("r") ));
						this.buf.b.Append(((string) (global::Std.@string(i)) ));
						return true;
					}
					
				}
				
			}
			
			int __temp_expr1 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(this.cache, "push", 1247875546, new object[]{v}))) );
			return false;
		}
		
		
		public virtual void serializeFields(object v) {
			{
				int _g = 0;
				global::Array<string> _g1 = global::Reflect.fields(v);
				while (( _g < _g1.length )) {
					string f = _g1[_g];
					 ++ _g;
					this.serializeString(f);
					this.serialize(global::Reflect.field(v, f));
				}
				
			}
			
			this.buf.b.Append(((string) ("g") ));
		}
		
		
		public virtual void serialize(object v) {
			unchecked {
				global::ValueType _g = global::Type.@typeof(v);
				switch (_g._hx_index) {
					case 0:
					{
						this.buf.b.Append(((string) ("n") ));
						break;
					}
					
					
					case 1:
					{
						int v1 = ((int) (global::haxe.lang.Runtime.toInt(v)) );
						if (( v1 == 0 )) {
							this.buf.b.Append(((string) ("z") ));
							return;
						}
						
						this.buf.b.Append(((string) ("i") ));
						this.buf.b.Append(((string) (global::Std.@string(v1)) ));
						break;
					}
					
					
					case 2:
					{
						double v2 = ((double) (global::haxe.lang.Runtime.toDouble(v)) );
						if (global::System.Double.IsNaN(((double) (v2) ))) {
							this.buf.b.Append(((string) ("k") ));
						}
						else if ( ! (((  ! (global::System.Double.IsInfinity(((double) (v2) )))  &&  ! (global::System.Double.IsNaN(((double) (v2) )))  ))) ) {
							this.buf.b.Append(((string) (( (( v2 < 0 )) ? ("m") : ("p") )) ));
						}
						else {
							this.buf.b.Append(((string) ("d") ));
							this.buf.b.Append(((string) (global::Std.@string(v2)) ));
						}
						
						break;
					}
					
					
					case 3:
					{
						this.buf.b.Append(((string) (( (global::haxe.lang.Runtime.toBool((v))) ? ("t") : ("f") )) ));
						break;
					}
					
					
					case 4:
					{
						if (( v is global::System.Type )) {
							string className = global::Type.getClassName(((global::System.Type) (v) ));
							this.buf.b.Append(((string) ("A") ));
							this.serializeString(className);
						}
						else if (( v is global::System.Type )) {
							this.buf.b.Append(((string) ("B") ));
							this.serializeString(global::Type.getEnumName(((global::System.Type) (v) )));
						}
						else {
							if (( this.useCache && this.serializeRef(v) )) {
								return;
							}
							
							this.buf.b.Append(((string) ("o") ));
							this.serializeFields(v);
						}
						
						break;
					}
					
					
					case 5:
					{
						throw ((global::System.Exception) (global::haxe.Exception.thrown("Cannot serialize function")) );
					}
					
					
					case 6:
					{
						global::System.Type c = ( _g as global::ValueType_TClass ).c;
						{
							if (global::haxe.lang.Runtime.refEq(c, typeof(string))) {
								this.serializeString(global::haxe.lang.Runtime.toString(v));
								return;
							}
							
							if (( this.useCache && this.serializeRef(v) )) {
								return;
							}
							
							switch (global::Type.getClassName(c)) {
								case "Array":
								{
									int ucount = 0;
									this.buf.b.Append(((string) ("a") ));
									int l = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(v, "length", 520590566, true))) );
									{
										int _g1 = 0;
										int _g2 = l;
										while (( _g1 < _g2 )) {
											int i = _g1++;
											if (( ((object) (global::haxe.lang.Runtime.callField(v, "__get", 1915412854, new object[]{i})) ) == null )) {
												 ++ ucount;
											}
											else {
												if (( ucount > 0 )) {
													if (( ucount == 1 )) {
														this.buf.b.Append(((string) ("n") ));
													}
													else {
														this.buf.b.Append(((string) ("u") ));
														this.buf.b.Append(((string) (global::Std.@string(ucount)) ));
													}
													
													ucount = 0;
												}
												
												this.serialize(((object) (global::haxe.lang.Runtime.callField(v, "__get", 1915412854, new object[]{i})) ));
											}
											
										}
										
									}
									
									if (( ucount > 0 )) {
										if (( ucount == 1 )) {
											this.buf.b.Append(((string) ("n") ));
										}
										else {
											this.buf.b.Append(((string) ("u") ));
											this.buf.b.Append(((string) (global::Std.@string(ucount)) ));
										}
										
									}
									
									this.buf.b.Append(((string) ("h") ));
									break;
								}
								
								
								case "Date":
								{
									global::Date d = ((global::Date) (v) );
									this.buf.b.Append(((string) ("v") ));
									{
										global::StringBuf _this = this.buf;
										long a = global::System.TimeZone.CurrentTimeZone.ToUniversalTime(((global::System.DateTime) (d.date) )).Ticks;
										_this.b.Append(((string) (global::Std.@string(( ((double) (((long) (( ((long) (a) ) - ((long) (global::Date.epochTicks) ) )) )) ) / ((double) (global::System.TimeSpan.TicksPerMillisecond) ) ))) ));
									}
									
									break;
								}
								
								
								case "haxe.ds.IntMap":
								{
									this.buf.b.Append(((string) ("q") ));
									global::haxe.ds.IntMap v3 = ((global::haxe.ds.IntMap) (v) );
									{
										object k = ((object) (new global::haxe.ds._IntMap.IntMapKeyIterator<object>(((global::haxe.ds.IntMap<object>) (global::haxe.ds.IntMap<object>.__hx_cast<object>(((global::haxe.ds.IntMap) (v3) ))) ))) );
										while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(k, "hasNext", 407283053, null))) {
											int k1 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(k, "next", 1224901875, null))) );
											this.buf.b.Append(((string) (":") ));
											this.buf.b.Append(((string) (global::Std.@string(k1)) ));
											this.serialize(((object) (global::haxe.lang.Runtime.callField(v3, "get", 5144726, new object[]{k1})) ));
										}
										
									}
									
									this.buf.b.Append(((string) ("h") ));
									break;
								}
								
								
								case "haxe.ds.List":
								{
									this.buf.b.Append(((string) ("l") ));
									global::haxe.ds.List v4 = ((global::haxe.ds.List) (v) );
									{
										global::haxe.ds._List.ListNode _g_head = ((global::haxe.ds._List.ListNode) (global::haxe.lang.Runtime.getField(v4, "h", 104, true)) );
										while (( _g_head != null )) {
											object val = global::haxe.lang.Runtime.getField(_g_head, "item", 1170195731, true);
											_g_head = ((global::haxe.ds._List.ListNode) (global::haxe.lang.Runtime.getField(_g_head, "next", 1224901875, true)) );
											object i1 = ((object) (val) );
											this.serialize(i1);
										}
										
									}
									
									this.buf.b.Append(((string) ("h") ));
									break;
								}
								
								
								case "haxe.ds.ObjectMap":
								{
									this.buf.b.Append(((string) ("M") ));
									global::haxe.ds.ObjectMap v5 = ((global::haxe.ds.ObjectMap) (v) );
									{
										object k2 = v5.keys();
										while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(k2, "hasNext", 407283053, null))) {
											object k3 = ((object) (global::haxe.lang.Runtime.callField(k2, "next", 1224901875, null)) );
											this.serialize(k3);
											this.serialize(((object) (global::haxe.lang.Runtime.callField(v5, "get", 5144726, new object[]{k3})) ));
										}
										
									}
									
									this.buf.b.Append(((string) ("h") ));
									break;
								}
								
								
								case "haxe.ds.StringMap":
								{
									this.buf.b.Append(((string) ("b") ));
									global::haxe.ds.StringMap v6 = ((global::haxe.ds.StringMap) (v) );
									{
										object k4 = ((object) (new global::haxe.ds._StringMap.StringMapKeyIterator<object>(((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (v6) ))) ))) );
										while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(k4, "hasNext", 407283053, null))) {
											string k5 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.callField(k4, "next", 1224901875, null));
											this.serializeString(k5);
											this.serialize(((object) (global::haxe.lang.Runtime.callField(v6, "get", 5144726, new object[]{k5})) ));
										}
										
									}
									
									this.buf.b.Append(((string) ("h") ));
									break;
								}
								
								
								case "haxe.io.Bytes":
								{
									global::haxe.io.Bytes v7 = ((global::haxe.io.Bytes) (v) );
									this.buf.b.Append(((string) ("s") ));
									{
										global::StringBuf _this1 = this.buf;
										int x = ((int) (global::System.Math.Ceiling(((double) (( ((double) (( v7.length * 8 )) ) / 6 )) ))) );
										_this1.b.Append(((string) (global::Std.@string(x)) ));
									}
									
									this.buf.b.Append(((string) (":") ));
									int i2 = 0;
									int max = ( v7.length - 2 );
									object[] b64 = global::haxe.Serializer.BASE64_CODES;
									if (( b64 == null )) {
										object[] this1 = new object[global::haxe.Serializer.BASE64.Length];
										b64 = ((object[]) (this1) );
										{
											int _g3 = 0;
											int _g4 = global::haxe.Serializer.BASE64.Length;
											while (( _g3 < _g4 )) {
												int i3 = _g3++;
												((object[]) (b64) )[i3] = (global::haxe.lang.StringExt.charCodeAt(global::haxe.Serializer.BASE64, i3)).toDynamic();
											}
											
										}
										
										global::haxe.Serializer.BASE64_CODES = b64;
									}
									
									while (( i2 < max )) {
										int b1 = ((int) (v7.b[i2++]) );
										int b2 = ((int) (v7.b[i2++]) );
										int b3 = ((int) (v7.b[i2++]) );
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( b1 >> 2 )])) ));
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( (( ( b1 << 4 ) | ( b2 >> 4 ) )) & 63 )])) ));
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( (( ( b2 << 2 ) | ( b3 >> 6 ) )) & 63 )])) ));
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( b3 & 63 )])) ));
									}
									
									if (( i2 == max )) {
										int b11 = ((int) (v7.b[i2++]) );
										int b21 = ((int) (v7.b[i2++]) );
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( b11 >> 2 )])) ));
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( (( ( b11 << 4 ) | ( b21 >> 4 ) )) & 63 )])) ));
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( ( b21 << 2 ) & 63 )])) ));
									}
									else if (( i2 == ( max + 1 ) )) {
										int b12 = ((int) (v7.b[i2++]) );
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( b12 >> 2 )])) ));
										this.buf.addChar(((int) (global::haxe.lang.Runtime.toInt(((object[]) (b64) )[( ( b12 << 4 ) & 63 )])) ));
									}
									
									break;
								}
								
								
								default:
								{
									if (this.useCache) {
										object __temp_expr1 = ((object) (global::haxe.lang.Runtime.callField(this.cache, "pop", 5594513, null)) );
									}
									
									if (global::Reflect.hasField(v, "hxSerialize")) {
										this.buf.b.Append(((string) ("C") ));
										this.serializeString(global::Type.getClassName(c));
										if (this.useCache) {
											int __temp_expr3 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(this.cache, "push", 1247875546, new object[]{v}))) );
										}
										
										object __temp_expr4 = ((object) (global::haxe.lang.Runtime.callField(v, "hxSerialize", 336134320, new object[]{this})) );
										this.buf.b.Append(((string) ("g") ));
									}
									else {
										this.buf.b.Append(((string) ("c") ));
										this.serializeString(global::Type.getClassName(c));
										if (this.useCache) {
											int __temp_expr2 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(this.cache, "push", 1247875546, new object[]{v}))) );
										}
										
										this.serializeFields(v);
									}
									
									break;
								}
								
							}
							
						}
						
						break;
					}
					
					
					case 7:
					{
						global::System.Type e = ( _g as global::ValueType_TEnum ).e;
						{
							if (this.useCache) {
								if (this.serializeRef(v)) {
									return;
								}
								
								object __temp_expr5 = ((object) (global::haxe.lang.Runtime.callField(this.cache, "pop", 5594513, null)) );
							}
							
							this.buf.b.Append(((string) (global::Std.@string(( (this.useEnumIndex) ? ("j") : ("w") ))) ));
							this.serializeString(global::Type.getEnumName(e));
							if (this.useEnumIndex) {
								this.buf.b.Append(((string) (":") ));
								this.buf.b.Append(((string) (global::Std.@string(global::Type.enumIndex(v))) ));
							}
							else {
								this.serializeString(global::Type.enumConstructor(v));
							}
							
							this.buf.b.Append(((string) (":") ));
							global::Array arr = global::Type.enumParameters(v);
							if (( arr != null )) {
								this.buf.b.Append(((string) (global::Std.@string(((int) (global::haxe.lang.Runtime.getField_f(arr, "length", 520590566, true)) ))) ));
								{
									int _g5 = 0;
									while (( _g5 < ((int) (global::haxe.lang.Runtime.getField_f(arr, "length", 520590566, true)) ) )) {
										object v8 = arr[_g5];
										 ++ _g5;
										this.serialize(v8);
									}
									
								}
								
							}
							else {
								this.buf.b.Append(((string) ("0") ));
							}
							
							if (this.useCache) {
								int __temp_expr6 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(this.cache, "push", 1247875546, new object[]{v}))) );
							}
							
						}
						
						break;
					}
					
					
					default:
					{
						throw ((global::System.Exception) (global::haxe.Exception.thrown(global::haxe.lang.Runtime.concat("Cannot serialize ", global::Std.@string(v)))) );
					}
					
				}
				
			}
		}
		
		
		public virtual void serializeException(object e) {
			this.buf.b.Append(((string) ("x") ));
			this.serialize(e);
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1164821372:
					{
						this.scount = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 603885322:
					{
						this.useEnumIndex = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 142605435:
					{
						this.useCache = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1164821372:
					{
						this.scount = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 2082268609:
					{
						this.shash = ((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 1091869250:
					{
						this.cache = ((global::Array) (@value) );
						return @value;
					}
					
					
					case 4899635:
					{
						this.buf = ((global::StringBuf) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 384816719:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serializeException", 384816719)) );
					}
					
					
					case 1962040800:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serialize", 1962040800)) );
					}
					
					
					case 444663929:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serializeFields", 444663929)) );
					}
					
					
					case 997465939:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serializeRef", 997465939)) );
					}
					
					
					case 723690193:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serializeString", 723690193)) );
					}
					
					
					case 946786476:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 603885322:
					{
						return this.useEnumIndex;
					}
					
					
					case 142605435:
					{
						return this.useCache;
					}
					
					
					case 1164821372:
					{
						return this.scount;
					}
					
					
					case 2082268609:
					{
						return this.shash;
					}
					
					
					case 1091869250:
					{
						return this.cache;
					}
					
					
					case 4899635:
					{
						return this.buf;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1164821372:
					{
						return ((double) (this.scount) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 384816719:
					{
						this.serializeException(dynargs[0]);
						break;
					}
					
					
					case 1962040800:
					{
						this.serialize(dynargs[0]);
						break;
					}
					
					
					case 444663929:
					{
						this.serializeFields(dynargs[0]);
						break;
					}
					
					
					case 997465939:
					{
						return this.serializeRef(dynargs[0]);
					}
					
					
					case 723690193:
					{
						this.serializeString(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					case 946786476:
					{
						return this.toString();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("useEnumIndex");
			baseArr.push("useCache");
			baseArr.push("scount");
			baseArr.push("shash");
			baseArr.push("cache");
			baseArr.push("buf");
			base.__hx_getFields(baseArr);
		}
		
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}


