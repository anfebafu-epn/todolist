<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace hscript;

use \php\Boot;
use \php\_Boot\HxEnum;

class CType extends HxEnum {
	/**
	 * @param object[]|\Array_hx $fields
	 * 
	 * @return CType
	 */
	static public function CTAnon ($fields) {
		return new CType('CTAnon', 2, [$fields]);
	}

	/**
	 * @param CType[]|\Array_hx $args
	 * @param CType $ret
	 * 
	 * @return CType
	 */
	static public function CTFun ($args, $ret) {
		return new CType('CTFun', 1, [$args, $ret]);
	}

	/**
	 * @param string $n
	 * @param CType $t
	 * 
	 * @return CType
	 */
	static public function CTNamed ($n, $t) {
		return new CType('CTNamed', 5, [$n, $t]);
	}

	/**
	 * @param CType $t
	 * 
	 * @return CType
	 */
	static public function CTOpt ($t) {
		return new CType('CTOpt', 4, [$t]);
	}

	/**
	 * @param CType $t
	 * 
	 * @return CType
	 */
	static public function CTParent ($t) {
		return new CType('CTParent', 3, [$t]);
	}

	/**
	 * @param string[]|\Array_hx $path
	 * @param CType[]|\Array_hx $params
	 * 
	 * @return CType
	 */
	static public function CTPath ($path, $params = null) {
		return new CType('CTPath', 0, [$path, $params]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			2 => 'CTAnon',
			1 => 'CTFun',
			5 => 'CTNamed',
			4 => 'CTOpt',
			3 => 'CTParent',
			0 => 'CTPath',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'CTAnon' => 1,
			'CTFun' => 2,
			'CTNamed' => 2,
			'CTOpt' => 1,
			'CTParent' => 1,
			'CTPath' => 2,
		];
	}
}

Boot::registerClass(CType::class, 'hscript.CType');
