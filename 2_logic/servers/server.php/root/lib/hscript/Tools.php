<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace hscript;

use \php\_Boot\HxAnon;
use \php\Boot;

class Tools {
	/**
	 * @param object $e
	 * 
	 * @return ExprDef
	 */
	public static function expr ($e) {
		#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:95: characters 3-13
		return $e->e;
	}

	/**
	 * @param object $e
	 * @param \Closure $f
	 * 
	 * @return void
	 */
	public static function iter ($e, $f) {
		#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:28: characters 11-18
		$_g = $e->e;
		$__hx__switch = ($_g->index);
		if ($__hx__switch === 0) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:29: characters 15-16
			$_g1 = $_g->params[0];
		} else if ($__hx__switch === 1) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:29: characters 26-27
			$_g1 = $_g->params[0];
		} else if ($__hx__switch === 2) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:30: characters 13-14
			$_g1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:30: characters 16-17
			$_g1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:30: characters 19-20
			$e = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:30: characters 23-43
			if ($e !== null) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:30: characters 39-43
				$f($e);
			}
		} else if ($__hx__switch === 3) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:31: characters 16-17
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:31: characters 20-24
			$f($e);
		} else if ($__hx__switch === 4) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:32: characters 15-17
			$el = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:32: characters 20-39
			$_g1 = 0;
			while ($_g1 < $el->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:32: characters 25-26
				$e = ($el->arr[$_g1] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:32: characters 20-39
				++$_g1;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:32: characters 35-39
				$f($e);
			}
		} else if ($__hx__switch === 5) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:33: characters 18-19
			$_g1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:33: characters 15-16
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:33: characters 22-26
			$f($e);
		} else if ($__hx__switch === 6) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:34: characters 15-16
			$_g1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:34: characters 18-20
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:34: characters 22-24
			$e2 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:34: characters 27-32
			$f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:34: characters 34-39
			$f($e2);
		} else if ($__hx__switch === 7) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:35: characters 14-15
			$_g1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:35: characters 17-18
			$_g1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:35: characters 20-21
			$e = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:35: characters 24-28
			$f($e);
		} else if ($__hx__switch === 8) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:36: characters 14-15
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:36: characters 17-21
			$args = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:36: characters 24-28
			$f($e);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:36: characters 30-51
			$_g1 = 0;
			while ($_g1 < $args->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:36: characters 35-36
				$a = ($args->arr[$_g1] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:36: characters 30-51
				++$_g1;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:36: characters 47-51
				$f($a);
			}
		} else if ($__hx__switch === 9) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:37: characters 12-13
			$c = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:37: characters 15-17
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:37: characters 19-21
			$e2 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:37: characters 24-28
			$f($c);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:37: characters 30-35
			$f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:37: characters 37-59
			if ($e2 !== null) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:37: characters 54-59
				$f($e2);
			}
		} else if ($__hx__switch === 10) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:38: characters 15-16
			$c = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:38: characters 18-19
			$e = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:38: characters 22-26
			$f($c);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:38: characters 28-32
			$f($e);
		} else if ($__hx__switch === 11) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:40: characters 13-14
			$_g1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:40: characters 16-18
			$it = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:40: characters 20-21
			$e = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:40: characters 24-29
			$f($it);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:40: characters 31-35
			$f($e);
		} else if ($__hx__switch === 12 || $__hx__switch === 13) {
		} else if ($__hx__switch === 14) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:42: characters 18-19
			$_g1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:42: characters 24-25
			$_g1 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:42: characters 27-28
			$_g1 = $_g->params[3];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:42: characters 21-22
			$e = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:42: characters 31-35
			$f($e);
		} else if ($__hx__switch === 15) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:43: characters 16-17
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:43: characters 20-40
			if ($e !== null) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:43: characters 36-40
				$f($e);
			}
		} else if ($__hx__switch === 16) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:44: characters 15-16
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:44: characters 18-19
			$i = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:44: characters 22-26
			$f($e);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:44: characters 28-32
			$f($i);
		} else if ($__hx__switch === 17) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:45: characters 19-21
			$el = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:45: characters 24-43
			$_g1 = 0;
			while ($_g1 < $el->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:45: characters 29-30
				$e = ($el->arr[$_g1] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:45: characters 24-43
				++$_g1;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:45: characters 39-43
				$f($e);
			}
		} else if ($__hx__switch === 18) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:46: characters 13-14
			$_g1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:46: characters 15-17
			$el = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:46: characters 20-39
			$_g1 = 0;
			while ($_g1 < $el->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:46: characters 25-26
				$e = ($el->arr[$_g1] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:46: characters 20-39
				++$_g1;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:46: characters 35-39
				$f($e);
			}
		} else if ($__hx__switch === 19) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:47: characters 15-16
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:47: characters 19-23
			$f($e);
		} else if ($__hx__switch === 20) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:48: characters 16-17
			$_g1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:48: characters 19-20
			$_g1 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:48: characters 13-14
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:48: characters 22-23
			$c = $_g->params[3];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:48: characters 26-30
			$f($e);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:48: characters 32-36
			$f($c);
		} else if ($__hx__switch === 21) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:49: characters 16-18
			$fl = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:49: characters 21-44
			$_g1 = 0;
			while ($_g1 < $fl->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:49: characters 26-28
				$fi = ($fl->arr[$_g1] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:49: characters 21-44
				++$_g1;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:49: characters 37-44
				$f($fi->e);
			}
		} else if ($__hx__switch === 22) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:50: characters 17-18
			$c = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:50: characters 20-22
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:50: characters 24-26
			$e2 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:50: characters 29-33
			$f($c);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:50: characters 35-40
			$f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:50: characters 42-47
			$f($e2);
		} else if ($__hx__switch === 23) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:51: characters 16-17
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:51: characters 19-24
			$cases = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:51: characters 26-29
			$def = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:52: characters 4-8
			$f($e);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:53: lines 53-56
			$_g1 = 0;
			while ($_g1 < $cases->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:53: characters 9-10
				$c = ($cases->arr[$_g1] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:53: lines 53-56
				++$_g1;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:54: characters 5-30
				$_g2 = 0;
				$_g3 = $c->values;
				while ($_g2 < $_g3->length) {
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:54: characters 10-11
					$v = ($_g3->arr[$_g2] ?? null);
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:54: characters 5-30
					++$_g2;
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:54: characters 26-30
					$f($v);
				}
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:55: characters 5-14
				$f($c->expr);
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:57: characters 4-28
			if ($def !== null) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:57: characters 22-28
				$f($def);
			}
		} else if ($__hx__switch === 24) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:39: characters 17-18
			$c = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:39: characters 20-21
			$e = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:39: characters 24-28
			$f($c);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:39: characters 30-34
			$f($e);
		} else if ($__hx__switch === 25) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 14-18
			$name = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 20-24
			$args = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 26-27
			$e = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 30-70
			if ($args !== null) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 49-70
				$_g1 = 0;
				while ($_g1 < $args->length) {
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 54-55
					$a = ($args->arr[$_g1] ?? null);
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 49-70
					++$_g1;
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 66-70
					$f($a);
				}
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:58: characters 72-76
			$f($e);
		} else if ($__hx__switch === 26) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:59: characters 21-22
			$_g1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:59: characters 19-20
			$e = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:59: characters 25-29
			$f($e);
		}
	}

	/**
	 * @param object $e
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	public static function map ($e, $f) {
		#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
		$edef = null;
		#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: characters 22-29
		$_g = $e->e;
		$__hx__switch = ($_g->index);
		if ($__hx__switch === 0) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:65: characters 15-16
			$_g1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = $e->e;
		} else if ($__hx__switch === 1) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:65: characters 26-27
			$_g1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = $e->e;
		} else if ($__hx__switch === 2) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:66: characters 13-14
			$n = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:66: characters 16-17
			$t = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:66: characters 19-20
			$e1 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EVar($n, $t, ($e1 !== null ? $f($e1) : null));
		} else if ($__hx__switch === 3) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:67: characters 16-17
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EParent($f($e1));
		} else if ($__hx__switch === 4) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:68: characters 15-17
			$el = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:68: characters 27-48
			$_g1 = new \Array_hx();
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:68: characters 28-47
			$_g2 = 0;
			while ($_g2 < $el->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:68: characters 33-34
				$e1 = ($el->arr[$_g2] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:68: characters 28-47
				++$_g2;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:68: characters 43-47
				$x = $f($e1);
				$_g1->arr[$_g1->length++] = $x;
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EBlock($_g1);
		} else if ($__hx__switch === 5) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:69: characters 15-16
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:69: characters 18-20
			$fi = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EField($f($e1), $fi);
		} else if ($__hx__switch === 6) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:70: characters 15-17
			$op = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:70: characters 19-21
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:70: characters 23-25
			$e2 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:70: characters 39-44
			$edef1 = $f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EBinop($op, $edef1, $f($e2));
		} else if ($__hx__switch === 7) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:71: characters 14-16
			$op = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:71: characters 18-21
			$pre = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:71: characters 23-24
			$e1 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EUnop($op, $pre, $f($e1));
		} else if ($__hx__switch === 8) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:72: characters 14-15
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:72: characters 17-21
			$args = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:72: characters 30-34
			$edef1 = $f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:72: characters 35-58
			$_g1 = new \Array_hx();
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:72: characters 36-57
			$_g2 = 0;
			while ($_g2 < $args->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:72: characters 41-42
				$a = ($args->arr[$_g2] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:72: characters 36-57
				++$_g2;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:72: characters 53-57
				$x = $f($a);
				$_g1->arr[$_g1->length++] = $x;
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::ECall($edef1, $_g1);
		} else if ($__hx__switch === 9) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:73: characters 12-13
			$c = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:73: characters 15-17
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:73: characters 19-21
			$e2 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:73: characters 28-32
			$edef1 = $f($c);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:73: characters 33-38
			$edef2 = $f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EIf($edef1, $edef2, ($e2 !== null ? $f($e2) : null));
		} else if ($__hx__switch === 10) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:74: characters 15-16
			$c = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:74: characters 18-19
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:74: characters 29-33
			$edef1 = $f($c);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EWhile($edef1, $f($e1));
		} else if ($__hx__switch === 11) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:76: characters 13-14
			$v = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:76: characters 16-18
			$it = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:76: characters 20-21
			$e1 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:76: characters 32-37
			$edef1 = $f($it);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EFor($v, $edef1, $f($e1));
		} else if ($__hx__switch === 12 || $__hx__switch === 13) {
			$edef = $e->e;
		} else if ($__hx__switch === 14) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:77: characters 18-22
			$args = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:77: characters 24-25
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:77: characters 27-31
			$name = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:77: characters 33-34
			$t = $_g->params[3];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EFunction($args, $f($e1), $name, $t);
		} else if ($__hx__switch === 15) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:78: characters 16-17
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EReturn(($e1 !== null ? $f($e1) : null));
		} else if ($__hx__switch === 16) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:79: characters 15-16
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:79: characters 18-19
			$i = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:79: characters 29-33
			$edef1 = $f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EArray($edef1, $f($i));
		} else if ($__hx__switch === 17) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:80: characters 19-21
			$el = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:80: characters 35-56
			$_g1 = new \Array_hx();
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:80: characters 36-55
			$_g2 = 0;
			while ($_g2 < $el->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:80: characters 41-42
				$e1 = ($el->arr[$_g2] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:80: characters 36-55
				++$_g2;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:80: characters 51-55
				$x = $f($e1);
				$_g1->arr[$_g1->length++] = $x;
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EArrayDecl($_g1);
		} else if ($__hx__switch === 18) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:81: characters 13-15
			$cl = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:81: characters 16-18
			$el = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:81: characters 29-50
			$_g1 = new \Array_hx();
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:81: characters 30-49
			$_g2 = 0;
			while ($_g2 < $el->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:81: characters 35-36
				$e1 = ($el->arr[$_g2] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:81: characters 30-49
				++$_g2;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:81: characters 45-49
				$x = $f($e1);
				$_g1->arr[$_g1->length++] = $x;
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::ENew($cl, $_g1);
		} else if ($__hx__switch === 19) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:82: characters 15-16
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EThrow($f($e1));
		} else if ($__hx__switch === 20) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:83: characters 13-14
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:83: characters 16-17
			$v = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:83: characters 19-20
			$t = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:83: characters 22-23
			$c = $_g->params[3];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:83: characters 31-35
			$edef1 = $f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::ETry($edef1, $v, $t, $f($c));
		} else if ($__hx__switch === 21) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:84: characters 16-18
			$fl = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:84: characters 29-78
			$_g1 = new \Array_hx();
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:84: characters 30-77
			$_g2 = 0;
			while ($_g2 < $fl->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:84: characters 35-37
				$fi = ($fl->arr[$_g2] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:84: characters 30-77
				++$_g2;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:84: characters 55-62
				$fi1 = $fi->name;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:84: characters 46-77
				$x = new _HxAnon_Tools0($fi1, $f($fi->e));
				$_g1->arr[$_g1->length++] = $x;
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EObject($_g1);
		} else if ($__hx__switch === 22) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:85: characters 17-18
			$c = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:85: characters 20-22
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:85: characters 24-26
			$e2 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:85: characters 38-42
			$edef1 = $f($c);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:85: characters 44-49
			$edef2 = $f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::ETernary($edef1, $edef2, $f($e2));
		} else if ($__hx__switch === 23) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 16-17
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 19-24
			$cases = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 26-29
			$def = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 40-44
			$edef1 = $f($e1);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 46-125
			$_g1 = new \Array_hx();
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 47-123
			$_g2 = 0;
			while ($_g2 < $cases->length) {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 52-53
				$c = ($cases->arr[$_g2] ?? null);
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 47-123
				++$_g2;
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 76-103
				$_g3 = new \Array_hx();
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 77-102
				$_g4 = 0;
				$_g5 = $c->values;
				while ($_g4 < $_g5->length) {
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 82-83
					$v = ($_g5->arr[$_g4] ?? null);
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 77-102
					++$_g4;
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 98-102
					$x = $f($v);
					$_g3->arr[$_g3->length++] = $x;
				}
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:86: characters 65-123
				$x1 = new _HxAnon_Tools1($_g3, $f($c->expr));
				$_g1->arr[$_g1->length++] = $x1;
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::ESwitch($edef1, $_g1, ($def === null ? null : $f($def)));
		} else if ($__hx__switch === 24) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:75: characters 17-18
			$c = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:75: characters 20-21
			$e1 = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:75: characters 33-37
			$edef1 = $f($c);
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EDoWhile($edef1, $f($e1));
		} else if ($__hx__switch === 25) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 14-18
			$name = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 20-24
			$args = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 26-27
			$e1 = $_g->params[2];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 42-87
			$edef1 = null;
			if ($args === null) {
				$edef1 = null;
			} else {
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 64-87
				$_g1 = new \Array_hx();
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 65-86
				$_g2 = 0;
				while ($_g2 < $args->length) {
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 70-71
					$a = ($args->arr[$_g2] ?? null);
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 65-86
					++$_g2;
					#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 82-86
					$x = $f($a);
					$_g1->arr[$_g1->length++] = $x;
				}
				#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:87: characters 42-87
				$edef1 = $_g1;
			}
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::EMeta($name, $edef1, $f($e1));
		} else if ($__hx__switch === 26) {
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:88: characters 19-20
			$e1 = $_g->params[0];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:88: characters 21-22
			$t = $_g->params[1];
			#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:64: lines 64-89
			$edef = ExprDef::ECheckType($f($e1), $t);
		}
		#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:90: characters 3-21
		return new _HxAnon_Tools2($edef, $e->pmin, $e->pmax, $e->origin, $e->line);
	}

	/**
	 * @param ExprDef $e
	 * @param object $p
	 * 
	 * @return object
	 */
	public static function mk ($e, $p) {
		#C:\HaxeToolkit\haxe\lib\hscript/2,5,0/hscript/Tools.hx:103: characters 3-83
		return new _HxAnon_Tools2($e, $p->pmin, $p->pmax, $p->origin, $p->line);
	}
}

class _HxAnon_Tools0 extends HxAnon {
	function __construct($name, $e) {
		$this->name = $name;
		$this->e = $e;
	}
}

class _HxAnon_Tools1 extends HxAnon {
	function __construct($values, $expr) {
		$this->values = $values;
		$this->expr = $expr;
	}
}

class _HxAnon_Tools2 extends HxAnon {
	function __construct($e, $pmin, $pmax, $origin, $line) {
		$this->e = $e;
		$this->pmin = $pmin;
		$this->pmax = $pmax;
		$this->origin = $origin;
		$this->line = $line;
	}
}

Boot::registerClass(Tools::class, 'hscript.Tools');
