<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\svc\transport;

use \php\Boot;

class MethodCall {
	/**
	 * @var string
	 */
	public $LogicClass;
	/**
	 * @var string
	 */
	public $LogicMethod;
	/**
	 * @var string
	 */
	public $LogicModule;
	/**
	 * @var mixed[]|\Array_hx
	 */
	public $LogicParams;
	/**
	 * @var string
	 */
	public $Name;

	/**
	 * @return void
	 */
	public function __construct () {
	}

	/**
	 * @return string
	 */
	public function get_LogicClass () {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:28: characters 9-26
		return $this->LogicClass;
	}

	/**
	 * @return string
	 */
	public function get_LogicMethod () {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:36: characters 9-27
		return $this->LogicMethod;
	}

	/**
	 * @return string
	 */
	public function get_LogicModule () {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:20: characters 9-27
		return $this->LogicModule;
	}

	/**
	 * @return mixed[]|\Array_hx
	 */
	public function get_LogicParams () {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:44: characters 9-27
		return $this->LogicParams;
	}

	/**
	 * @return string
	 */
	public function get_Name () {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:48: characters 9-20
		return $this->Name;
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function set_LogicClass ($value) {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:24: characters 9-39
		return $this->LogicClass = $value;
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function set_LogicMethod ($value) {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:32: characters 9-40
		return $this->LogicMethod = $value;
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function set_LogicModule ($value) {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:16: characters 9-40
		return $this->LogicModule = $value;
	}

	/**
	 * @param mixed[]|\Array_hx $value
	 * 
	 * @return mixed[]|\Array_hx
	 */
	public function set_LogicParams ($value) {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:40: characters 9-40
		return $this->LogicParams = $value;
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function set_Name ($value) {
		#5_framework\svc\src/nMorph/framework/svc/transport/MethodCall.hx:52: characters 9-33
		return $this->Name = $value;
	}
}

Boot::registerClass(MethodCall::class, 'nMorph.framework.svc.transport.MethodCall');
Boot::registerGetters('nMorph\\framework\\svc\\transport\\MethodCall', [
	'Name' => true,
	'LogicParams' => true,
	'LogicMethod' => true,
	'LogicClass' => true,
	'LogicModule' => true
]);
Boot::registerSetters('nMorph\\framework\\svc\\transport\\MethodCall', [
	'Name' => true,
	'LogicParams' => true,
	'LogicMethod' => true,
	'LogicClass' => true,
	'LogicModule' => true
]);
