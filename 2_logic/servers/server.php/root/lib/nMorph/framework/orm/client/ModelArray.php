<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\orm\client;

use \nMorph\framework\orm\common\enums\ObjectSourceTypeEnum;
use \php\Boot;
use \nMorph\framework\orm\interfaces\IClause;
use \nMorph\framework\common\exceptions\ExceptionHelper;
use \nMorph\framework\orm\common\enums\ObjectEditTypeEnum;
use \nMorph\framework\orm\tools\Context;
use \haxe\iterators\ArrayIterator;

class ModelArray {
	/**
	 * @var string
	 */
	static public $__rtti = "<class path=\"nMorph.framework.orm.client.ModelArray\" params=\"T\">\x0A\x09<arr public=\"1\" get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</arr>\x0A\x09<set_arr set=\"method\" line=\"18\"><f a=\"value\">\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c>\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c>\x0A</f></set_arr>\x0A\x09<get_arr set=\"method\" line=\"23\"><f a=\"\"><c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c></f></get_arr>\x0A\x09<Include public=\"1\" set=\"method\" line=\"38\"><f a=\"clause:laClase:context\">\x0A\x09<c path=\"nMorph.framework.orm.interfaces.IClause\"/>\x0A\x09<d/>\x0A\x09<c path=\"nMorph.framework.orm.tools.Context\"/>\x0A\x09<x path=\"Void\"/>\x0A</f></Include>\x0A\x09<Add public=\"1\" set=\"method\" line=\"65\"><f a=\"x\">\x0A\x09<c path=\"nMorph.framework.orm.client.ModelArray.T\"/>\x0A\x09<x path=\"Int\"/>\x0A</f></Add>\x0A\x09<Remove public=\"1\" set=\"method\" line=\"74\"><f a=\"x\">\x0A\x09<c path=\"nMorph.framework.orm.client.ModelArray.T\"/>\x0A\x09<x path=\"Bool\"/>\x0A</f></Remove>\x0A\x09<Insert public=\"1\" set=\"method\" line=\"88\"><f a=\"pos:x\">\x0A\x09<x path=\"Int\"/>\x0A\x09<c path=\"nMorph.framework.orm.client.ModelArray.T\"/>\x0A\x09<x path=\"Void\"/>\x0A</f></Insert>\x0A\x09<Filter public=\"1\" set=\"method\" line=\"93\"><f a=\"f\">\x0A\x09<f a=\"\">\x0A\x09\x09<c path=\"nMorph.framework.orm.client.ModelArray.T\"/>\x0A\x09\x09<x path=\"Bool\"/>\x0A\x09</f>\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c>\x0A</f></Filter>\x0A\x09<iterator public=\"1\" set=\"method\" line=\"98\"><f a=\"\"><t path=\"Iterator\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></t></f></iterator>\x0A\x09<Save public=\"1\" set=\"method\" line=\"103\"><f a=\"queue\">\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\x0A</f></Save>\x0A\x09<Clear public=\"1\" set=\"method\" line=\"116\"><f a=\"\"><x path=\"Void\"/></f></Clear>\x0A\x09<new public=\"1\" set=\"method\" line=\"138\"><f a=\"\"><x path=\"Void\"/></f></new>\x0A\x09<meta>\x0A\x09\x09<m n=\":directlyUsed\"/>\x0A\x09\x09<m n=\":keepSub\"/>\x0A\x09\x09<m n=\":rtti\"/>\x0A\x09</meta>\x0A</class>";

	/**
	 * @var mixed[]|\Array_hx
	 */
	public $arr;

	/**
	 * @return void
	 */
	public function __construct () {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:139: characters 3-23
		$this->set_arr(new \Array_hx());
	}

	/**
	 * @param mixed $x
	 * 
	 * @return int
	 */
	public function Add ($x) {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:66: lines 66-67
		if (!($x instanceof ModelObject)) {
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:67: characters 4-71
			ExceptionHelper::LogicException(1, "Objects should be ModelObjects");
		}
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:68: characters 10-21
		$_this = $this->get_arr();
		$_this->arr[$_this->length++] = $x;
		return $_this->length;
	}

	/**
	 * @return void
	 */
	public function Clear () {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:117: lines 117-134
		$_g = 0;
		$_g1 = $this->get_arr();
		while ($_g < $_g1->length) {
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:117: characters 8-12
			$item = ($_g1->arr[$_g] ?? null);
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:117: lines 117-134
			++$_g;
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:119: lines 119-133
			if (($item instanceof ModelObject)) {
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:121: characters 5-50
				$mo = Boot::typedCast(Boot::getClass(ModelObject::class), $item);
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:123: lines 123-132
				if ($mo->get_ObjectEditType() === ObjectEditTypeEnum::DELETE()) {
					#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:126: characters 6-22
					$this->get_arr()->remove($item);
				} else {
					#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:131: characters 6-16
					$mo->Clear();
				}
			}
		}
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return mixed[]|\Array_hx
	 */
	public function Filter ($f) {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:94: characters 10-23
		$_this = $this->get_arr();
		$result = [];
		$data = $_this->arr;
		$_g_current = 0;
		$_g_length = \count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			if ($f($item)) {
				$result[] = $item;
			}
		}
		return \Array_hx::wrap($result);
	}

	/**
	 * @param IClause $clause
	 * @param mixed $laClase
	 * @param Context $context
	 * 
	 * @return void
	 */
	public function Include ($clause, $laClase, $context) {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:40: characters 3-40
		$clase = \Type::getClass($laClase);
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:41: characters 3-43
		$name = \Type::getClassName($clase);
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:43: characters 3-42
		$type = \Type::resolveClass($name);
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:45: characters 3-53
		$DBresult = $clause->Read($type, $context);
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:46: lines 46-61
		$_g = 0;
		while ($_g < $DBresult->length) {
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:46: characters 8-12
			$item = ($DBresult->arr[$_g] ?? null);
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:46: lines 46-61
			++$_g;
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:49: lines 49-60
			if (($item instanceof ModelObject)) {
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:51: characters 5-50
				$mo = Boot::typedCast(Boot::getClass(ModelObject::class), $item);
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:52: characters 5-27
				$mo->set_TrackChanges(true);
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:53: characters 5-52
				$mo->set_ObjectEditType(ObjectEditTypeEnum::NOCHANGE());
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:54: characters 5-46
				$mo->set_ObjectSource(ObjectSourceTypeEnum::DB());
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:55: characters 5-14
				$this->Add($item);
			} else {
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:59: characters 5-72
				ExceptionHelper::LogicException(1, "Objects should be ModelObjects");
			}
		}
	}

	/**
	 * @param int $pos
	 * @param mixed $x
	 * 
	 * @return void
	 */
	public function Insert ($pos, $x) {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:89: characters 3-21
		$this->get_arr()->insert($pos, $x);
	}

	/**
	 * @param mixed $x
	 * 
	 * @return bool
	 */
	public function Remove ($x) {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:75: lines 75-76
		if (!($x instanceof ModelObject)) {
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:76: characters 4-71
			ExceptionHelper::LogicException(1, "Objects should be ModelObjects");
		}
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:78: characters 3-45
		$mo = Boot::typedCast(Boot::getClass(ModelObject::class), $x);
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:81: characters 3-48
		$mo->set_ObjectEditType(ObjectEditTypeEnum::DELETE());
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:84: characters 3-14
		return true;
	}

	/**
	 * @param QueueItem[]|\Array_hx $queue
	 * 
	 * @return QueueItem[]|\Array_hx
	 */
	public function Save ($queue) {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:104: lines 104-111
		$_g = 0;
		$_g1 = $this->get_arr();
		while ($_g < $_g1->length) {
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:104: characters 8-12
			$item = ($_g1->arr[$_g] ?? null);
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:104: lines 104-111
			++$_g;
			#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:106: lines 106-110
			if (($item instanceof ModelObject)) {
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:108: characters 5-50
				$mo = Boot::typedCast(Boot::getClass(ModelObject::class), $item);
				#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:109: characters 5-27
				$queue = $mo->Save($queue);
			}
		}
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:112: characters 3-15
		return $queue;
	}

	/**
	 * @return mixed[]|\Array_hx
	 */
	public function get_arr () {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:24: characters 3-13
		return $this->arr;
	}

	/**
	 * @return object
	 */
	public function iterator () {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:99: characters 10-24
		return new ArrayIterator($this->get_arr());
	}

	/**
	 * @param mixed[]|\Array_hx $value
	 * 
	 * @return mixed[]|\Array_hx
	 */
	public function set_arr ($value) {
		#5_framework\orm\src/nMorph/framework/orm/client/ModelArray.hx:19: characters 3-26
		return $this->arr = $value;
	}
}

Boot::registerClass(ModelArray::class, 'nMorph.framework.orm.client.ModelArray');
Boot::registerGetters('nMorph\\framework\\orm\\client\\ModelArray', [
	'arr' => true
]);
Boot::registerSetters('nMorph\\framework\\orm\\client\\ModelArray', [
	'arr' => true
]);
