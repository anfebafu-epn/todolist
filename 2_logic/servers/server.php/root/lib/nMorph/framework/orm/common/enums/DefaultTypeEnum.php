<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\orm\common\enums;

use \php\Boot;
use \php\_Boot\HxEnum;

class DefaultTypeEnum extends HxEnum {
	/**
	 * @return DefaultTypeEnum
	 */
	static public function DEFBOOL () {
		static $inst = null;
		if (!$inst) $inst = new DefaultTypeEnum('DEFBOOL', 4, []);
		return $inst;
	}

	/**
	 * @return DefaultTypeEnum
	 */
	static public function DEFDATE () {
		static $inst = null;
		if (!$inst) $inst = new DefaultTypeEnum('DEFDATE', 3, []);
		return $inst;
	}

	/**
	 * @return DefaultTypeEnum
	 */
	static public function DEFDOUBLE () {
		static $inst = null;
		if (!$inst) $inst = new DefaultTypeEnum('DEFDOUBLE', 2, []);
		return $inst;
	}

	/**
	 * @return DefaultTypeEnum
	 */
	static public function DEFINT () {
		static $inst = null;
		if (!$inst) $inst = new DefaultTypeEnum('DEFINT', 1, []);
		return $inst;
	}

	/**
	 * @return DefaultTypeEnum
	 */
	static public function DEFVARCHAR () {
		static $inst = null;
		if (!$inst) $inst = new DefaultTypeEnum('DEFVARCHAR', 0, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			4 => 'DEFBOOL',
			3 => 'DEFDATE',
			2 => 'DEFDOUBLE',
			1 => 'DEFINT',
			0 => 'DEFVARCHAR',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'DEFBOOL' => 0,
			'DEFDATE' => 0,
			'DEFDOUBLE' => 0,
			'DEFINT' => 0,
			'DEFVARCHAR' => 0,
		];
	}
}

Boot::registerClass(DefaultTypeEnum::class, 'nMorph.framework.orm.common.enums.DefaultTypeEnum');
