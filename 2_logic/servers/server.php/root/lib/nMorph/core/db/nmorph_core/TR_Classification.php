<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\core\db\nmorph_core;

use \nMorph\framework\orm\lang\SQL;
use \nMorph\framework\orm\interfaces\ICondition;
use \nMorph\framework\orm\common\sentences\Val;
use \nMorph\framework\orm\client\ModelObject;
use \php\Boot;
use \nMorph\framework\orm\common\enums\Op;
use \nMorph\framework\orm\interfaces\ISource;
use \nMorph\framework\orm\common\conditions\Condition;
use \nMorph\framework\orm\common\clauses\WhereClause;
use \nMorph\framework\orm\client\ChangeItem;
use \nMorph\framework\orm\common\fields\VarcharSentence;
use \nMorph\framework\common\datatypes\UUID;
use \nMorph\framework\orm\common\sources\TableSource;
use \nMorph\framework\orm\common\fields\SmallIntegerSentence;
use \nMorph\framework\orm\common\fields\UUIDSentence;
use \nMorph\framework\orm\common\enums\NullableEnum;

/**
 * ...
 * @author Smartwork
 */
class TR_Classification extends ModelObject {
	/**
	 * @var string
	 */
	static public $__rtti = "<class path=\"nMorph.core.db.nmorph_core.TR_Classification\" params=\"\">\x0A\x09<extends path=\"nMorph.framework.orm.client.ModelObject\"/>\x0A\x09<table public=\"1\" expr=\"new TableSource(&quot;TR_Classification&quot;)\" line=\"33\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.interfaces.ISource\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new TableSource(\"TR_Classification\")</e></m></meta>\x0A\x09\x09<haxe_doc>* referencia a tabla para consultas</haxe_doc>\x0A\x09</table>\x0A\x09<col_ClassificationID public=\"1\" expr=\"new UUIDSentence(&quot;TR_Classification&quot;, &quot;ClassificationID&quot;, NullableEnum.NOTNULL, true)\" line=\"37\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"TR_Classification\", \"ClassificationID\", NullableEnum.NOTNULL, true)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna ClassificationID</haxe_doc>\x0A\x09</col_ClassificationID>\x0A\x09<col_TenantID public=\"1\" expr=\"new UUIDSentence(&quot;TR_Classification&quot;, &quot;TenantID&quot;, NullableEnum.NULL, false)\" line=\"42\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"TR_Classification\", \"TenantID\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna TenantID</haxe_doc>\x0A\x09</col_TenantID>\x0A\x09<col_RecordID public=\"1\" expr=\"new UUIDSentence(&quot;TR_Classification&quot;, &quot;RecordID&quot;, NullableEnum.NULL, false)\" line=\"47\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"TR_Classification\", \"RecordID\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna RecordID</haxe_doc>\x0A\x09</col_RecordID>\x0A\x09<col_SelectedOptionID public=\"1\" expr=\"new UUIDSentence(&quot;TR_Classification&quot;, &quot;SelectedOptionID&quot;, NullableEnum.NULL, false)\" line=\"52\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"TR_Classification\", \"SelectedOptionID\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna SelectedOptionID</haxe_doc>\x0A\x09</col_SelectedOptionID>\x0A\x09<col_SelectedOptionName public=\"1\" expr=\"new VarcharSentence(&quot;TR_Classification&quot;, &quot;SelectedOptionName&quot;, 250, NullableEnum.NULL, false)\" line=\"57\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.VarcharSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new VarcharSentence(\"TR_Classification\", \"SelectedOptionName\", 250, NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna SelectedOptionName</haxe_doc>\x0A\x09</col_SelectedOptionName>\x0A\x09<col_Status public=\"1\" expr=\"new SmallIntegerSentence(&quot;TR_Classification&quot;, &quot;Status&quot;, NullableEnum.NULL, false)\" line=\"62\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.SmallIntegerSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new SmallIntegerSentence(\"TR_Classification\", \"Status\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna Status</haxe_doc>\x0A\x09</col_Status>\x0A\x09<WHERE public=\"1\" set=\"method\" line=\"70\" static=\"1\">\x0A\x09\x09<f a=\"Condition\">\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.interfaces.ICondition\"/>\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\x0A\x09\x09</f>\x0A\x09\x09<haxe_doc>* inicio r√°pido de filtro\x0A\x09 * @param\x09Filtro\x0A\x09 * @return objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\x0A\x09</WHERE>\x0A\x09<BYPK public=\"1\" set=\"method\" line=\"79\" static=\"1\">\x0A\x09\x09<f a=\"val_ClassificationID\">\x0A\x09\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\x0A\x09\x09</f>\x0A\x09\x09<haxe_doc>* filtro por clave primaria\x0A\x09 * @param\x09valor de clave primaria\x0A\x09 * @return  objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\x0A\x09</BYPK>\x0A\x09<ClassificationID get=\"accessor\" set=\"null\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</ClassificationID>\x0A\x09<get_ClassificationID public=\"1\" set=\"method\" line=\"85\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_ClassificationID>\x0A\x09<TenantID get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</TenantID>\x0A\x09<get_TenantID public=\"1\" set=\"method\" line=\"92\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_TenantID>\x0A\x09<set_TenantID public=\"1\" set=\"method\" line=\"96\"><f a=\"value\">\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A</f></set_TenantID>\x0A\x09<RecordID get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</RecordID>\x0A\x09<get_RecordID public=\"1\" set=\"method\" line=\"106\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_RecordID>\x0A\x09<set_RecordID public=\"1\" set=\"method\" line=\"110\"><f a=\"value\">\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A</f></set_RecordID>\x0A\x09<SelectedOptionID get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</SelectedOptionID>\x0A\x09<get_SelectedOptionID public=\"1\" set=\"method\" line=\"120\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_SelectedOptionID>\x0A\x09<set_SelectedOptionID public=\"1\" set=\"method\" line=\"124\"><f a=\"value\">\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A</f></set_SelectedOptionID>\x0A\x09<SelectedOptionName get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"String\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</SelectedOptionName>\x0A\x09<get_SelectedOptionName public=\"1\" set=\"method\" line=\"134\"><f a=\"\"><c path=\"String\"/></f></get_SelectedOptionName>\x0A\x09<set_SelectedOptionName public=\"1\" set=\"method\" line=\"138\"><f a=\"value\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"String\"/>\x0A</f></set_SelectedOptionName>\x0A\x09<Status get=\"accessor\" set=\"accessor\">\x0A\x09\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</Status>\x0A\x09<get_Status public=\"1\" set=\"method\" line=\"148\"><f a=\"\"><x path=\"Null\"><x path=\"Int\"/></x></f></get_Status>\x0A\x09<set_Status public=\"1\" set=\"method\" line=\"152\"><f a=\"value\">\x0A\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A</f></set_Status>\x0A\x09<new public=\"1\" set=\"method\" line=\"25\">\x0A\x09\x09<f a=\"\"><x path=\"Void\"/></f>\x0A\x09\x09<haxe_doc>* Constructor de la clase TR_Classification que tiene equivalencia con la tabla de la base de datos</haxe_doc>\x0A\x09</new>\x0A\x09<haxe_doc>* ...\x0A * @author Smartwork</haxe_doc>\x0A\x09<meta>\x0A\x09\x09<m n=\":keepSub\"/>\x0A\x09\x09<m n=\":rtti\"/>\x0A\x09</meta>\x0A</class>";
	/**
	 * @var UUIDSentence
	 * Referencia a columna ClassificationID
	 */
	static public $col_ClassificationID;
	/**
	 * @var UUIDSentence
	 * Referencia a columna RecordID
	 */
	static public $col_RecordID;
	/**
	 * @var UUIDSentence
	 * Referencia a columna SelectedOptionID
	 */
	static public $col_SelectedOptionID;
	/**
	 * @var VarcharSentence
	 * Referencia a columna SelectedOptionName
	 */
	static public $col_SelectedOptionName;
	/**
	 * @var SmallIntegerSentence
	 * Referencia a columna Status
	 */
	static public $col_Status;
	/**
	 * @var UUIDSentence
	 * Referencia a columna TenantID
	 */
	static public $col_TenantID;
	/**
	 * @var ISource
	 * referencia a tabla para consultas
	 */
	static public $table;

	/**
	 * @var UUID
	 */
	public $ClassificationID;
	/**
	 * @var UUID
	 */
	public $RecordID;
	/**
	 * @var UUID
	 */
	public $SelectedOptionID;
	/**
	 * @var string
	 */
	public $SelectedOptionName;
	/**
	 * @var int
	 */
	public $Status;
	/**
	 * @var UUID
	 */
	public $TenantID;

	/**
	 * filtro por clave primaria
	 * @param	valor de clave primaria
	 * @return  objeto para aplicar otras condiciones o ejecutar el query
	 * 
	 * @param UUID $val_ClassificationID
	 * 
	 * @return WhereClause
	 */
	public static function BYPK ($val_ClassificationID) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:80: characters 3-119
		return SQL::SELECT()->FROM(TR_Classification::$table)->WHERE(Condition::SET(TR_Classification::$col_ClassificationID, Op::Equal(), Val::uuid($val_ClassificationID)));
	}

	/**
	 * inicio r√°pido de filtro
	 * @param	Filtro
	 * @return objeto para aplicar otras condiciones o ejecutar el query
	 * 
	 * @param ICondition $Condition
	 * 
	 * @return WhereClause
	 */
	public static function WHERE ($Condition) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:71: characters 3-51
		return SQL::SELECT()->FROM(TR_Classification::$table)->WHERE($Condition);
	}

	/**
	 * Constructor de la clase TR_Classification que tiene equivalencia con la tabla de la base de datos
	 * 
	 * @return void
	 */
	public function __construct () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:27: characters 3-10
		parent::__construct();
	}

	/**
	 * @return UUID
	 */
	public function get_ClassificationID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:86: characters 3-26
		return $this->ClassificationID;
	}

	/**
	 * @return UUID
	 */
	public function get_RecordID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:107: characters 3-18
		return $this->RecordID;
	}

	/**
	 * @return UUID
	 */
	public function get_SelectedOptionID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:121: characters 3-26
		return $this->SelectedOptionID;
	}

	/**
	 * @return string
	 */
	public function get_SelectedOptionName () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:135: characters 3-28
		return $this->SelectedOptionName;
	}

	/**
	 * @return int
	 */
	public function get_Status () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:149: characters 3-16
		return $this->Status;
	}

	/**
	 * @return UUID
	 */
	public function get_TenantID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:93: characters 3-18
		return $this->TenantID;
	}

	/**
	 * @param UUID $value
	 * 
	 * @return UUID
	 */
	public function set_RecordID ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:113: characters 3-108
		if ($this->get_TrackChanges() && ($this->get_RecordID() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:113: characters 72-84
			$tmp = TR_Classification::$col_RecordID;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:113: characters 47-108
			$this->AddChange(new ChangeItem($tmp, $this->get_RecordID(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:114: characters 3-24
		return $this->RecordID = $value;
	}

	/**
	 * @param UUID $value
	 * 
	 * @return UUID
	 */
	public function set_SelectedOptionID ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:127: characters 3-132
		if ($this->get_TrackChanges() && ($this->get_SelectedOptionID() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:127: characters 80-100
			$tmp = TR_Classification::$col_SelectedOptionID;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:127: characters 55-132
			$this->AddChange(new ChangeItem($tmp, $this->get_SelectedOptionID(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:128: characters 3-32
		return $this->SelectedOptionID = $value;
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function set_SelectedOptionName ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:141: characters 3-138
		if ($this->get_TrackChanges() && ($this->get_SelectedOptionName() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:141: characters 82-104
			$tmp = TR_Classification::$col_SelectedOptionName;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:141: characters 57-138
			$this->AddChange(new ChangeItem($tmp, $this->get_SelectedOptionName(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:142: characters 3-34
		return $this->SelectedOptionName = $value;
	}

	/**
	 * @param int $value
	 * 
	 * @return int
	 */
	public function set_Status ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:155: characters 3-102
		if ($this->get_TrackChanges() && ($this->get_Status() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:155: characters 70-80
			$tmp = TR_Classification::$col_Status;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:155: characters 45-102
			$this->AddChange(new ChangeItem($tmp, $this->get_Status(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:156: characters 3-22
		return $this->Status = $value;
	}

	/**
	 * @param UUID $value
	 * 
	 * @return UUID
	 */
	public function set_TenantID ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:99: characters 3-108
		if ($this->get_TrackChanges() && ($this->get_TenantID() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:99: characters 72-84
			$tmp = TR_Classification::$col_TenantID;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:99: characters 47-108
			$this->AddChange(new ChangeItem($tmp, $this->get_TenantID(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_Classification.hx:100: characters 3-24
		return $this->TenantID = $value;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$table = new TableSource("TR_Classification");
		self::$col_ClassificationID = new UUIDSentence("TR_Classification", "ClassificationID", NullableEnum::NOTNULL(), true);
		self::$col_TenantID = new UUIDSentence("TR_Classification", "TenantID", NullableEnum::NULL(), false);
		self::$col_RecordID = new UUIDSentence("TR_Classification", "RecordID", NullableEnum::NULL(), false);
		self::$col_SelectedOptionID = new UUIDSentence("TR_Classification", "SelectedOptionID", NullableEnum::NULL(), false);
		self::$col_SelectedOptionName = new VarcharSentence("TR_Classification", "SelectedOptionName", 250, NullableEnum::NULL(), false);
		self::$col_Status = new SmallIntegerSentence("TR_Classification", "Status", NullableEnum::NULL(), false);
	}
}

Boot::registerClass(TR_Classification::class, 'nMorph.core.db.nmorph_core.TR_Classification');
Boot::registerGetters('nMorph\\core\\db\\nmorph_core\\TR_Classification', [
	'Status' => true,
	'SelectedOptionName' => true,
	'SelectedOptionID' => true,
	'RecordID' => true,
	'TenantID' => true,
	'ClassificationID' => true
]);
Boot::registerSetters('nMorph\\core\\db\\nmorph_core\\TR_Classification', [
	'Status' => true,
	'SelectedOptionName' => true,
	'SelectedOptionID' => true,
	'RecordID' => true,
	'TenantID' => true
]);
TR_Classification::__hx__init();
