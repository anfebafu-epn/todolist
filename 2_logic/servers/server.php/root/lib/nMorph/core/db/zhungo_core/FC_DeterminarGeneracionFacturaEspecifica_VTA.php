<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\core\db\zhungo_core;

use \nMorph\framework\orm\lang\SQL;
use \nMorph\framework\orm\interfaces\ICondition;
use \nMorph\framework\orm\common\sentences\Val;
use \nMorph\framework\orm\client\ModelObject;
use \php\Boot;
use \nMorph\framework\orm\common\enums\Op;
use \nMorph\framework\orm\interfaces\ISource;
use \nMorph\framework\orm\common\conditions\Condition;
use \nMorph\framework\orm\common\sources\ViewSource;
use \nMorph\framework\orm\common\clauses\WhereClause;
use \nMorph\framework\orm\client\ChangeItem;
use \nMorph\framework\orm\common\fields\VarcharSentence;
use \nMorph\framework\common\datatypes\UUID;
use \nMorph\framework\orm\common\fields\UUIDSentence;
use \nMorph\framework\orm\common\enums\NullableEnum;

/**
 * ...
 * @author Smartwork
 */
class FC_DeterminarGeneracionFacturaEspecifica_VTA extends ModelObject {
	/**
	 * @var string
	 */
	static public $__rtti = "<class path=\"nMorph.core.db.zhungo_core.FC_DeterminarGeneracionFacturaEspecifica_VTA\" params=\"\">\x0A\x09<extends path=\"nMorph.framework.orm.client.ModelObject\"/>\x0A\x09<view public=\"1\" expr=\"new ViewSource(&quot;FC_DeterminarGeneracionFacturaEspecifica_VTA&quot;)\" line=\"33\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.interfaces.ISource\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new ViewSource(\"FC_DeterminarGeneracionFacturaEspecifica_VTA\")</e></m></meta>\x0A\x09\x09<haxe_doc>* referencia a vista para consultas</haxe_doc>\x0A\x09</view>\x0A\x09<col_csv public=\"1\" expr=\"new VarcharSentence(&quot;FC_DeterminarGeneracionFacturaEspecifica_VTA&quot;, &quot;csv&quot;, -1, NullableEnum.NULL, true)\" line=\"37\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.VarcharSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new VarcharSentence(\"FC_DeterminarGeneracionFacturaEspecifica_VTA\", \"csv\", -1, NullableEnum.NULL, true)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna csv</haxe_doc>\x0A\x09</col_csv>\x0A\x09<col_IDFactura public=\"1\" expr=\"new UUIDSentence(&quot;FC_DeterminarGeneracionFacturaEspecifica_VTA&quot;, &quot;IDFactura&quot;, NullableEnum.NULL, false)\" line=\"42\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"FC_DeterminarGeneracionFacturaEspecifica_VTA\", \"IDFactura\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna IDFactura</haxe_doc>\x0A\x09</col_IDFactura>\x0A\x09<WHERE public=\"1\" set=\"method\" line=\"50\" static=\"1\">\x0A\x09\x09<f a=\"Condition\">\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.interfaces.ICondition\"/>\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\x0A\x09\x09</f>\x0A\x09\x09<haxe_doc>* inicio rápido de filtro\x0A\x09 * @param\x09Filtro\x0A\x09 * @return objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\x0A\x09</WHERE>\x0A\x09<BYPK public=\"1\" set=\"method\" line=\"59\" static=\"1\">\x0A\x09\x09<f a=\"val_csv\">\x0A\x09\x09\x09<c path=\"String\"/>\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\x0A\x09\x09</f>\x0A\x09\x09<haxe_doc>* filtro por clave primaria\x0A\x09 * @param\x09valor de clave primaria\x0A\x09 * @return  objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\x0A\x09</BYPK>\x0A\x09<csv get=\"accessor\" set=\"null\">\x0A\x09\x09<c path=\"String\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</csv>\x0A\x09<get_csv public=\"1\" set=\"method\" line=\"65\"><f a=\"\"><c path=\"String\"/></f></get_csv>\x0A\x09<IDFactura get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</IDFactura>\x0A\x09<get_IDFactura public=\"1\" set=\"method\" line=\"72\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_IDFactura>\x0A\x09<set_IDFactura public=\"1\" set=\"method\" line=\"76\"><f a=\"value\">\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A</f></set_IDFactura>\x0A\x09<new public=\"1\" set=\"method\" line=\"25\">\x0A\x09\x09<f a=\"\"><x path=\"Void\"/></f>\x0A\x09\x09<haxe_doc>* Constructor de la clase FC_DeterminarGeneracionFacturaEspecifica_VTA que tiene equivalencia con la tabla de la base de datos</haxe_doc>\x0A\x09</new>\x0A\x09<haxe_doc>* ...\x0A * @author Smartwork</haxe_doc>\x0A\x09<meta>\x0A\x09\x09<m n=\":keepSub\"/>\x0A\x09\x09<m n=\":rtti\"/>\x0A\x09</meta>\x0A</class>";
	/**
	 * @var UUIDSentence
	 * Referencia a columna IDFactura
	 */
	static public $col_IDFactura;
	/**
	 * @var VarcharSentence
	 * Referencia a columna csv
	 */
	static public $col_csv;
	/**
	 * @var ISource
	 * referencia a vista para consultas
	 */
	static public $view;

	/**
	 * @var UUID
	 */
	public $IDFactura;
	/**
	 * @var string
	 */
	public $csv;

	/**
	 * filtro por clave primaria
	 * @param	valor de clave primaria
	 * @return  objeto para aplicar otras condiciones o ejecutar el query
	 * 
	 * @param string $val_csv
	 * 
	 * @return WhereClause
	 */
	public static function BYPK ($val_csv) {
		#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:60: characters 3-94
		return SQL::SELECT()->FROM(FC_DeterminarGeneracionFacturaEspecifica_VTA::$view)->WHERE(Condition::SET(FC_DeterminarGeneracionFacturaEspecifica_VTA::$col_csv, Op::Equal(), Val::string($val_csv)));
	}

	/**
	 * inicio rápido de filtro
	 * @param	Filtro
	 * @return objeto para aplicar otras condiciones o ejecutar el query
	 * 
	 * @param ICondition $Condition
	 * 
	 * @return WhereClause
	 */
	public static function WHERE ($Condition) {
		#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:51: characters 3-50
		return SQL::SELECT()->FROM(FC_DeterminarGeneracionFacturaEspecifica_VTA::$view)->WHERE($Condition);
	}

	/**
	 * Constructor de la clase FC_DeterminarGeneracionFacturaEspecifica_VTA que tiene equivalencia con la tabla de la base de datos
	 * 
	 * @return void
	 */
	public function __construct () {
		#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:27: characters 3-10
		parent::__construct();
	}

	/**
	 * @return UUID
	 */
	public function get_IDFactura () {
		#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:73: characters 3-19
		return $this->IDFactura;
	}

	/**
	 * @return string
	 */
	public function get_csv () {
		#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:66: characters 3-13
		return $this->csv;
	}

	/**
	 * @param UUID $value
	 * 
	 * @return UUID
	 */
	public function set_IDFactura ($value) {
		#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:79: characters 3-111
		if ($this->get_TrackChanges() && ($this->get_IDFactura() !== $value)) {
			#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:79: characters 73-86
			$tmp = FC_DeterminarGeneracionFacturaEspecifica_VTA::$col_IDFactura;
			#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:79: characters 48-111
			$this->AddChange(new ChangeItem($tmp, $this->get_IDFactura(), $value));
		}
		#3_data\db\src/nMorph/core/db/zhungo_core/FC_DeterminarGeneracionFacturaEspecifica_VTA.hx:80: characters 3-25
		return $this->IDFactura = $value;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$view = new ViewSource("FC_DeterminarGeneracionFacturaEspecifica_VTA");
		self::$col_csv = new VarcharSentence("FC_DeterminarGeneracionFacturaEspecifica_VTA", "csv", -1, NullableEnum::NULL(), true);
		self::$col_IDFactura = new UUIDSentence("FC_DeterminarGeneracionFacturaEspecifica_VTA", "IDFactura", NullableEnum::NULL(), false);
	}
}

Boot::registerClass(FC_DeterminarGeneracionFacturaEspecifica_VTA::class, 'nMorph.core.db.zhungo_core.FC_DeterminarGeneracionFacturaEspecifica_VTA');
Boot::registerGetters('nMorph\\core\\db\\zhungo_core\\FC_DeterminarGeneracionFacturaEspecifica_VTA', [
	'IDFactura' => true,
	'csv' => true
]);
Boot::registerSetters('nMorph\\core\\db\\zhungo_core\\FC_DeterminarGeneracionFacturaEspecifica_VTA', [
	'IDFactura' => true
]);
FC_DeterminarGeneracionFacturaEspecifica_VTA::__hx__init();
