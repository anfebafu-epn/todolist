<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\core\db\nmorph_core;

use \nMorph\framework\orm\lang\SQL;
use \nMorph\framework\orm\interfaces\ICondition;
use \nMorph\framework\orm\common\sentences\Val;
use \nMorph\framework\orm\client\ModelObject;
use \php\Boot;
use \nMorph\framework\orm\common\enums\Op;
use \nMorph\framework\orm\interfaces\ISource;
use \nMorph\framework\orm\common\conditions\Condition;
use \nMorph\framework\orm\common\clauses\WhereClause;
use \nMorph\framework\orm\client\ChangeItem;
use \nMorph\framework\orm\common\fields\VarcharSentence;
use \nMorph\framework\common\datatypes\UUID;
use \nMorph\framework\orm\common\sources\TableSource;
use \nMorph\framework\orm\common\fields\SmallIntegerSentence;
use \nMorph\framework\orm\common\fields\UUIDSentence;
use \nMorph\framework\orm\common\enums\NullableEnum;

/**
 * ...
 * @author Smartwork
 */
class TR_MemberTemplate extends ModelObject {
	/**
	 * @var string
	 */
	static public $__rtti = "<class path=\"nMorph.core.db.nmorph_core.TR_MemberTemplate\" params=\"\">\x0A\x09<extends path=\"nMorph.framework.orm.client.ModelObject\"/>\x0A\x09<table public=\"1\" expr=\"new TableSource(&quot;TR_MemberTemplate&quot;)\" line=\"33\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.interfaces.ISource\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new TableSource(\"TR_MemberTemplate\")</e></m></meta>\x0A\x09\x09<haxe_doc>* referencia a tabla para consultas</haxe_doc>\x0A\x09</table>\x0A\x09<col_MemberTemplateID public=\"1\" expr=\"new UUIDSentence(&quot;TR_MemberTemplate&quot;, &quot;MemberTemplateID&quot;, NullableEnum.NOTNULL, true)\" line=\"37\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"TR_MemberTemplate\", \"MemberTemplateID\", NullableEnum.NOTNULL, true)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna MemberTemplateID</haxe_doc>\x0A\x09</col_MemberTemplateID>\x0A\x09<col_TenantID public=\"1\" expr=\"new UUIDSentence(&quot;TR_MemberTemplate&quot;, &quot;TenantID&quot;, NullableEnum.NULL, false)\" line=\"42\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"TR_MemberTemplate\", \"TenantID\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna TenantID</haxe_doc>\x0A\x09</col_TenantID>\x0A\x09<col_PositionID public=\"1\" expr=\"new UUIDSentence(&quot;TR_MemberTemplate&quot;, &quot;PositionID&quot;, NullableEnum.NULL, false)\" line=\"47\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"TR_MemberTemplate\", \"PositionID\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna PositionID</haxe_doc>\x0A\x09</col_PositionID>\x0A\x09<col_Members public=\"1\" expr=\"new VarcharSentence(&quot;TR_MemberTemplate&quot;, &quot;Members&quot;, -1, NullableEnum.NULL, false)\" line=\"52\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.VarcharSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new VarcharSentence(\"TR_MemberTemplate\", \"Members\", -1, NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna Members</haxe_doc>\x0A\x09</col_Members>\x0A\x09<col_Status public=\"1\" expr=\"new SmallIntegerSentence(&quot;TR_MemberTemplate&quot;, &quot;Status&quot;, NullableEnum.NULL, false)\" line=\"57\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.SmallIntegerSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new SmallIntegerSentence(\"TR_MemberTemplate\", \"Status\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna Status</haxe_doc>\x0A\x09</col_Status>\x0A\x09<WHERE public=\"1\" set=\"method\" line=\"65\" static=\"1\">\x0A\x09\x09<f a=\"Condition\">\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.interfaces.ICondition\"/>\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\x0A\x09\x09</f>\x0A\x09\x09<haxe_doc>* inicio rápido de filtro\x0A\x09 * @param\x09Filtro\x0A\x09 * @return objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\x0A\x09</WHERE>\x0A\x09<BYPK public=\"1\" set=\"method\" line=\"74\" static=\"1\">\x0A\x09\x09<f a=\"val_MemberTemplateID\">\x0A\x09\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\x0A\x09\x09</f>\x0A\x09\x09<haxe_doc>* filtro por clave primaria\x0A\x09 * @param\x09valor de clave primaria\x0A\x09 * @return  objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\x0A\x09</BYPK>\x0A\x09<MemberTemplateID get=\"accessor\" set=\"null\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</MemberTemplateID>\x0A\x09<get_MemberTemplateID public=\"1\" set=\"method\" line=\"80\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_MemberTemplateID>\x0A\x09<TenantID get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</TenantID>\x0A\x09<get_TenantID public=\"1\" set=\"method\" line=\"87\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_TenantID>\x0A\x09<set_TenantID public=\"1\" set=\"method\" line=\"91\"><f a=\"value\">\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A</f></set_TenantID>\x0A\x09<PositionID get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</PositionID>\x0A\x09<get_PositionID public=\"1\" set=\"method\" line=\"101\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_PositionID>\x0A\x09<set_PositionID public=\"1\" set=\"method\" line=\"105\"><f a=\"value\">\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A</f></set_PositionID>\x0A\x09<Members get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"String\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</Members>\x0A\x09<get_Members public=\"1\" set=\"method\" line=\"115\"><f a=\"\"><c path=\"String\"/></f></get_Members>\x0A\x09<set_Members public=\"1\" set=\"method\" line=\"119\"><f a=\"value\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"String\"/>\x0A</f></set_Members>\x0A\x09<Status get=\"accessor\" set=\"accessor\">\x0A\x09\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</Status>\x0A\x09<get_Status public=\"1\" set=\"method\" line=\"129\"><f a=\"\"><x path=\"Null\"><x path=\"Int\"/></x></f></get_Status>\x0A\x09<set_Status public=\"1\" set=\"method\" line=\"133\"><f a=\"value\">\x0A\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A</f></set_Status>\x0A\x09<new public=\"1\" set=\"method\" line=\"25\">\x0A\x09\x09<f a=\"\"><x path=\"Void\"/></f>\x0A\x09\x09<haxe_doc>* Constructor de la clase TR_MemberTemplate que tiene equivalencia con la tabla de la base de datos</haxe_doc>\x0A\x09</new>\x0A\x09<haxe_doc>* ...\x0A * @author Smartwork</haxe_doc>\x0A\x09<meta>\x0A\x09\x09<m n=\":keepSub\"/>\x0A\x09\x09<m n=\":rtti\"/>\x0A\x09</meta>\x0A</class>";
	/**
	 * @var UUIDSentence
	 * Referencia a columna MemberTemplateID
	 */
	static public $col_MemberTemplateID;
	/**
	 * @var VarcharSentence
	 * Referencia a columna Members
	 */
	static public $col_Members;
	/**
	 * @var UUIDSentence
	 * Referencia a columna PositionID
	 */
	static public $col_PositionID;
	/**
	 * @var SmallIntegerSentence
	 * Referencia a columna Status
	 */
	static public $col_Status;
	/**
	 * @var UUIDSentence
	 * Referencia a columna TenantID
	 */
	static public $col_TenantID;
	/**
	 * @var ISource
	 * referencia a tabla para consultas
	 */
	static public $table;

	/**
	 * @var UUID
	 */
	public $MemberTemplateID;
	/**
	 * @var string
	 */
	public $Members;
	/**
	 * @var UUID
	 */
	public $PositionID;
	/**
	 * @var int
	 */
	public $Status;
	/**
	 * @var UUID
	 */
	public $TenantID;

	/**
	 * filtro por clave primaria
	 * @param	valor de clave primaria
	 * @return  objeto para aplicar otras condiciones o ejecutar el query
	 * 
	 * @param UUID $val_MemberTemplateID
	 * 
	 * @return WhereClause
	 */
	public static function BYPK ($val_MemberTemplateID) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:75: characters 3-119
		return SQL::SELECT()->FROM(TR_MemberTemplate::$table)->WHERE(Condition::SET(TR_MemberTemplate::$col_MemberTemplateID, Op::Equal(), Val::uuid($val_MemberTemplateID)));
	}

	/**
	 * inicio rápido de filtro
	 * @param	Filtro
	 * @return objeto para aplicar otras condiciones o ejecutar el query
	 * 
	 * @param ICondition $Condition
	 * 
	 * @return WhereClause
	 */
	public static function WHERE ($Condition) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:66: characters 3-51
		return SQL::SELECT()->FROM(TR_MemberTemplate::$table)->WHERE($Condition);
	}

	/**
	 * Constructor de la clase TR_MemberTemplate que tiene equivalencia con la tabla de la base de datos
	 * 
	 * @return void
	 */
	public function __construct () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:27: characters 3-10
		parent::__construct();
	}

	/**
	 * @return UUID
	 */
	public function get_MemberTemplateID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:81: characters 3-26
		return $this->MemberTemplateID;
	}

	/**
	 * @return string
	 */
	public function get_Members () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:116: characters 3-17
		return $this->Members;
	}

	/**
	 * @return UUID
	 */
	public function get_PositionID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:102: characters 3-20
		return $this->PositionID;
	}

	/**
	 * @return int
	 */
	public function get_Status () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:130: characters 3-16
		return $this->Status;
	}

	/**
	 * @return UUID
	 */
	public function get_TenantID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:88: characters 3-18
		return $this->TenantID;
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function set_Members ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:122: characters 3-105
		if ($this->get_TrackChanges() && ($this->get_Members() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:122: characters 71-82
			$tmp = TR_MemberTemplate::$col_Members;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:122: characters 46-105
			$this->AddChange(new ChangeItem($tmp, $this->get_Members(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:123: characters 3-23
		return $this->Members = $value;
	}

	/**
	 * @param UUID $value
	 * 
	 * @return UUID
	 */
	public function set_PositionID ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:108: characters 3-114
		if ($this->get_TrackChanges() && ($this->get_PositionID() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:108: characters 74-88
			$tmp = TR_MemberTemplate::$col_PositionID;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:108: characters 49-114
			$this->AddChange(new ChangeItem($tmp, $this->get_PositionID(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:109: characters 3-26
		return $this->PositionID = $value;
	}

	/**
	 * @param int $value
	 * 
	 * @return int
	 */
	public function set_Status ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:136: characters 3-102
		if ($this->get_TrackChanges() && ($this->get_Status() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:136: characters 70-80
			$tmp = TR_MemberTemplate::$col_Status;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:136: characters 45-102
			$this->AddChange(new ChangeItem($tmp, $this->get_Status(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:137: characters 3-22
		return $this->Status = $value;
	}

	/**
	 * @param UUID $value
	 * 
	 * @return UUID
	 */
	public function set_TenantID ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:94: characters 3-108
		if ($this->get_TrackChanges() && ($this->get_TenantID() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:94: characters 72-84
			$tmp = TR_MemberTemplate::$col_TenantID;
			#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:94: characters 47-108
			$this->AddChange(new ChangeItem($tmp, $this->get_TenantID(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/TR_MemberTemplate.hx:95: characters 3-24
		return $this->TenantID = $value;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$table = new TableSource("TR_MemberTemplate");
		self::$col_MemberTemplateID = new UUIDSentence("TR_MemberTemplate", "MemberTemplateID", NullableEnum::NOTNULL(), true);
		self::$col_TenantID = new UUIDSentence("TR_MemberTemplate", "TenantID", NullableEnum::NULL(), false);
		self::$col_PositionID = new UUIDSentence("TR_MemberTemplate", "PositionID", NullableEnum::NULL(), false);
		self::$col_Members = new VarcharSentence("TR_MemberTemplate", "Members", -1, NullableEnum::NULL(), false);
		self::$col_Status = new SmallIntegerSentence("TR_MemberTemplate", "Status", NullableEnum::NULL(), false);
	}
}

Boot::registerClass(TR_MemberTemplate::class, 'nMorph.core.db.nmorph_core.TR_MemberTemplate');
Boot::registerGetters('nMorph\\core\\db\\nmorph_core\\TR_MemberTemplate', [
	'Status' => true,
	'Members' => true,
	'PositionID' => true,
	'TenantID' => true,
	'MemberTemplateID' => true
]);
Boot::registerSetters('nMorph\\core\\db\\nmorph_core\\TR_MemberTemplate', [
	'Status' => true,
	'Members' => true,
	'PositionID' => true,
	'TenantID' => true
]);
TR_MemberTemplate::__hx__init();
