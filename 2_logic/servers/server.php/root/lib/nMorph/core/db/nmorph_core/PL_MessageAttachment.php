<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\core\db\nmorph_core;

use \nMorph\framework\orm\lang\SQL;
use \nMorph\framework\orm\interfaces\ICondition;
use \nMorph\framework\orm\common\sentences\Val;
use \nMorph\framework\orm\client\ModelObject;
use \php\Boot;
use \nMorph\framework\orm\common\enums\Op;
use \nMorph\framework\orm\interfaces\ISource;
use \nMorph\framework\orm\common\conditions\Condition;
use \nMorph\framework\orm\common\fields\BinarySentence;
use \nMorph\framework\orm\common\fields\IntegerSentence;
use \nMorph\framework\orm\common\clauses\WhereClause;
use \nMorph\framework\orm\client\ChangeItem;
use \nMorph\framework\orm\common\fields\VarcharSentence;
use \nMorph\framework\common\datatypes\UUID;
use \nMorph\framework\orm\common\sources\TableSource;
use \nMorph\framework\orm\common\fields\SmallIntegerSentence;
use \haxe\io\Bytes;
use \nMorph\framework\orm\common\fields\UUIDSentence;
use \nMorph\framework\orm\common\enums\NullableEnum;

/**
 * ...
 * @author Smartwork
 */
class PL_MessageAttachment extends ModelObject {
	/**
	 * @var string
	 */
	static public $__rtti = "<class path=\"nMorph.core.db.nmorph_core.PL_MessageAttachment\" params=\"\">\x0A\x09<extends path=\"nMorph.framework.orm.client.ModelObject\"/>\x0A\x09<table public=\"1\" expr=\"new TableSource(&quot;PL_MessageAttachment&quot;)\" line=\"33\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.interfaces.ISource\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new TableSource(\"PL_MessageAttachment\")</e></m></meta>\x0A\x09\x09<haxe_doc>* referencia a tabla para consultas</haxe_doc>\x0A\x09</table>\x0A\x09<col_AttachmentID public=\"1\" expr=\"new UUIDSentence(&quot;PL_MessageAttachment&quot;, &quot;AttachmentID&quot;, NullableEnum.NOTNULL, true)\" line=\"37\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"PL_MessageAttachment\", \"AttachmentID\", NullableEnum.NOTNULL, true)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna AttachmentID</haxe_doc>\x0A\x09</col_AttachmentID>\x0A\x09<col_TenantID public=\"1\" expr=\"new UUIDSentence(&quot;PL_MessageAttachment&quot;, &quot;TenantID&quot;, NullableEnum.NULL, false)\" line=\"42\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"PL_MessageAttachment\", \"TenantID\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna TenantID</haxe_doc>\x0A\x09</col_TenantID>\x0A\x09<col_MessageID public=\"1\" expr=\"new UUIDSentence(&quot;PL_MessageAttachment&quot;, &quot;MessageID&quot;, NullableEnum.NULL, false)\" line=\"47\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new UUIDSentence(\"PL_MessageAttachment\", \"MessageID\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna MessageID</haxe_doc>\x0A\x09</col_MessageID>\x0A\x09<col_FileName public=\"1\" expr=\"new VarcharSentence(&quot;PL_MessageAttachment&quot;, &quot;FileName&quot;, 500, NullableEnum.NULL, false)\" line=\"52\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.VarcharSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new VarcharSentence(\"PL_MessageAttachment\", \"FileName\", 500, NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna FileName</haxe_doc>\x0A\x09</col_FileName>\x0A\x09<col_Lenght public=\"1\" expr=\"new IntegerSentence(&quot;PL_MessageAttachment&quot;, &quot;Lenght&quot;, NullableEnum.NULL, false)\" line=\"57\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.IntegerSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new IntegerSentence(\"PL_MessageAttachment\", \"Lenght\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna Lenght</haxe_doc>\x0A\x09</col_Lenght>\x0A\x09<col_FileContent public=\"1\" expr=\"new BinarySentence(&quot;PL_MessageAttachment&quot;, &quot;FileContent&quot;, NullableEnum.NULL, false)\" line=\"62\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.BinarySentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new BinarySentence(\"PL_MessageAttachment\", \"FileContent\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna FileContent</haxe_doc>\x0A\x09</col_FileContent>\x0A\x09<col_FileHash public=\"1\" expr=\"new VarcharSentence(&quot;PL_MessageAttachment&quot;, &quot;FileHash&quot;, 2000, NullableEnum.NULL, false)\" line=\"67\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.VarcharSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new VarcharSentence(\"PL_MessageAttachment\", \"FileHash\", 2000, NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna FileHash</haxe_doc>\x0A\x09</col_FileHash>\x0A\x09<col_Status public=\"1\" expr=\"new SmallIntegerSentence(&quot;PL_MessageAttachment&quot;, &quot;Status&quot;, NullableEnum.NULL, false)\" line=\"72\" static=\"1\">\x0A\x09\x09<c path=\"nMorph.framework.orm.common.fields.SmallIntegerSentence\"/>\x0A\x09\x09<meta><m n=\":value\"><e>new SmallIntegerSentence(\"PL_MessageAttachment\", \"Status\", NullableEnum.NULL, false)</e></m></meta>\x0A\x09\x09<haxe_doc>* Referencia a columna Status</haxe_doc>\x0A\x09</col_Status>\x0A\x09<WHERE public=\"1\" set=\"method\" line=\"80\" static=\"1\">\x0A\x09\x09<f a=\"Condition\">\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.interfaces.ICondition\"/>\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\x0A\x09\x09</f>\x0A\x09\x09<haxe_doc>* inicio r√°pido de filtro\x0A\x09 * @param\x09Filtro\x0A\x09 * @return objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\x0A\x09</WHERE>\x0A\x09<BYPK public=\"1\" set=\"method\" line=\"89\" static=\"1\">\x0A\x09\x09<f a=\"val_AttachmentID\">\x0A\x09\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09\x09<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\x0A\x09\x09</f>\x0A\x09\x09<haxe_doc>* filtro por clave primaria\x0A\x09 * @param\x09valor de clave primaria\x0A\x09 * @return  objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\x0A\x09</BYPK>\x0A\x09<AttachmentID get=\"accessor\" set=\"null\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</AttachmentID>\x0A\x09<get_AttachmentID public=\"1\" set=\"method\" line=\"95\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_AttachmentID>\x0A\x09<TenantID get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</TenantID>\x0A\x09<get_TenantID public=\"1\" set=\"method\" line=\"102\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_TenantID>\x0A\x09<set_TenantID public=\"1\" set=\"method\" line=\"106\"><f a=\"value\">\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A</f></set_TenantID>\x0A\x09<MessageID get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</MessageID>\x0A\x09<get_MessageID public=\"1\" set=\"method\" line=\"116\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_MessageID>\x0A\x09<set_MessageID public=\"1\" set=\"method\" line=\"120\"><f a=\"value\">\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A\x09<c path=\"nMorph.framework.common.datatypes.UUID\"/>\x0A</f></set_MessageID>\x0A\x09<FileName get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"String\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</FileName>\x0A\x09<get_FileName public=\"1\" set=\"method\" line=\"130\"><f a=\"\"><c path=\"String\"/></f></get_FileName>\x0A\x09<set_FileName public=\"1\" set=\"method\" line=\"134\"><f a=\"value\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"String\"/>\x0A</f></set_FileName>\x0A\x09<Lenght get=\"accessor\" set=\"accessor\">\x0A\x09\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</Lenght>\x0A\x09<get_Lenght public=\"1\" set=\"method\" line=\"144\"><f a=\"\"><x path=\"Null\"><x path=\"Int\"/></x></f></get_Lenght>\x0A\x09<set_Lenght public=\"1\" set=\"method\" line=\"148\"><f a=\"value\">\x0A\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A</f></set_Lenght>\x0A\x09<FileContent get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"haxe.io.Bytes\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</FileContent>\x0A\x09<get_FileContent public=\"1\" set=\"method\" line=\"158\"><f a=\"\"><c path=\"haxe.io.Bytes\"/></f></get_FileContent>\x0A\x09<set_FileContent public=\"1\" set=\"method\" line=\"162\"><f a=\"value\">\x0A\x09<c path=\"haxe.io.Bytes\"/>\x0A\x09<c path=\"haxe.io.Bytes\"/>\x0A</f></set_FileContent>\x0A\x09<FileHash get=\"accessor\" set=\"accessor\">\x0A\x09\x09<c path=\"String\"/>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</FileHash>\x0A\x09<get_FileHash public=\"1\" set=\"method\" line=\"172\"><f a=\"\"><c path=\"String\"/></f></get_FileHash>\x0A\x09<set_FileHash public=\"1\" set=\"method\" line=\"176\"><f a=\"value\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"String\"/>\x0A</f></set_FileHash>\x0A\x09<Status get=\"accessor\" set=\"accessor\">\x0A\x09\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A\x09\x09<meta><m n=\":isVar\"/></meta>\x0A\x09</Status>\x0A\x09<get_Status public=\"1\" set=\"method\" line=\"186\"><f a=\"\"><x path=\"Null\"><x path=\"Int\"/></x></f></get_Status>\x0A\x09<set_Status public=\"1\" set=\"method\" line=\"190\"><f a=\"value\">\x0A\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A\x09<x path=\"Null\"><x path=\"Int\"/></x>\x0A</f></set_Status>\x0A\x09<new public=\"1\" set=\"method\" line=\"25\">\x0A\x09\x09<f a=\"\"><x path=\"Void\"/></f>\x0A\x09\x09<haxe_doc>* Constructor de la clase PL_MessageAttachment que tiene equivalencia con la tabla de la base de datos</haxe_doc>\x0A\x09</new>\x0A\x09<haxe_doc>* ...\x0A * @author Smartwork</haxe_doc>\x0A\x09<meta>\x0A\x09\x09<m n=\":keepSub\"/>\x0A\x09\x09<m n=\":rtti\"/>\x0A\x09</meta>\x0A</class>";
	/**
	 * @var UUIDSentence
	 * Referencia a columna AttachmentID
	 */
	static public $col_AttachmentID;
	/**
	 * @var BinarySentence
	 * Referencia a columna FileContent
	 */
	static public $col_FileContent;
	/**
	 * @var VarcharSentence
	 * Referencia a columna FileHash
	 */
	static public $col_FileHash;
	/**
	 * @var VarcharSentence
	 * Referencia a columna FileName
	 */
	static public $col_FileName;
	/**
	 * @var IntegerSentence
	 * Referencia a columna Lenght
	 */
	static public $col_Lenght;
	/**
	 * @var UUIDSentence
	 * Referencia a columna MessageID
	 */
	static public $col_MessageID;
	/**
	 * @var SmallIntegerSentence
	 * Referencia a columna Status
	 */
	static public $col_Status;
	/**
	 * @var UUIDSentence
	 * Referencia a columna TenantID
	 */
	static public $col_TenantID;
	/**
	 * @var ISource
	 * referencia a tabla para consultas
	 */
	static public $table;

	/**
	 * @var UUID
	 */
	public $AttachmentID;
	/**
	 * @var Bytes
	 */
	public $FileContent;
	/**
	 * @var string
	 */
	public $FileHash;
	/**
	 * @var string
	 */
	public $FileName;
	/**
	 * @var int
	 */
	public $Lenght;
	/**
	 * @var UUID
	 */
	public $MessageID;
	/**
	 * @var int
	 */
	public $Status;
	/**
	 * @var UUID
	 */
	public $TenantID;

	/**
	 * filtro por clave primaria
	 * @param	valor de clave primaria
	 * @return  objeto para aplicar otras condiciones o ejecutar el query
	 * 
	 * @param UUID $val_AttachmentID
	 * 
	 * @return WhereClause
	 */
	public static function BYPK ($val_AttachmentID) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:90: characters 3-111
		return SQL::SELECT()->FROM(PL_MessageAttachment::$table)->WHERE(Condition::SET(PL_MessageAttachment::$col_AttachmentID, Op::Equal(), Val::uuid($val_AttachmentID)));
	}

	/**
	 * inicio r√°pido de filtro
	 * @param	Filtro
	 * @return objeto para aplicar otras condiciones o ejecutar el query
	 * 
	 * @param ICondition $Condition
	 * 
	 * @return WhereClause
	 */
	public static function WHERE ($Condition) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:81: characters 3-51
		return SQL::SELECT()->FROM(PL_MessageAttachment::$table)->WHERE($Condition);
	}

	/**
	 * Constructor de la clase PL_MessageAttachment que tiene equivalencia con la tabla de la base de datos
	 * 
	 * @return void
	 */
	public function __construct () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:27: characters 3-10
		parent::__construct();
	}

	/**
	 * @return UUID
	 */
	public function get_AttachmentID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:96: characters 3-22
		return $this->AttachmentID;
	}

	/**
	 * @return Bytes
	 */
	public function get_FileContent () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:159: characters 3-21
		return $this->FileContent;
	}

	/**
	 * @return string
	 */
	public function get_FileHash () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:173: characters 3-18
		return $this->FileHash;
	}

	/**
	 * @return string
	 */
	public function get_FileName () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:131: characters 3-18
		return $this->FileName;
	}

	/**
	 * @return int
	 */
	public function get_Lenght () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:145: characters 3-16
		return $this->Lenght;
	}

	/**
	 * @return UUID
	 */
	public function get_MessageID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:117: characters 3-19
		return $this->MessageID;
	}

	/**
	 * @return int
	 */
	public function get_Status () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:187: characters 3-16
		return $this->Status;
	}

	/**
	 * @return UUID
	 */
	public function get_TenantID () {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:103: characters 3-18
		return $this->TenantID;
	}

	/**
	 * @param Bytes $value
	 * 
	 * @return Bytes
	 */
	public function set_FileContent ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:165: characters 3-117
		if ($this->get_TrackChanges() && ($this->get_FileContent() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:165: characters 75-90
			$tmp = PL_MessageAttachment::$col_FileContent;
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:165: characters 50-117
			$this->AddChange(new ChangeItem($tmp, $this->get_FileContent(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:166: characters 3-27
		return $this->FileContent = $value;
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function set_FileHash ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:179: characters 3-108
		if ($this->get_TrackChanges() && ($this->get_FileHash() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:179: characters 72-84
			$tmp = PL_MessageAttachment::$col_FileHash;
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:179: characters 47-108
			$this->AddChange(new ChangeItem($tmp, $this->get_FileHash(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:180: characters 3-24
		return $this->FileHash = $value;
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function set_FileName ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:137: characters 3-108
		if ($this->get_TrackChanges() && ($this->get_FileName() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:137: characters 72-84
			$tmp = PL_MessageAttachment::$col_FileName;
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:137: characters 47-108
			$this->AddChange(new ChangeItem($tmp, $this->get_FileName(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:138: characters 3-24
		return $this->FileName = $value;
	}

	/**
	 * @param int $value
	 * 
	 * @return int
	 */
	public function set_Lenght ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:151: characters 3-102
		if ($this->get_TrackChanges() && ($this->get_Lenght() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:151: characters 70-80
			$tmp = PL_MessageAttachment::$col_Lenght;
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:151: characters 45-102
			$this->AddChange(new ChangeItem($tmp, $this->get_Lenght(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:152: characters 3-22
		return $this->Lenght = $value;
	}

	/**
	 * @param UUID $value
	 * 
	 * @return UUID
	 */
	public function set_MessageID ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:123: characters 3-111
		if ($this->get_TrackChanges() && ($this->get_MessageID() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:123: characters 73-86
			$tmp = PL_MessageAttachment::$col_MessageID;
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:123: characters 48-111
			$this->AddChange(new ChangeItem($tmp, $this->get_MessageID(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:124: characters 3-25
		return $this->MessageID = $value;
	}

	/**
	 * @param int $value
	 * 
	 * @return int
	 */
	public function set_Status ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:193: characters 3-102
		if ($this->get_TrackChanges() && ($this->get_Status() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:193: characters 70-80
			$tmp = PL_MessageAttachment::$col_Status;
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:193: characters 45-102
			$this->AddChange(new ChangeItem($tmp, $this->get_Status(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:194: characters 3-22
		return $this->Status = $value;
	}

	/**
	 * @param UUID $value
	 * 
	 * @return UUID
	 */
	public function set_TenantID ($value) {
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:109: characters 3-108
		if ($this->get_TrackChanges() && ($this->get_TenantID() !== $value)) {
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:109: characters 72-84
			$tmp = PL_MessageAttachment::$col_TenantID;
			#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:109: characters 47-108
			$this->AddChange(new ChangeItem($tmp, $this->get_TenantID(), $value));
		}
		#3_data\db\src/nMorph/core/db/nmorph_core/PL_MessageAttachment.hx:110: characters 3-24
		return $this->TenantID = $value;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$table = new TableSource("PL_MessageAttachment");
		self::$col_AttachmentID = new UUIDSentence("PL_MessageAttachment", "AttachmentID", NullableEnum::NOTNULL(), true);
		self::$col_TenantID = new UUIDSentence("PL_MessageAttachment", "TenantID", NullableEnum::NULL(), false);
		self::$col_MessageID = new UUIDSentence("PL_MessageAttachment", "MessageID", NullableEnum::NULL(), false);
		self::$col_FileName = new VarcharSentence("PL_MessageAttachment", "FileName", 500, NullableEnum::NULL(), false);
		self::$col_Lenght = new IntegerSentence("PL_MessageAttachment", "Lenght", NullableEnum::NULL(), false);
		self::$col_FileContent = new BinarySentence("PL_MessageAttachment", "FileContent", NullableEnum::NULL(), false);
		self::$col_FileHash = new VarcharSentence("PL_MessageAttachment", "FileHash", 2000, NullableEnum::NULL(), false);
		self::$col_Status = new SmallIntegerSentence("PL_MessageAttachment", "Status", NullableEnum::NULL(), false);
	}
}

Boot::registerClass(PL_MessageAttachment::class, 'nMorph.core.db.nmorph_core.PL_MessageAttachment');
Boot::registerGetters('nMorph\\core\\db\\nmorph_core\\PL_MessageAttachment', [
	'Status' => true,
	'FileHash' => true,
	'FileContent' => true,
	'Lenght' => true,
	'FileName' => true,
	'MessageID' => true,
	'TenantID' => true,
	'AttachmentID' => true
]);
Boot::registerSetters('nMorph\\core\\db\\nmorph_core\\PL_MessageAttachment', [
	'Status' => true,
	'FileHash' => true,
	'FileContent' => true,
	'Lenght' => true,
	'FileName' => true,
	'MessageID' => true,
	'TenantID' => true
]);
PL_MessageAttachment::__hx__init();
