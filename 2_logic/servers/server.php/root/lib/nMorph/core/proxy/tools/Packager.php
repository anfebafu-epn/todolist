<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\core\proxy\tools;

use \php\Boot;
use \haxe\Unserializer;
use \haxe\Serializer;

/**
 * Método que permite invocar a los métodos de lógica
 * @author Smartwork
 */
class Packager {
	/**
	 * @param mixed $obj
	 * 
	 * @return string
	 */
	public static function Serialize ($obj) {
		#1_ui\proxy\src/nMorph/core/proxy/tools/Packager.hx:20: characters 3-30
		Serializer::$USE_CACHE = true;
		#1_ui\proxy\src/nMorph/core/proxy/tools/Packager.hx:21: characters 3-37
		$serializer = new Serializer();
		#1_ui\proxy\src/nMorph/core/proxy/tools/Packager.hx:22: characters 3-28
		$serializer->serialize($obj);
		#1_ui\proxy\src/nMorph/core/proxy/tools/Packager.hx:23: characters 3-53
		$ResponseString = $serializer->toString();
		#1_ui\proxy\src/nMorph/core/proxy/tools/Packager.hx:24: characters 3-24
		return $ResponseString;
	}

	/**
	 * @param string $SerializedStr
	 * 
	 * @return mixed
	 */
	public static function Unserialize ($SerializedStr) {
		#1_ui\proxy\src/nMorph/core/proxy/tools/Packager.hx:28: characters 3-67
		$unserializer = new Unserializer($SerializedStr);
		#1_ui\proxy\src/nMorph/core/proxy/tools/Packager.hx:29: characters 3-36
		return $unserializer->unserialize();
	}

	/**
	 * @return void
	 */
	public function __construct () {
	}
}

Boot::registerClass(Packager::class, 'nMorph.core.proxy.tools.Packager');
