<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\orm\configuration;

use \php\Boot;
use \php\_Boot\HxEnum;

class DatabaseEngineEnum extends HxEnum {
	/**
	 * @return DatabaseEngineEnum
	 */
	static public function GENERIC () {
		static $inst = null;
		if (!$inst) $inst = new DatabaseEngineEnum('GENERIC', 4, []);
		return $inst;
	}

	/**
	 * @return DatabaseEngineEnum
	 */
	static public function MYSQL () {
		static $inst = null;
		if (!$inst) $inst = new DatabaseEngineEnum('MYSQL', 2, []);
		return $inst;
	}

	/**
	 * @return DatabaseEngineEnum
	 */
	static public function ORACLE () {
		static $inst = null;
		if (!$inst) $inst = new DatabaseEngineEnum('ORACLE', 1, []);
		return $inst;
	}

	/**
	 * @return DatabaseEngineEnum
	 */
	static public function POSTGRESQL () {
		static $inst = null;
		if (!$inst) $inst = new DatabaseEngineEnum('POSTGRESQL', 3, []);
		return $inst;
	}

	/**
	 * @return DatabaseEngineEnum
	 */
	static public function SQLSERVER () {
		static $inst = null;
		if (!$inst) $inst = new DatabaseEngineEnum('SQLSERVER', 0, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			4 => 'GENERIC',
			2 => 'MYSQL',
			1 => 'ORACLE',
			3 => 'POSTGRESQL',
			0 => 'SQLSERVER',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'GENERIC' => 0,
			'MYSQL' => 0,
			'ORACLE' => 0,
			'POSTGRESQL' => 0,
			'SQLSERVER' => 0,
		];
	}
}

Boot::registerClass(DatabaseEngineEnum::class, 'nMorph.framework.orm.configuration.DatabaseEngineEnum');
