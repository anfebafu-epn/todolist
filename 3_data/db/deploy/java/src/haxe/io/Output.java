// Generated by Haxe 4.2.2
package haxe.io;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Output extends haxe.lang.HxObject
{
	public Output(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Output()
	{
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		haxe.io.Output.__hx_ctor_haxe_io_Output(this);
	}
	
	
	protected static void __hx_ctor_haxe_io_Output(haxe.io.Output __hx_this)
	{
	}
	
	
	public boolean bigEndian;
	
	public java.nio.ByteBuffer helper;
	
	public void writeByte(int c)
	{
		//line 47 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		throw new haxe.exceptions.NotImplementedException(haxe.lang.Runtime.toString(null), ((haxe.Exception) (null) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"haxe.io.Output", "haxe/io/Output.hx", "writeByte"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (47) )) )})) ));
	}
	
	
	public int writeBytes(haxe.io.Bytes s, int pos, int len)
	{
		//line 59 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (( ( ( pos < 0 ) || ( len < 0 ) ) || ( ( pos + len ) > s.length ) )) 
		{
			//line 60 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.OutsideBounds)) );
		}
		
		//line 62 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		byte[] b = s.b;
		//line 63 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		int k = len;
		//line 64 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		while (( k > 0 ))
		{
			//line 74 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(((int) (b[pos]) ));
			//line 76 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			 ++ pos;
			//line 77 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			 -- k;
		}
		
		//line 79 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		return len;
	}
	
	
	public void flush()
	{
	}
	
	
	public void close()
	{
	}
	
	
	public boolean set_bigEndian(boolean b)
	{
		//line 95 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		this.bigEndian = b;
		//line 96 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		return b;
	}
	
	
	public void write(haxe.io.Bytes s)
	{
		//line 104 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		int l = s.length;
		//line 105 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		int p = 0;
		//line 106 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		while (( l > 0 ))
		{
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			int k = this.writeBytes(s, p, l);
			//line 108 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			if (( k == 0 )) 
			{
				//line 109 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Blocked)) );
			}
			
			//line 110 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			p += k;
			//line 111 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			l -= k;
		}
		
	}
	
	
	public void writeFullBytes(haxe.io.Bytes s, int pos, int len)
	{
		//line 121 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		while (( len > 0 ))
		{
			//line 122 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			int k = this.writeBytes(s, pos, len);
			//line 123 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			pos += k;
			//line 124 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			len -= k;
		}
		
	}
	
	
	public void writeFloat(double x)
	{
		//line 134 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		this.writeInt32(haxe.io.FPHelper.floatToI32(x));
	}
	
	
	public void writeDouble(double x)
	{
		//line 143 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		long i64 = haxe.io.FPHelper.doubleToI64(x);
		//line 144 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (this.bigEndian) 
		{
			//line 145 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeInt32(((int) (( ((long) (i64) ) >> 32 )) ));
			//line 146 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeInt32(((int) (((long) (i64) )) ));
		}
		else
		{
			//line 148 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeInt32(((int) (((long) (i64) )) ));
			//line 149 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeInt32(((int) (( ((long) (i64) ) >> 32 )) ));
		}
		
	}
	
	
	public void writeInt8(int x)
	{
		//line 157 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (( ( x < -128 ) || ( x >= 128 ) )) 
		{
			//line 158 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Overflow)) );
		}
		
		//line 159 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		this.writeByte(( x & 255 ));
	}
	
	
	public void writeInt16(int x)
	{
		//line 168 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (( ( x < -32768 ) || ( x >= 32768 ) )) 
		{
			//line 169 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Overflow)) );
		}
		
		//line 170 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		this.writeUInt16(( x & 65535 ));
	}
	
	
	public void writeUInt16(int x)
	{
		//line 179 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (( ( x < 0 ) || ( x >= 65536 ) )) 
		{
			//line 180 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Overflow)) );
		}
		
		//line 181 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (this.bigEndian) 
		{
			//line 182 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x >> 8 ));
			//line 183 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x & 255 ));
		}
		else
		{
			//line 185 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x & 255 ));
			//line 186 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x >> 8 ));
		}
		
	}
	
	
	public void writeInt24(int x)
	{
		//line 196 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (( ( x < -8388608 ) || ( x >= 8388608 ) )) 
		{
			//line 197 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Overflow)) );
		}
		
		//line 198 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		this.writeUInt24(( x & 16777215 ));
	}
	
	
	public void writeUInt24(int x)
	{
		//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (( ( x < 0 ) || ( x >= 16777216 ) )) 
		{
			//line 208 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Overflow)) );
		}
		
		//line 209 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (this.bigEndian) 
		{
			//line 210 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x >> 16 ));
			//line 211 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( ( x >> 8 ) & 255 ));
			//line 212 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x & 255 ));
		}
		else
		{
			//line 214 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x & 255 ));
			//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( ( x >> 8 ) & 255 ));
			//line 216 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x >> 16 ));
		}
		
	}
	
	
	public void writeInt32(int x)
	{
		//line 226 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		if (this.bigEndian) 
		{
			//line 227 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x >>> 24 ));
			//line 228 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( ( x >> 16 ) & 255 ));
			//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( ( x >> 8 ) & 255 ));
			//line 230 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x & 255 ));
		}
		else
		{
			//line 232 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x & 255 ));
			//line 233 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( ( x >> 8 ) & 255 ));
			//line 234 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( ( x >> 16 ) & 255 ));
			//line 235 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			this.writeByte(( x >>> 24 ));
		}
		
	}
	
	
	public void prepare(int nbytes)
	{
	}
	
	
	public void writeInput(haxe.io.Input i, java.lang.Object bufsize)
	{
		//line 254 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		try 
		{
			//line 255 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			if (haxe.lang.Runtime.eq(bufsize, null)) 
			{
				//line 256 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				bufsize = 4096;
			}
			
			//line 257 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			haxe.io.Bytes buf = haxe.io.Bytes.alloc(((int) (haxe.lang.Runtime.toInt(bufsize)) ));
			//line 259 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			try 
			{
				//line 259 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				while (true)
				{
					//line 260 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
					int len = i.readBytes(buf, 0, ((int) (haxe.lang.Runtime.toInt(bufsize)) ));
					//line 261 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
					if (( len == 0 )) 
					{
						//line 262 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Blocked)) );
					}
					
					//line 263 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
					int p = 0;
					//line 264 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
					while (( len > 0 ))
					{
						//line 265 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						int k = this.writeBytes(buf, p, len);
						//line 266 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (( k == 0 )) 
						{
							//line 267 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Blocked)) );
						}
						
						//line 268 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						p += k;
						//line 269 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						len -= k;
					}
					
				}
				
			}
			catch (java.lang.Throwable _g)
			{
				//line 272 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				{
					//line 272 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
					haxe.NativeStackTrace.exception.set(((java.lang.Throwable) (_g) ));
				}
				
				//line 258 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				if ( ! (( ((java.lang.Object) (haxe.Exception.caught(_g).unwrap()) ) instanceof haxe.io.Eof )) ) 
				{
					//line 258 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
					throw _g;
				}
				
			}
			
			
		}
		catch (java.lang.Throwable typedException)
		{
			//line 254 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public void writeString(java.lang.String s, haxe.io.Encoding encoding)
	{
		//line 282 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		haxe.io.Bytes b = haxe.io.Bytes.ofString(s, encoding);
		//line 284 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		this.writeFullBytes(b, 0, b.length);
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		{
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			boolean __temp_executeDef1 = true;
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			if (( field != null )) 
			{
				//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				switch (field.hashCode())
				{
					case -1220931666:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("helper")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.helper = ((java.nio.ByteBuffer) (value) );
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return value;
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 573260987:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("bigEndian")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							if (handleProperties) 
							{
								//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
								this.set_bigEndian(haxe.lang.Runtime.toBool(((java.lang.Boolean) (value) )));
								//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
								return value;
							}
							else
							{
								//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
								this.bigEndian = haxe.lang.Runtime.toBool(((java.lang.Boolean) (value) ));
								//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
								return value;
							}
							
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			if (__temp_executeDef1) 
			{
				//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		{
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			boolean __temp_executeDef1 = true;
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			if (( field != null )) 
			{
				//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				switch (field.hashCode())
				{
					case 1412235472:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeString")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeString")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 573260987:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("bigEndian")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return this.bigEndian;
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -656596181:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInput")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeInput")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -1220931666:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("helper")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return this.helper;
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -318370553:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("prepare")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "prepare")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -1406851705:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeByte")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeByte")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -656594449:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInt32")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeInt32")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -662729780:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeBytes")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeBytes")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 1429671867:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeUInt24")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeUInt24")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 97532676:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("flush")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "flush")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -656594478:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInt24")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeInt24")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 94756344:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("close")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "close")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 1429671838:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeUInt16")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeUInt16")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 1862232350:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("set_bigEndian")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_bigEndian")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -656594507:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInt16")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeInt16")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 113399775:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("write")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "write")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -1406653784:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInt8")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeInt8")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 1188045309:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeFullBytes")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeFullBytes")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 978263184:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeDouble")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeDouble")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -659427907:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeFloat")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "writeFloat")) );
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			if (__temp_executeDef1) 
			{
				//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		{
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			boolean __temp_executeDef1 = true;
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			if (( field != null )) 
			{
				//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				switch (field.hashCode())
				{
					case 1412235472:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeString")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeString(haxe.lang.Runtime.toString(dynargs[0]), ((haxe.io.Encoding) (( (( dynargs.length > 1 )) ? (dynargs[1]) : (null) )) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -1406851705:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeByte")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeByte(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -656596181:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInput")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeInput(((haxe.io.Input) (dynargs[0]) ), ( (( dynargs.length > 1 )) ? (dynargs[1]) : (null) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -662729780:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeBytes")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return this.writeBytes(((haxe.io.Bytes) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[2])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -318370553:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("prepare")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.prepare(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 97532676:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("flush")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.flush();
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -656594449:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInt32")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeInt32(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 94756344:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("close")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.close();
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 1429671867:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeUInt24")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeUInt24(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 1862232350:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("set_bigEndian")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							return this.set_bigEndian(haxe.lang.Runtime.toBool(((java.lang.Boolean) (dynargs[0]) )));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -656594478:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInt24")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeInt24(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 113399775:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("write")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.write(((haxe.io.Bytes) (dynargs[0]) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 1429671838:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeUInt16")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeUInt16(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 1188045309:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeFullBytes")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeFullBytes(((haxe.io.Bytes) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[2])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -656594507:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInt16")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeInt16(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -659427907:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeFloat")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeFloat(((double) (haxe.lang.Runtime.toDouble(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case -1406653784:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeInt8")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeInt8(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
					case 978263184:
					{
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						if (field.equals("writeDouble")) 
						{
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							__temp_executeDef1 = false;
							//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
							this.writeDouble(((double) (haxe.lang.Runtime.toDouble(dynargs[0])) ));
						}
						
						//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
			if (__temp_executeDef1) 
			{
				//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		baseArr.push("helper");
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		baseArr.push("bigEndian");
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


