// Generated by Haxe 4.2.2
package haxe.crypto;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Sha1 extends haxe.lang.HxObject
{
	public Sha1(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Sha1()
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
		haxe.crypto.Sha1.__hx_ctor_haxe_crypto_Sha1(this);
	}
	
	
	protected static void __hx_ctor_haxe_crypto_Sha1(haxe.crypto.Sha1 __hx_this)
	{
	}
	
	
	public static java.lang.String encode(java.lang.String s)
	{
		//line 32 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
		try 
		{
			//line 32 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
			byte[] b = ((java.lang.String) (((java.lang.Object) (s) )) ).getBytes(((java.nio.charset.Charset) (java.nio.charset.StandardCharsets.UTF_8) ));
			//line 32 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
			return haxe.io.Bytes.ofData(java.security.MessageDigest.getInstance(haxe.lang.Runtime.toString("SHA-1")).digest(((byte[]) (b) ))).toHex();
		}
		catch (java.lang.Throwable typedException)
		{
			//line 31 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static haxe.io.Bytes make(haxe.io.Bytes b)
	{
		//line 36 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
		try 
		{
			//line 36 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
			byte[] b1 = b.b;
			//line 36 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
			return haxe.io.Bytes.ofData(java.security.MessageDigest.getInstance(haxe.lang.Runtime.toString("SHA-1")).digest(((byte[]) (b1) )));
		}
		catch (java.lang.Throwable typedException)
		{
			//line 35 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static byte[] digest(byte[] b)
	{
		//line 40 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
		try 
		{
			//line 40 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
			return java.security.MessageDigest.getInstance(haxe.lang.Runtime.toString("SHA-1")).digest(((byte[]) (b) ));
		}
		catch (java.lang.Throwable typedException)
		{
			//line 39 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\crypto\\Sha1.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
}


