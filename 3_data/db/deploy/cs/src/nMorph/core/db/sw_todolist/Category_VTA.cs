// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.core.db.sw_todolist {
	public class Category_VTA : global::nMorph.framework.orm.client.ModelObject {
		
		static Category_VTA() {
			unchecked{
				global::nMorph.core.db.sw_todolist.Category_VTA.__rtti = "<class path=\"nMorph.core.db.sw_todolist.Category_VTA\" params=\"\">\n\t<extends path=\"nMorph.framework.orm.client.ModelObject\"/>\n\t<view public=\"1\" expr=\"new ViewSource(&quot;Category_VTA&quot;)\" line=\"33\" static=\"1\">\n\t\t<c path=\"nMorph.framework.orm.interfaces.ISource\"/>\n\t\t<meta><m n=\":value\"><e>new ViewSource(\"Category_VTA\")</e></m></meta>\n\t\t<haxe_doc>* referencia a vista para consultas</haxe_doc>\n\t</view>\n\t<col_CategoryId public=\"1\" expr=\"new UUIDSentence(&quot;Category_VTA&quot;, &quot;CategoryId&quot;, NullableEnum.NOTNULL, true)\" line=\"37\" static=\"1\">\n\t\t<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\n\t\t<meta><m n=\":value\"><e>new UUIDSentence(\"Category_VTA\", \"CategoryId\", NullableEnum.NOTNULL, true)</e></m></meta>\n\t\t<haxe_doc>* Referencia a columna CategoryId</haxe_doc>\n\t</col_CategoryId>\n\t<col_PersonId public=\"1\" expr=\"new UUIDSentence(&quot;Category_VTA&quot;, &quot;PersonId&quot;, NullableEnum.NULL, false)\" line=\"42\" static=\"1\">\n\t\t<c path=\"nMorph.framework.orm.common.fields.UUIDSentence\"/>\n\t\t<meta><m n=\":value\"><e>new UUIDSentence(\"Category_VTA\", \"PersonId\", NullableEnum.NULL, false)</e></m></meta>\n\t\t<haxe_doc>* Referencia a columna PersonId</haxe_doc>\n\t</col_PersonId>\n\t<col_CategoryName public=\"1\" expr=\"new VarcharSentence(&quot;Category_VTA&quot;, &quot;CategoryName&quot;, 50, NullableEnum.NOTNULL, false)\" line=\"47\" static=\"1\">\n\t\t<c path=\"nMorph.framework.orm.common.fields.VarcharSentence\"/>\n\t\t<meta><m n=\":value\"><e>new VarcharSentence(\"Category_VTA\", \"CategoryName\", 50, NullableEnum.NOTNULL, false)</e></m></meta>\n\t\t<haxe_doc>* Referencia a columna CategoryName</haxe_doc>\n\t</col_CategoryName>\n\t<WHERE public=\"1\" set=\"method\" line=\"55\" static=\"1\">\n\t\t<f a=\"Condition\">\n\t\t\t<c path=\"nMorph.framework.orm.interfaces.ICondition\"/>\n\t\t\t<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\n\t\t</f>\n\t\t<haxe_doc>* inicio r\u00e1pido de filtro\n\t * @param\tFiltro\n\t * @return objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\n\t</WHERE>\n\t<BYPK public=\"1\" set=\"method\" line=\"64\" static=\"1\">\n\t\t<f a=\"val_CategoryId\">\n\t\t\t<c path=\"nMorph.framework.common.datatypes.UUID\"/>\n\t\t\t<c path=\"nMorph.framework.orm.common.clauses.WhereClause\"/>\n\t\t</f>\n\t\t<haxe_doc>* filtro por clave primaria\n\t * @param\tvalor de clave primaria\n\t * @return  objeto para aplicar otras condiciones o ejecutar el query</haxe_doc>\n\t</BYPK>\n\t<CategoryId get=\"accessor\" set=\"null\">\n\t\t<c path=\"nMorph.framework.common.datatypes.UUID\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</CategoryId>\n\t<get_CategoryId public=\"1\" set=\"method\" line=\"70\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_CategoryId>\n\t<PersonId get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"nMorph.framework.common.datatypes.UUID\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</PersonId>\n\t<get_PersonId public=\"1\" set=\"method\" line=\"77\"><f a=\"\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></f></get_PersonId>\n\t<set_PersonId public=\"1\" set=\"method\" line=\"81\"><f a=\"value\">\n\t<c path=\"nMorph.framework.common.datatypes.UUID\"/>\n\t<c path=\"nMorph.framework.common.datatypes.UUID\"/>\n</f></set_PersonId>\n\t<CategoryName get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</CategoryName>\n\t<get_CategoryName public=\"1\" set=\"method\" line=\"91\"><f a=\"\"><c path=\"String\"/></f></get_CategoryName>\n\t<set_CategoryName public=\"1\" set=\"method\" line=\"95\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_CategoryName>\n\t<new public=\"1\" set=\"method\" line=\"25\">\n\t\t<f a=\"\"><x path=\"Void\"/></f>\n\t\t<haxe_doc>* Constructor de la clase Category_VTA que tiene equivalencia con la tabla de la base de datos</haxe_doc>\n\t</new>\n\t<haxe_doc>* ...\n * @author Smartwork</haxe_doc>\n\t<meta>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
				global::nMorph.core.db.sw_todolist.Category_VTA.view = ((global::nMorph.framework.orm.interfaces.ISource) (new global::nMorph.framework.orm.common.sources.ViewSource(((string) ("Category_VTA") ))) );
				global::nMorph.core.db.sw_todolist.Category_VTA.col_CategoryId = new global::nMorph.framework.orm.common.fields.UUIDSentence(((string) ("Category_VTA") ), ((string) ("CategoryId") ), ((global::nMorph.framework.orm.common.enums.NullableEnum) (global::nMorph.framework.orm.common.enums.NullableEnum.NOTNULL) ), ((bool) (true) ));
				global::nMorph.core.db.sw_todolist.Category_VTA.col_PersonId = new global::nMorph.framework.orm.common.fields.UUIDSentence(((string) ("Category_VTA") ), ((string) ("PersonId") ), ((global::nMorph.framework.orm.common.enums.NullableEnum) (global::nMorph.framework.orm.common.enums.NullableEnum.NULL) ), ((bool) (false) ));
				global::nMorph.core.db.sw_todolist.Category_VTA.col_CategoryName = new global::nMorph.framework.orm.common.fields.VarcharSentence(((string) ("Category_VTA") ), ((string) ("CategoryName") ), ((int) (50) ), ((global::nMorph.framework.orm.common.enums.NullableEnum) (global::nMorph.framework.orm.common.enums.NullableEnum.NOTNULL) ), ((bool) (false) ));
			}
		}
		
		
		public Category_VTA(global::haxe.lang.EmptyObject empty) : base(global::haxe.lang.EmptyObject.EMPTY) {
		}
		
		
		public Category_VTA() : base(global::haxe.lang.EmptyObject.EMPTY) {
			global::nMorph.core.db.sw_todolist.Category_VTA.__hx_ctor_nMorph_core_db_sw_todolist_Category_VTA(this);
		}
		
		
		protected static void __hx_ctor_nMorph_core_db_sw_todolist_Category_VTA(global::nMorph.core.db.sw_todolist.Category_VTA __hx_this) {
			global::nMorph.framework.orm.client.ModelObject.__hx_ctor_nMorph_framework_orm_client_ModelObject(__hx_this);
		}
		
		
		public static new string __rtti;
		
		public static global::nMorph.framework.orm.interfaces.ISource view;
		
		public static global::nMorph.framework.orm.common.fields.UUIDSentence col_CategoryId;
		
		public static global::nMorph.framework.orm.common.fields.UUIDSentence col_PersonId;
		
		public static global::nMorph.framework.orm.common.fields.VarcharSentence col_CategoryName;
		
		public static global::nMorph.framework.orm.common.clauses.WhereClause WHERE(global::nMorph.framework.orm.interfaces.ICondition Condition) {
			return global::nMorph.framework.orm.lang.SQL.SELECT(null, null).FROM(global::nMorph.core.db.sw_todolist.Category_VTA.view).WHERE(Condition);
		}
		
		
		public static global::nMorph.framework.orm.common.clauses.WhereClause BYPK(global::nMorph.framework.common.datatypes.UUID val_CategoryId) {
			return global::nMorph.framework.orm.lang.SQL.SELECT(null, null).FROM(global::nMorph.core.db.sw_todolist.Category_VTA.view).WHERE(global::nMorph.framework.orm.common.conditions.Condition.SET(global::nMorph.core.db.sw_todolist.Category_VTA.col_CategoryId, global::nMorph.framework.orm.common.enums.Op.Equal, global::nMorph.framework.orm.common.sentences.Val.uuid(val_CategoryId)));
		}
		
		
		public global::nMorph.framework.common.datatypes.UUID CategoryId;
		
		public virtual global::nMorph.framework.common.datatypes.UUID get_CategoryId() {
			return this.CategoryId;
		}
		
		
		public global::nMorph.framework.common.datatypes.UUID PersonId;
		
		public virtual global::nMorph.framework.common.datatypes.UUID get_PersonId() {
			return this.PersonId;
		}
		
		
		public virtual global::nMorph.framework.common.datatypes.UUID set_PersonId(global::nMorph.framework.common.datatypes.UUID @value) {
			if (( this.get_TrackChanges() && ( this.get_PersonId() != @value ) )) {
				this.AddChange(new global::nMorph.framework.orm.client.ChangeItem(((global::nMorph.framework.orm.common.sentences.FieldSentence) (global::nMorph.core.db.sw_todolist.Category_VTA.col_PersonId) ), ((object) (this.get_PersonId()) ), ((object) (@value) )));
			}
			
			return this.PersonId = @value;
		}
		
		
		public string CategoryName;
		
		public virtual string get_CategoryName() {
			return this.CategoryName;
		}
		
		
		public virtual string set_CategoryName(string @value) {
			if (( this.get_TrackChanges() && ( this.get_CategoryName() != @value ) )) {
				this.AddChange(new global::nMorph.framework.orm.client.ChangeItem(((global::nMorph.framework.orm.common.sentences.FieldSentence) (global::nMorph.core.db.sw_todolist.Category_VTA.col_CategoryName) ), ((object) (this.get_CategoryName()) ), ((object) (@value) )));
			}
			
			return this.CategoryName = @value;
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1669033097:
					{
						if (handleProperties) {
							this.set_CategoryName(global::haxe.lang.Runtime.toString(@value));
							return @value;
						}
						else {
							this.CategoryName = global::haxe.lang.Runtime.toString(@value);
							return @value;
						}
						
					}
					
					
					case 1563542256:
					{
						if (handleProperties) {
							this.set_PersonId(((global::nMorph.framework.common.datatypes.UUID) (@value) ));
							return @value;
						}
						else {
							this.PersonId = ((global::nMorph.framework.common.datatypes.UUID) (@value) );
							return @value;
						}
						
					}
					
					
					case 2008853145:
					{
						this.CategoryId = ((global::nMorph.framework.common.datatypes.UUID) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1046234758:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_CategoryName", 1046234758)) );
					}
					
					
					case 1746557202:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_CategoryName", 1746557202)) );
					}
					
					
					case 1669033097:
					{
						return ( (handleProperties) ? (this.get_CategoryName()) : (this.CategoryName) );
					}
					
					
					case 658807405:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_PersonId", 658807405)) );
					}
					
					
					case 306935545:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_PersonId", 306935545)) );
					}
					
					
					case 1563542256:
					{
						return ( (handleProperties) ? (this.get_PersonId()) : (this.PersonId) );
					}
					
					
					case 1840394978:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_CategoryId", 1840394978)) );
					}
					
					
					case 2008853145:
					{
						return ( (handleProperties) ? (this.get_CategoryId()) : (this.CategoryId) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1046234758:
					{
						return this.set_CategoryName(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 1746557202:
					{
						return this.get_CategoryName();
					}
					
					
					case 658807405:
					{
						return this.set_PersonId(((global::nMorph.framework.common.datatypes.UUID) (dynargs[0]) ));
					}
					
					
					case 306935545:
					{
						return this.get_PersonId();
					}
					
					
					case 1840394978:
					{
						return this.get_CategoryId();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("CategoryName");
			baseArr.push("PersonId");
			baseArr.push("CategoryId");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


