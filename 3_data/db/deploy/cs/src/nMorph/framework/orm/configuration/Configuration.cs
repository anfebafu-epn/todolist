// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.configuration {
	public class Configuration : global::haxe.lang.HxObject {
		
		public Configuration(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Configuration() {
			global::nMorph.framework.orm.configuration.Configuration.__hx_ctor_nMorph_framework_orm_configuration_Configuration(this);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_configuration_Configuration(global::nMorph.framework.orm.configuration.Configuration __hx_this) {
		}
		
		
		public static global::nMorph.framework.orm.configuration.ConfigurationData Data;
		
		public static void ReadConfiguration(string ConfigContent) {
			global::nMorph.framework.orm.configuration.Configuration.Data = ((global::nMorph.framework.orm.configuration.ConfigurationData) (global::nMorph.framework.common.helpers.SerializationHelper.Unserialize(ConfigContent)) );
		}
		
		
		public static string WriteExampleConfiguration() {
			global::nMorph.framework.orm.configuration.ConfigurationData cd = new global::nMorph.framework.orm.configuration.ConfigurationData();
			cd.set_DatabaseConnections(new global::Array<object>());
			global::nMorph.framework.orm.configuration.DatabaseConnectionData dcd = new global::nMorph.framework.orm.configuration.DatabaseConnectionData();
			dcd.set_DeploEnvironment(global::nMorph.framework.common.configuration.DeployEnvironmentEnum.DEVELOPMENT);
			dcd.set_DatabaseEngine(global::nMorph.framework.orm.configuration.DatabaseEngineEnum.SQLSERVER);
			dcd.set_DatabaseTypeAuthentication(global::nMorph.framework.orm.configuration.DatabaseTypeAuthenticationEnum.CREDENTIALS);
			dcd.set_ConnectionString("DEV");
			dcd.set_ServerPort("1433");
			dcd.set_Database("SW_TodoList");
			dcd.set_UserID("DevExternal");
			dcd.set_Password("3jWZuMr6Z83cy2spSy3g");
			dcd.set_ConnectionPoolSize(0);
			cd.get_DatabaseConnections().push(dcd);
			return global::nMorph.framework.common.helpers.SerializationHelper.Serialize(cd);
		}
		
		
	}
}


