// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.svc.transport {
	public class Router : global::haxe.lang.HxObject {
		
		public Router(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Router() {
			global::nMorph.framework.svc.transport.Router.__hx_ctor_nMorph_framework_svc_transport_Router(this);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_svc_transport_Router(global::nMorph.framework.svc.transport.Router __hx_this) {
		}
		
		
		public static string Process(string PostData) {
			unchecked {
				string DecryptedString = "";
				global::nMorph.framework.svc.msg.RequestMessage req = null;
				string LogicModule = "";
				string LogicClass = "";
				string LogicMethod = "";
				string Name = "";
				try {
					req = ((global::nMorph.framework.svc.msg.RequestMessage) (global::nMorph.framework.common.helpers.SerializationHelper.Unserialize(PostData)) );
					global::nMorph.framework.svc.msg.ResponseMessage res = new global::nMorph.framework.svc.msg.ResponseMessage();
					global::Array<object> Results = new global::Array<object>();
					{
						int _g = 0;
						global::Array<object> _g1 = req.get_Calls();
						while (( _g < _g1.length )) {
							global::nMorph.framework.svc.transport.MethodCall mc = ((global::nMorph.framework.svc.transport.MethodCall) (_g1[_g]) );
							 ++ _g;
							LogicModule = mc.get_LogicModule();
							LogicClass = mc.get_LogicClass();
							LogicMethod = mc.get_LogicMethod();
							Name = mc.get_Name();
							global::System.Type cl = global::Type.resolveClass(mc.get_LogicClass());
							if (global::haxe.lang.Runtime.typeEq(cl, null)) {
								global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Clase no encontrada. Revise actualizaci\u00f3n de m\u00f3dulos");
							}
							
							object obj = global::Type.createInstance<object>(((global::System.Type) (cl) ), ((global::Array) (new global::Array<object>(new object[]{})) ));
							object mt = global::Reflect.field(obj, mc.get_LogicMethod());
							if (( mt == null )) {
								global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(2, "M\u00e9todo no encontrado. Revise actualizaci\u00f3n de m\u00f3dulos");
							}
							
							object ret = global::Reflect.callMethod(obj, mt, mc.get_LogicParams());
							global::nMorph.framework.svc.transport.MethodResult mr = new global::nMorph.framework.svc.transport.MethodResult();
							mr.set_Name(mc.get_Name());
							mr.set_ReturnObject(ret);
							Results.push(mr);
						}
						
					}
					
					LogicModule = "";
					LogicClass = "";
					LogicMethod = "";
					Name = "OK";
					res.set_RequestSeq(req.get_RequestSeq());
					res.set_Results(Results);
					string ResponseString = global::nMorph.framework.common.helpers.SerializationHelper.Serialize(res);
					return ResponseString;
				}
				catch (global::nMorph.framework.common.exceptions.LogicException ex){
					return global::nMorph.framework.svc.exceptions.ExceptionManager.HandleException(ex, null, null, null, null, null, null);
				}
				
				catch (global::nMorph.framework.common.exceptions.SecurityException ex1){
					return global::nMorph.framework.svc.exceptions.ExceptionManager.HandleException(ex1, null, null, null, null, null, null);
				}
				
				catch (global::System.Exception _g2){
					{
						global::haxe.NativeStackTrace.exception = ((global::System.Exception) (((object) (_g2) )) );
					}
					
					global::haxe.Exception _g3 = global::haxe.Exception.caught(_g2);
					object _g4 = _g3.unwrap();
					{
						global::haxe.Exception ex2 = _g3;
						return global::nMorph.framework.svc.exceptions.ExceptionManager.HandleException(ex2, DecryptedString, req, LogicModule, LogicClass, LogicMethod, Name);
					}
					
				}
				
				
			}
		}
		
		
	}
}


