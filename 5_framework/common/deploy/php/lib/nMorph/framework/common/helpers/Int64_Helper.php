<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\common\helpers;

use \haxe\_Int64\___Int64;
use \php\Boot;

class Int64_Helper {
	/**
	 * @var float
	 */
	const MAX_32_PRECISION = 4294967296.0;

	/**
	 * @param float $f
	 * 
	 * @return ___Int64
	 */
	public static function fromFloat ($f) {
		#5_framework\common\src/nMorph/framework/common/helpers/Int64_Helper.hx:9: characters 9-47
		$h = (int)(($f / 4294967296.0));
		#5_framework\common\src/nMorph/framework/common/helpers/Int64_Helper.hx:10: characters 9-28
		$l = (int)($f);
		#5_framework\common\src/nMorph/framework/common/helpers/Int64_Helper.hx:11: characters 16-32
		$this1 = new ___Int64($h, $l);
		return $this1;
	}

	/**
	 * @param ___Int64 $i
	 * 
	 * @return float
	 */
	public static function toFloat ($i) {
		#5_framework\common\src/nMorph/framework/common/helpers/Int64_Helper.hx:15: characters 9-29
		$f = $i->low;
		#5_framework\common\src/nMorph/framework/common/helpers/Int64_Helper.hx:16: characters 9-41
		if ($f < 0) {
			#5_framework\common\src/nMorph/framework/common/helpers/Int64_Helper.hx:16: characters 20-41
			$f += 4294967296.0;
		}
		#5_framework\common\src/nMorph/framework/common/helpers/Int64_Helper.hx:17: characters 9-47
		return $i->high * 4294967296.0 + $f;
	}
}

Boot::registerClass(Int64_Helper::class, 'nMorph.framework.common.helpers.Int64_Helper');
