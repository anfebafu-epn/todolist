<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace _EnumValue;

use \php\Boot;

final class EnumValue_Impl_ {
	/**
	 * Matches enum instance `e` against pattern `pattern`, returning `true` if
	 * matching succeeded and `false` otherwise.
	 * Example usage:
	 * ```haxe
	 * if (e.match(pattern)) {
	 * // codeIfTrue
	 * } else {
	 * // codeIfFalse
	 * }
	 * ```
	 * This is equivalent to the following code:
	 * ```haxe
	 * switch (e) {
	 * case pattern:
	 * // codeIfTrue
	 * case _:
	 * // codeIfFalse
	 * }
	 * ```
	 * This method is implemented in the compiler. This definition exists only
	 * for documentation.
	 * 
	 * @param mixed $this
	 * @param mixed $pattern
	 * 
	 * @return bool
	 */
	public static function match ($this1, $pattern) {
		#C:\HaxeToolkit\haxe\std/EnumValue.hx:59: characters 3-15
		return false;
	}
}

Boot::registerClass(EnumValue_Impl_::class, '_EnumValue.EnumValue_Impl_');
