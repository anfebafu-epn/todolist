// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public class Token : global::haxe.lang.Enum {
		public Token() : base(0) { }

		
		protected Token(int index) : base(index) {
		}
		
		
		public static readonly global::hscript.Token TEof = new global::hscript.Token_TEof();
		
		public static global::hscript.Token TConst(global::hscript.Const c) {
			return new global::hscript.Token_TConst(c);
		}
		
		
		public static global::hscript.Token TId(string s) {
			return new global::hscript.Token_TId(s);
		}
		
		
		public static global::hscript.Token TOp(string s) {
			return new global::hscript.Token_TOp(s);
		}
		
		
		public static readonly global::hscript.Token TPOpen = new global::hscript.Token_TPOpen();
		
		public static readonly global::hscript.Token TPClose = new global::hscript.Token_TPClose();
		
		public static readonly global::hscript.Token TBrOpen = new global::hscript.Token_TBrOpen();
		
		public static readonly global::hscript.Token TBrClose = new global::hscript.Token_TBrClose();
		
		public static readonly global::hscript.Token TDot = new global::hscript.Token_TDot();
		
		public static readonly global::hscript.Token TComma = new global::hscript.Token_TComma();
		
		public static readonly global::hscript.Token TSemicolon = new global::hscript.Token_TSemicolon();
		
		public static readonly global::hscript.Token TBkOpen = new global::hscript.Token_TBkOpen();
		
		public static readonly global::hscript.Token TBkClose = new global::hscript.Token_TBkClose();
		
		public static readonly global::hscript.Token TQuestion = new global::hscript.Token_TQuestion();
		
		public static readonly global::hscript.Token TDoubleDot = new global::hscript.Token_TDoubleDot();
		
		public static global::hscript.Token TMeta(string s) {
			return new global::hscript.Token_TMeta(s);
		}
		
		
		public static global::hscript.Token TPrepro(string s) {
			return new global::hscript.Token_TPrepro(s);
		}
		
		
		protected static readonly string[] __hx_constructs = new string[]{"TEof", "TConst", "TId", "TOp", "TPOpen", "TPClose", "TBrOpen", "TBrClose", "TDot", "TComma", "TSemicolon", "TBkOpen", "TBkClose", "TQuestion", "TDoubleDot", "TMeta", "TPrepro"};
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TEof : global::hscript.Token {
		
		public Token_TEof() : base(0) {
		}
		
		
		public override string getTag() {
			return "TEof";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TConst : global::hscript.Token {
		
		public Token_TConst(global::hscript.Const c) : base(1) {
			this.c = c;
		}
		
		
		public override global::Array<object> getParams() {
			return new global::Array<object>(new object[]{this.c});
		}
		
		
		public override string getTag() {
			return "TConst";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::haxe.lang.Enum.paramsGetHashCode(1, new object[]{this.c});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::hscript.Token_TConst en = ( other as global::hscript.Token_TConst );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Type.enumEq<object>(((object) (this.c) ), ((object) (en.c) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::haxe.lang.Enum.paramsToString("TConst", new object[]{this.c});
		}
		
		
		public readonly global::hscript.Const c;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TId : global::hscript.Token {
		
		public Token_TId(string s) : base(2) {
			this.s = s;
		}
		
		
		public override global::Array<object> getParams() {
			return new global::Array<object>(new object[]{this.s});
		}
		
		
		public override string getTag() {
			return "TId";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::haxe.lang.Enum.paramsGetHashCode(2, new object[]{this.s});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::hscript.Token_TId en = ( other as global::hscript.Token_TId );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Type.enumEq<object>(((object) (this.s) ), ((object) (en.s) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::haxe.lang.Enum.paramsToString("TId", new object[]{this.s});
		}
		
		
		public readonly string s;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TOp : global::hscript.Token {
		
		public Token_TOp(string s) : base(3) {
			this.s = s;
		}
		
		
		public override global::Array<object> getParams() {
			return new global::Array<object>(new object[]{this.s});
		}
		
		
		public override string getTag() {
			return "TOp";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::haxe.lang.Enum.paramsGetHashCode(3, new object[]{this.s});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::hscript.Token_TOp en = ( other as global::hscript.Token_TOp );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Type.enumEq<object>(((object) (this.s) ), ((object) (en.s) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::haxe.lang.Enum.paramsToString("TOp", new object[]{this.s});
		}
		
		
		public readonly string s;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TPOpen : global::hscript.Token {
		
		public Token_TPOpen() : base(4) {
		}
		
		
		public override string getTag() {
			return "TPOpen";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TPClose : global::hscript.Token {
		
		public Token_TPClose() : base(5) {
		}
		
		
		public override string getTag() {
			return "TPClose";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TBrOpen : global::hscript.Token {
		
		public Token_TBrOpen() : base(6) {
		}
		
		
		public override string getTag() {
			return "TBrOpen";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TBrClose : global::hscript.Token {
		
		public Token_TBrClose() : base(7) {
		}
		
		
		public override string getTag() {
			return "TBrClose";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TDot : global::hscript.Token {
		
		public Token_TDot() : base(8) {
		}
		
		
		public override string getTag() {
			return "TDot";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TComma : global::hscript.Token {
		
		public Token_TComma() : base(9) {
		}
		
		
		public override string getTag() {
			return "TComma";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TSemicolon : global::hscript.Token {
		
		public Token_TSemicolon() : base(10) {
		}
		
		
		public override string getTag() {
			return "TSemicolon";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TBkOpen : global::hscript.Token {
		
		public Token_TBkOpen() : base(11) {
		}
		
		
		public override string getTag() {
			return "TBkOpen";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TBkClose : global::hscript.Token {
		
		public Token_TBkClose() : base(12) {
		}
		
		
		public override string getTag() {
			return "TBkClose";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TQuestion : global::hscript.Token {
		
		public Token_TQuestion() : base(13) {
		}
		
		
		public override string getTag() {
			return "TQuestion";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TDoubleDot : global::hscript.Token {
		
		public Token_TDoubleDot() : base(14) {
		}
		
		
		public override string getTag() {
			return "TDoubleDot";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TMeta : global::hscript.Token {
		
		public Token_TMeta(string s) : base(15) {
			this.s = s;
		}
		
		
		public override global::Array<object> getParams() {
			return new global::Array<object>(new object[]{this.s});
		}
		
		
		public override string getTag() {
			return "TMeta";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::haxe.lang.Enum.paramsGetHashCode(15, new object[]{this.s});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::hscript.Token_TMeta en = ( other as global::hscript.Token_TMeta );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Type.enumEq<object>(((object) (this.s) ), ((object) (en.s) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::haxe.lang.Enum.paramsToString("TMeta", new object[]{this.s});
		}
		
		
		public readonly string s;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public sealed class Token_TPrepro : global::hscript.Token {
		
		public Token_TPrepro(string s) : base(16) {
			this.s = s;
		}
		
		
		public override global::Array<object> getParams() {
			return new global::Array<object>(new object[]{this.s});
		}
		
		
		public override string getTag() {
			return "TPrepro";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::haxe.lang.Enum.paramsGetHashCode(16, new object[]{this.s});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::hscript.Token_TPrepro en = ( other as global::hscript.Token_TPrepro );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Type.enumEq<object>(((object) (this.s) ), ((object) (en.s) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::haxe.lang.Enum.paramsToString("TPrepro", new object[]{this.s});
		}
		
		
		public readonly string s;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public class Parser : global::haxe.lang.HxObject {
		
		public Parser(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Parser() {
			global::hscript.Parser.__hx_ctor_hscript_Parser(this);
		}
		
		
		protected static void __hx_ctor_hscript_Parser(global::hscript.Parser __hx_this) {
			unchecked {
				__hx_this.uid = 0;
				__hx_this.preprocesorValues = new global::haxe.ds.StringMap<object>();
				{
					__hx_this.line = 1;
					__hx_this.opChars = "+*/-=!><&|^%~";
					__hx_this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
					global::Array<object> priorities = new global::Array<object>(new object[]{new global::Array<string>(new string[]{"%"}), new global::Array<string>(new string[]{"*", "/"}), new global::Array<string>(new string[]{"+", "-"}), new global::Array<string>(new string[]{"<<", ">>", ">>>"}), new global::Array<string>(new string[]{"|", "&", "^"}), new global::Array<string>(new string[]{"==", "!=", ">", "<", ">=", "<="}), new global::Array<string>(new string[]{"..."}), new global::Array<string>(new string[]{"&&"}), new global::Array<string>(new string[]{"||"}), new global::Array<string>(new string[]{"=", "+=", "-=", "*=", "/=", "%=", "<<=", ">>=", ">>>=", "|=", "&=", "^=", "=>"}), new global::Array<string>(new string[]{"->"})});
					__hx_this.opPriority = new global::haxe.ds.StringMap<int>();
					__hx_this.opRightAssoc = new global::haxe.ds.StringMap<bool>();
					{
						int _g = 0;
						int _g1 = priorities.length;
						while (( _g < _g1 )) {
							int i = _g++;
							{
								int _g2 = 0;
								global::Array<string> _g3 = ((global::Array<string>) (global::Array<object>.__hx_cast<string>(((global::Array) (priorities[i]) ))) );
								while (( _g2 < _g3.length )) {
									string x = _g3[_g2];
									 ++ _g2;
									((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (__hx_this.opPriority) )) ))) ).@set(x, i);
									if (( i == 9 )) {
										((global::haxe.ds.StringMap<bool>) (global::haxe.ds.StringMap<object>.__hx_cast<bool>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, bool>) (__hx_this.opRightAssoc) )) ))) ).@set(x, true);
									}
									
								}
								
							}
							
						}
						
					}
					
					{
						{
							string x1 = "!";
							((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (__hx_this.opPriority) )) ))) ).@set(x1, ( (( ( x1 == "++" ) || ( x1 == "--" ) )) ? (-1) : (-2) ));
						}
						
						{
							string x2 = "++";
							((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (__hx_this.opPriority) )) ))) ).@set(x2, ( (( ( x2 == "++" ) || ( x2 == "--" ) )) ? (-1) : (-2) ));
						}
						
						{
							string x3 = "--";
							((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (__hx_this.opPriority) )) ))) ).@set(x3, ( (( ( x3 == "++" ) || ( x3 == "--" ) )) ? (-1) : (-2) ));
						}
						
						{
							string x4 = "~";
							((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (__hx_this.opPriority) )) ))) ).@set(x4, ( (( ( x4 == "++" ) || ( x4 == "--" ) )) ? (-1) : (-2) ));
						}
						
					}
					
				}
				
			}
		}
		
		
		public int line;
		
		public string opChars;
		
		public string identChars;
		
		public global::haxe.ds.StringMap<int> opPriority;
		
		public global::haxe.ds.StringMap<bool> opRightAssoc;
		
		public global::haxe.ds.StringMap preprocesorValues;
		
		public bool allowJSON;
		
		public bool allowTypes;
		
		public bool allowMetadata;
		
		public bool resumeErrors;
		
		public string input;
		
		public int readPos;
		
		public int @char;
		
		public global::Array<bool> ops;
		
		public global::Array<bool> idents;
		
		public int uid;
		
		public string origin;
		
		public int tokenMin;
		
		public int tokenMax;
		
		public int oldTokenMin;
		
		public int oldTokenMax;
		
		public global::haxe.ds.List<object> tokens;
		
		public void error(global::hscript.ErrorDef err, int pmin, int pmax) {
			if ( ! (this.resumeErrors) ) {
				throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (err) ), ((int) (pmin) ), ((int) (pmax) ), ((string) (this.origin) ), ((int) (this.line) )))) );
			}
			
		}
		
		
		public virtual void invalidChar(int c) {
			unchecked {
				if ( ! (this.resumeErrors) ) {
					throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.EInvalidChar(c)) ), ((int) (( this.readPos - 1 )) ), ((int) (( this.readPos - 1 )) ), ((string) (this.origin) ), ((int) (this.line) )))) );
				}
				
			}
		}
		
		
		public virtual void initParser(string origin) {
			unchecked {
				this.preprocStack = new global::Array<object>(new object[]{});
				this.origin = origin;
				this.readPos = 0;
				this.tokenMin = this.oldTokenMin = 0;
				this.tokenMax = this.oldTokenMax = 0;
				this.tokens = new global::haxe.ds.List<object>();
				this.@char = -1;
				this.ops = new global::Array<bool>();
				this.idents = new global::Array<bool>();
				this.uid = 0;
				{
					int _g = 0;
					int _g1 = this.opChars.Length;
					while (( _g < _g1 )) {
						int i = _g++;
						this.ops[(global::haxe.lang.StringExt.charCodeAt(this.opChars, i)).@value] = true;
					}
					
				}
				
				{
					int _g2 = 0;
					int _g3 = this.identChars.Length;
					while (( _g2 < _g3 )) {
						int i1 = _g2++;
						this.idents[(global::haxe.lang.StringExt.charCodeAt(this.identChars, i1)).@value] = true;
					}
					
				}
				
			}
		}
		
		
		public virtual object parseString(string s, string origin) {
			unchecked {
				if (( origin == null )) {
					origin = "hscript";
				}
				
				this.initParser(origin);
				this.input = s;
				this.readPos = 0;
				global::Array<object> a = new global::Array<object>();
				while (true) {
					global::hscript.Token tk = this.token();
					if (( tk == global::hscript.Token.TEof )) {
						break;
					}
					
					{
						this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
					}
					
					this.parseFullExpr(a);
				}
				
				if (( a.length == 1 )) {
					return a[0];
				}
				else {
					global::hscript.ExprDef e = global::hscript.ExprDef.EBlock(a);
					global::haxe.lang.Null<int> pmin = new global::haxe.lang.Null<int>(0, true);
					global::haxe.lang.Null<int> pmax = default(global::haxe.lang.Null<int>);
					if (( e == null )) {
						return null;
					}
					else {
						if ( ! (pmin.hasValue) ) {
							pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
						}
						
						if ( ! (pmax.hasValue) ) {
							pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
						}
						
						return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
					}
					
				}
				
			}
		}
		
		
		public virtual object unexpected(global::hscript.Token tk) {
			{
				global::hscript.ErrorDef err = global::hscript.ErrorDef.EUnexpected(this.tokenString(tk));
				if ( ! (this.resumeErrors) ) {
					throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (err) ), ((int) (this.tokenMin) ), ((int) (this.tokenMax) ), ((string) (this.origin) ), ((int) (this.line) )))) );
				}
				
			}
			
			return null;
		}
		
		
		public void push(global::hscript.Token tk) {
			this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
		}
		
		
		public void ensure(global::hscript.Token tk) {
			global::hscript.Token t = this.token();
			if (( t != tk )) {
				this.unexpected(t);
			}
			
		}
		
		
		public void ensureToken(global::hscript.Token tk) {
			global::hscript.Token t = this.token();
			if ( ! (global::Type.enumEq<object>(((object) (t) ), ((object) (tk) ))) ) {
				this.unexpected(t);
			}
			
		}
		
		
		public virtual bool maybe(global::hscript.Token tk) {
			global::hscript.Token t = this.token();
			if (global::Type.enumEq<object>(((object) (t) ), ((object) (tk) ))) {
				return true;
			}
			
			{
				this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{t}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			
			return false;
		}
		
		
		public virtual string getIdent() {
			unchecked {
				global::hscript.Token tk = this.token();
				if (( tk._hx_index == 2 )) {
					string id = ( tk as global::hscript.Token_TId ).s;
					return id;
				}
				else {
					this.unexpected(tk);
					return null;
				}
				
			}
		}
		
		
		public global::hscript.ExprDef expr(object e) {
			return ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) );
		}
		
		
		public int pmin(object e) {
			if (( e == null )) {
				return 0;
			}
			else {
				return ((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) );
			}
			
		}
		
		
		public int pmax(object e) {
			if (( e == null )) {
				return 0;
			}
			else {
				return ((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) );
			}
			
		}
		
		
		public object mk(global::hscript.ExprDef e, global::haxe.lang.Null<int> pmin, global::haxe.lang.Null<int> pmax) {
			if (( e == null )) {
				return null;
			}
			
			if ( ! (pmin.hasValue) ) {
				pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
			}
			
			if ( ! (pmax.hasValue) ) {
				pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
			}
			
			return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
		}
		
		
		public virtual bool isBlock(object e) {
			unchecked {
				if (( e == null )) {
					return false;
				}
				
				global::hscript.ExprDef _g = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) );
				switch (_g._hx_index) {
					case 2:
					{
						string _g1 = ( _g as global::hscript.ExprDef_EVar ).n;
						global::hscript.CType t = ( _g as global::hscript.ExprDef_EVar ).t;
						object e1 = ( _g as global::hscript.ExprDef_EVar ).e;
						if (( e1 != null )) {
							return this.isBlock(e1);
						}
						else if (( t != null )) {
							if (( t == null )) {
								return false;
							}
							else if (( t._hx_index == 2 )) {
								global::Array<object> _g2 = ( t as global::hscript.CType_CTAnon ).fields;
								return true;
							}
							else {
								return false;
							}
							
						}
						else {
							return false;
						}
						
					}
					
					
					case 4:
					{
						global::Array<object> _g3 = ( _g as global::hscript.ExprDef_EBlock ).e;
						return true;
					}
					
					
					case 6:
					{
						string _g4 = ( _g as global::hscript.ExprDef_EBinop ).op;
						object _g5 = ( _g as global::hscript.ExprDef_EBinop ).e1;
						object e2 = ( _g as global::hscript.ExprDef_EBinop ).e2;
						return this.isBlock(e2);
					}
					
					
					case 7:
					{
						string _g6 = ( _g as global::hscript.ExprDef_EUnop ).op;
						bool prefix = ( _g as global::hscript.ExprDef_EUnop ).prefix;
						object e3 = ( _g as global::hscript.ExprDef_EUnop ).e;
						if ( ! (prefix) ) {
							return this.isBlock(e3);
						}
						else {
							return false;
						}
						
					}
					
					
					case 9:
					{
						object _g7 = ( _g as global::hscript.ExprDef_EIf ).cond;
						object e11 = ( _g as global::hscript.ExprDef_EIf ).e1;
						object e21 = ( _g as global::hscript.ExprDef_EIf ).e2;
						if (( e21 != null )) {
							return this.isBlock(e21);
						}
						else {
							return this.isBlock(e11);
						}
						
					}
					
					
					case 10:
					{
						object _g8 = ( _g as global::hscript.ExprDef_EWhile ).cond;
						object e4 = ( _g as global::hscript.ExprDef_EWhile ).e;
						return this.isBlock(e4);
					}
					
					
					case 11:
					{
						string _g9 = ( _g as global::hscript.ExprDef_EFor ).v;
						object _g10 = ( _g as global::hscript.ExprDef_EFor ).it;
						object e5 = ( _g as global::hscript.ExprDef_EFor ).e;
						return this.isBlock(e5);
					}
					
					
					case 14:
					{
						global::Array<object> _g11 = ( _g as global::hscript.ExprDef_EFunction ).args;
						string _g12 = ( _g as global::hscript.ExprDef_EFunction ).name;
						global::hscript.CType _g13 = ( _g as global::hscript.ExprDef_EFunction ).ret;
						object e6 = ( _g as global::hscript.ExprDef_EFunction ).e;
						return this.isBlock(e6);
					}
					
					
					case 15:
					{
						object e7 = ( _g as global::hscript.ExprDef_EReturn ).e;
						if (( e7 != null )) {
							return this.isBlock(e7);
						}
						else {
							return false;
						}
						
					}
					
					
					case 20:
					{
						object _g14 = ( _g as global::hscript.ExprDef_ETry ).e;
						string _g15 = ( _g as global::hscript.ExprDef_ETry ).v;
						global::hscript.CType _g16 = ( _g as global::hscript.ExprDef_ETry ).t;
						object e8 = ( _g as global::hscript.ExprDef_ETry ).ecatch;
						return this.isBlock(e8);
					}
					
					
					case 21:
					{
						global::Array<object> _g17 = ( _g as global::hscript.ExprDef_EObject ).fl;
						return true;
					}
					
					
					case 23:
					{
						object _g18 = ( _g as global::hscript.ExprDef_ESwitch ).e;
						global::Array<object> _g19 = ( _g as global::hscript.ExprDef_ESwitch ).cases;
						object _g20 = ( _g as global::hscript.ExprDef_ESwitch ).defaultExpr;
						return true;
					}
					
					
					case 24:
					{
						object _g21 = ( _g as global::hscript.ExprDef_EDoWhile ).cond;
						object e9 = ( _g as global::hscript.ExprDef_EDoWhile ).e;
						return this.isBlock(e9);
					}
					
					
					case 25:
					{
						string _g22 = ( _g as global::hscript.ExprDef_EMeta ).name;
						global::Array<object> _g23 = ( _g as global::hscript.ExprDef_EMeta ).args;
						object e10 = ( _g as global::hscript.ExprDef_EMeta ).e;
						return this.isBlock(e10);
					}
					
					
					default:
					{
						return false;
					}
					
				}
				
			}
		}
		
		
		public virtual void parseFullExpr(global::Array<object> exprs) {
			unchecked {
				object e = this.parseExpr();
				exprs.push(e);
				global::hscript.Token tk = this.token();
				while (true) {
					bool tmp = default(bool);
					if (( ( tk == global::hscript.Token.TComma ) && ( e != null ) )) {
						global::hscript.ExprDef _g = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) );
						if (( _g._hx_index == 2 )) {
							string _g1 = ( _g as global::hscript.ExprDef_EVar ).n;
							global::hscript.CType _g2 = ( _g as global::hscript.ExprDef_EVar ).t;
							object _g3 = ( _g as global::hscript.ExprDef_EVar ).e;
							tmp = true;
						}
						else {
							tmp = false;
						}
						
					}
					else {
						tmp = false;
					}
					
					if ( ! (tmp) ) {
						break;
					}
					
					e = this.parseStructure("var");
					exprs.push(e);
					tk = this.token();
				}
				
				if (( ( tk != global::hscript.Token.TSemicolon ) && ( tk != global::hscript.Token.TEof ) )) {
					if (this.isBlock(e)) {
						this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
					}
					else {
						this.unexpected(tk);
					}
					
				}
				
			}
		}
		
		
		public virtual object parseObject(global::haxe.lang.Null<int> p1) {
			unchecked {
				global::Array<object> fl = new global::Array<object>();
				while (true) {
					global::hscript.Token tk = this.token();
					string id = null;
					switch (tk._hx_index) {
						case 1:
						{
							global::hscript.Const c = ( tk as global::hscript.Token_TConst ).c;
							{
								if ( ! (this.allowJSON) ) {
									this.unexpected(tk);
								}
								
								if (( c._hx_index == 2 )) {
									string s = ( c as global::hscript.Const_CString ).s;
									id = s;
								}
								else {
									this.unexpected(tk);
								}
								
							}
							
							break;
						}
						
						
						case 2:
						{
							string i = ( tk as global::hscript.Token_TId ).s;
							id = i;
							break;
						}
						
						
						case 7:
						{
							goto label1;
						}
						
						
						default:
						{
							this.unexpected(tk);
							goto label1;
						}
						
					}
					
					{
						global::hscript.Token t = this.token();
						if (( t != global::hscript.Token.TDoubleDot )) {
							this.unexpected(t);
						}
						
					}
					
					object __temp_stmt2 = null;
					{
						object __temp_odecl1 = this.parseExpr();
						__temp_stmt2 = new global::haxe.lang.DynamicObject(new int[]{101, 1224700491}, new object[]{__temp_odecl1, id}, new int[]{}, new double[]{});
					}
					
					fl.push(__temp_stmt2);
					tk = this.token();
					switch (tk._hx_index) {
						case 7:
						{
							goto label1;
						}
						
						
						case 9:
						{
							break;
						}
						
						
						default:
						{
							this.unexpected(tk);
							break;
						}
						
					}
					
				}
				label1: {};
				global::hscript.ExprDef e = global::hscript.ExprDef.EObject(fl);
				global::haxe.lang.Null<int> pmin = p1;
				global::haxe.lang.Null<int> pmax = default(global::haxe.lang.Null<int>);
				object tmp = null;
				if (( e == null )) {
					tmp = null;
				}
				else {
					if ( ! (pmin.hasValue) ) {
						pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
					}
					
					if ( ! (pmax.hasValue) ) {
						pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
					}
					
					tmp = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
				}
				
				return this.parseExprNext(tmp);
			}
		}
		
		
		public virtual object parseExpr() {
			unchecked {
				global::hscript.Token tk = this.token();
				int p1 = this.tokenMin;
				switch (tk._hx_index) {
					case 1:
					{
						global::hscript.Const c = ( tk as global::hscript.Token_TConst ).c;
						global::hscript.ExprDef e = global::hscript.ExprDef.EConst(c);
						global::haxe.lang.Null<int> pmin = default(global::haxe.lang.Null<int>);
						global::haxe.lang.Null<int> pmax = default(global::haxe.lang.Null<int>);
						object tmp = null;
						if (( e == null )) {
							tmp = null;
						}
						else {
							if ( ! (pmin.hasValue) ) {
								pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax.hasValue) ) {
								pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							tmp = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
						return this.parseExprNext(tmp);
					}
					
					
					case 2:
					{
						string id = ( tk as global::hscript.Token_TId ).s;
						object e1 = this.parseStructure(id);
						if (( e1 == null )) {
							global::hscript.ExprDef e2 = global::hscript.ExprDef.EIdent(id);
							global::haxe.lang.Null<int> pmin1 = default(global::haxe.lang.Null<int>);
							global::haxe.lang.Null<int> pmax1 = default(global::haxe.lang.Null<int>);
							if (( e2 == null )) {
								e1 = null;
							}
							else {
								if ( ! (pmin1.hasValue) ) {
									pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax1.hasValue) ) {
									pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								e1 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e2, (pmax1).toDynamic(), (pmin1).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
						}
						
						return this.parseExprNext(e1);
					}
					
					
					case 3:
					{
						string op = ( tk as global::hscript.Token_TOp ).s;
						if (( op == "-" )) {
							int start = this.tokenMin;
							object e3 = this.parseExpr();
							if (( e3 == null )) {
								return this.makeUnop(op, e3);
							}
							
							global::hscript.ExprDef _g = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e3, "e", 101, true)) );
							if (( _g._hx_index == 0 )) {
								global::hscript.Const _g1 = ( _g as global::hscript.ExprDef_EConst ).c;
								switch (_g1._hx_index) {
									case 0:
									{
										int i = ( _g1 as global::hscript.Const_CInt ).v;
										global::hscript.ExprDef e4 = global::hscript.ExprDef.EConst(global::hscript.Const.CInt( - (i) ));
										global::haxe.lang.Null<int> pmin2 = new global::haxe.lang.Null<int>(start, true);
										global::haxe.lang.Null<int> pmax2 = new global::haxe.lang.Null<int>(( (( e3 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e3, "pmax", 1247473716, true)) )) ), true);
										if (( e4 == null )) {
											return null;
										}
										else {
											if ( ! (pmin2.hasValue) ) {
												pmin2 = new global::haxe.lang.Null<int>(this.tokenMin, true);
											}
											
											if ( ! (pmax2.hasValue) ) {
												pmax2 = new global::haxe.lang.Null<int>(this.tokenMax, true);
											}
											
											return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e4, (pmax2).toDynamic(), (pmin2).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
										}
										
									}
									
									
									case 1:
									{
										double f = ( _g1 as global::hscript.Const_CFloat ).f;
										global::hscript.ExprDef e5 = global::hscript.ExprDef.EConst(global::hscript.Const.CFloat( - (f) ));
										global::haxe.lang.Null<int> pmin3 = new global::haxe.lang.Null<int>(start, true);
										global::haxe.lang.Null<int> pmax3 = new global::haxe.lang.Null<int>(( (( e3 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e3, "pmax", 1247473716, true)) )) ), true);
										if (( e5 == null )) {
											return null;
										}
										else {
											if ( ! (pmin3.hasValue) ) {
												pmin3 = new global::haxe.lang.Null<int>(this.tokenMin, true);
											}
											
											if ( ! (pmax3.hasValue) ) {
												pmax3 = new global::haxe.lang.Null<int>(this.tokenMax, true);
											}
											
											return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e5, (pmax3).toDynamic(), (pmin3).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
										}
										
									}
									
									
									default:
									{
										return this.makeUnop(op, e3);
									}
									
								}
								
							}
							else {
								return this.makeUnop(op, e3);
							}
							
						}
						
						if (( (((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (this.opPriority) )) ))) ).@get(op)).@value < 0 )) {
							return this.makeUnop(op, this.parseExpr());
						}
						
						return this.unexpected(tk);
					}
					
					
					case 4:
					{
						tk = this.token();
						if (( tk == global::hscript.Token.TPClose )) {
							{
								global::hscript.Token t = this.token();
								if ( ! (global::Type.enumEq<object>(((object) (t) ), ((object) (global::hscript.Token.TOp("->")) ))) ) {
									this.unexpected(t);
								}
								
							}
							
							object eret = this.parseExpr();
							global::hscript.ExprDef e6 = global::hscript.ExprDef.EReturn(eret);
							global::haxe.lang.Null<int> pmin4 = new global::haxe.lang.Null<int>(p1, true);
							global::haxe.lang.Null<int> pmax4 = default(global::haxe.lang.Null<int>);
							object e7 = null;
							if (( e6 == null )) {
								e7 = null;
							}
							else {
								if ( ! (pmin4.hasValue) ) {
									pmin4 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax4.hasValue) ) {
									pmax4 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								e7 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e6, (pmax4).toDynamic(), (pmin4).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
							global::hscript.ExprDef e8 = global::hscript.ExprDef.EFunction(new global::Array<object>(new object[]{}), e7, null, null);
							global::haxe.lang.Null<int> pmin5 = new global::haxe.lang.Null<int>(p1, true);
							global::haxe.lang.Null<int> pmax5 = default(global::haxe.lang.Null<int>);
							if (( e8 == null )) {
								return null;
							}
							else {
								if ( ! (pmin5.hasValue) ) {
									pmin5 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax5.hasValue) ) {
									pmax5 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e8, (pmax5).toDynamic(), (pmin5).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
						}
						
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						object e9 = this.parseExpr();
						tk = this.token();
						switch (tk._hx_index) {
							case 5:
							{
								global::hscript.ExprDef e10 = global::hscript.ExprDef.EParent(e9);
								global::haxe.lang.Null<int> pmin6 = new global::haxe.lang.Null<int>(p1, true);
								global::haxe.lang.Null<int> pmax6 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								object tmp1 = null;
								if (( e10 == null )) {
									tmp1 = null;
								}
								else {
									if ( ! (pmin6.hasValue) ) {
										pmin6 = new global::haxe.lang.Null<int>(this.tokenMin, true);
									}
									
									if ( ! (pmax6.hasValue) ) {
										pmax6 = new global::haxe.lang.Null<int>(this.tokenMax, true);
									}
									
									tmp1 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e10, (pmax6).toDynamic(), (pmin6).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
								}
								
								return this.parseExprNext(tmp1);
							}
							
							
							case 9:
							{
								global::hscript.ExprDef _g2 = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e9, "e", 101, true)) );
								if (( _g2._hx_index == 1 )) {
									string v = ( _g2 as global::hscript.ExprDef_EIdent ).v;
									return this.parseLambda(new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{v}, new int[]{}, new double[]{})}), new global::haxe.lang.Null<int>(( (( e9 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e9, "pmin", 1247475490, true)) )) ), true));
								}
								
								break;
							}
							
							
							case 14:
							{
								global::hscript.CType t1 = this.parseType();
								tk = this.token();
								switch (tk._hx_index) {
									case 5:
									{
										global::hscript.ExprDef e11 = global::hscript.ExprDef.ECheckType(e9, t1);
										global::haxe.lang.Null<int> pmin7 = new global::haxe.lang.Null<int>(p1, true);
										global::haxe.lang.Null<int> pmax7 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										object tmp2 = null;
										if (( e11 == null )) {
											tmp2 = null;
										}
										else {
											if ( ! (pmin7.hasValue) ) {
												pmin7 = new global::haxe.lang.Null<int>(this.tokenMin, true);
											}
											
											if ( ! (pmax7.hasValue) ) {
												pmax7 = new global::haxe.lang.Null<int>(this.tokenMax, true);
											}
											
											tmp2 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e11, (pmax7).toDynamic(), (pmin7).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
										}
										
										return this.parseExprNext(tmp2);
									}
									
									
									case 9:
									{
										global::hscript.ExprDef _g3 = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e9, "e", 101, true)) );
										if (( _g3._hx_index == 1 )) {
											string v1 = ( _g3 as global::hscript.ExprDef_EIdent ).v;
											return this.parseLambda(new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{116, 1224700491}, new object[]{t1, v1}, new int[]{}, new double[]{})}), new global::haxe.lang.Null<int>(( (( e9 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e9, "pmin", 1247475490, true)) )) ), true));
										}
										
										break;
									}
									
									
									default:
									{
										break;
									}
									
								}
								
								break;
							}
							
							
							default:
							{
								break;
							}
							
						}
						
						return this.unexpected(tk);
					}
					
					
					case 6:
					{
						tk = this.token();
						switch (tk._hx_index) {
							case 1:
							{
								global::hscript.Const c1 = ( tk as global::hscript.Token_TConst ).c;
								if (this.allowJSON) {
									if (( c1._hx_index == 2 )) {
										string _g4 = ( c1 as global::hscript.Const_CString ).s;
										{
											global::hscript.Token tk2 = this.token();
											{
												this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk2}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
												this.tokenMin = this.oldTokenMin;
												this.tokenMax = this.oldTokenMax;
											}
											
											{
												this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
												this.tokenMin = this.oldTokenMin;
												this.tokenMax = this.oldTokenMax;
											}
											
											if (( tk2._hx_index == 14 )) {
												return this.parseExprNext(this.parseObject(new global::haxe.lang.Null<int>(p1, true)));
											}
											
										}
										
									}
									else {
										this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
										this.tokenMin = this.oldTokenMin;
										this.tokenMax = this.oldTokenMax;
									}
									
								}
								else {
									this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
									this.tokenMin = this.oldTokenMin;
									this.tokenMax = this.oldTokenMax;
								}
								
								break;
							}
							
							
							case 2:
							{
								string _g5 = ( tk as global::hscript.Token_TId ).s;
								{
									global::hscript.Token tk21 = this.token();
									{
										this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk21}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
										this.tokenMin = this.oldTokenMin;
										this.tokenMax = this.oldTokenMax;
									}
									
									{
										this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
										this.tokenMin = this.oldTokenMin;
										this.tokenMax = this.oldTokenMax;
									}
									
									if (( tk21._hx_index == 14 )) {
										return this.parseExprNext(this.parseObject(new global::haxe.lang.Null<int>(p1, true)));
									}
									
								}
								
								break;
							}
							
							
							case 7:
							{
								global::hscript.ExprDef e12 = global::hscript.ExprDef.EObject(new global::Array<object>(new object[]{}));
								global::haxe.lang.Null<int> pmin8 = new global::haxe.lang.Null<int>(p1, true);
								global::haxe.lang.Null<int> pmax8 = default(global::haxe.lang.Null<int>);
								object tmp3 = null;
								if (( e12 == null )) {
									tmp3 = null;
								}
								else {
									if ( ! (pmin8.hasValue) ) {
										pmin8 = new global::haxe.lang.Null<int>(this.tokenMin, true);
									}
									
									if ( ! (pmax8.hasValue) ) {
										pmax8 = new global::haxe.lang.Null<int>(this.tokenMax, true);
									}
									
									tmp3 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e12, (pmax8).toDynamic(), (pmin8).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
								}
								
								return this.parseExprNext(tmp3);
							}
							
							
							default:
							{
								this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
								break;
							}
							
						}
						
						global::Array<object> a = new global::Array<object>();
						while (true) {
							this.parseFullExpr(a);
							tk = this.token();
							if (( ( tk == global::hscript.Token.TBrClose ) || ( this.resumeErrors && ( tk == global::hscript.Token.TEof ) ) )) {
								break;
							}
							
							{
								this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							
						}
						
						global::hscript.ExprDef e13 = global::hscript.ExprDef.EBlock(a);
						global::haxe.lang.Null<int> pmin9 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax9 = default(global::haxe.lang.Null<int>);
						if (( e13 == null )) {
							return null;
						}
						else {
							if ( ! (pmin9.hasValue) ) {
								pmin9 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax9.hasValue) ) {
								pmax9 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e13, (pmax9).toDynamic(), (pmin9).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case 11:
					{
						global::Array<object> a1 = new global::Array<object>();
						tk = this.token();
						while (( ( tk != global::hscript.Token.TBkClose ) && ((  ! (this.resumeErrors)  || ( tk != global::hscript.Token.TEof ) )) )) {
							{
								this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							
							a1.push(this.parseExpr());
							tk = this.token();
							if (( tk == global::hscript.Token.TComma )) {
								tk = this.token();
							}
							
						}
						
						if (( ( a1.length == 1 ) && ( a1[0] != null ) )) {
							global::hscript.ExprDef _g6 = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(a1[0], "e", 101, true)) );
							switch (_g6._hx_index) {
								case 10:
								{
									object _g7 = ( _g6 as global::hscript.ExprDef_EWhile ).cond;
									object _g8 = ( _g6 as global::hscript.ExprDef_EWhile ).e;
									string tmp4 = global::haxe.lang.Runtime.concat("__a_", global::haxe.lang.Runtime.toString(this.uid++));
									global::hscript.ExprDef e14 = global::hscript.ExprDef.EArrayDecl(new global::Array<object>(new object[]{}));
									global::haxe.lang.Null<int> pmin10 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax10 = default(global::haxe.lang.Null<int>);
									object e15 = null;
									if (( e14 == null )) {
										e15 = null;
									}
									else {
										if ( ! (pmin10.hasValue) ) {
											pmin10 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax10.hasValue) ) {
											pmax10 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e15 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e14, (pmax10).toDynamic(), (pmin10).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									global::hscript.ExprDef e16 = global::hscript.ExprDef.EVar(tmp4, null, e15);
									global::haxe.lang.Null<int> pmin11 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax11 = default(global::haxe.lang.Null<int>);
									object e17 = null;
									if (( e16 == null )) {
										e17 = null;
									}
									else {
										if ( ! (pmin11.hasValue) ) {
											pmin11 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax11.hasValue) ) {
											pmax11 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e17 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e16, (pmax11).toDynamic(), (pmin11).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									object e18 = this.mapCompr(tmp4, a1[0]);
									global::hscript.ExprDef e19 = global::hscript.ExprDef.EIdent(tmp4);
									global::haxe.lang.Null<int> pmin12 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax12 = default(global::haxe.lang.Null<int>);
									object e20 = null;
									if (( e19 == null )) {
										e20 = null;
									}
									else {
										if ( ! (pmin12.hasValue) ) {
											pmin12 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax12.hasValue) ) {
											pmax12 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e20 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e19, (pmax12).toDynamic(), (pmin12).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									global::hscript.ExprDef e21 = global::hscript.ExprDef.EBlock(new global::Array<object>(new object[]{e17, e18, e20}));
									global::haxe.lang.Null<int> pmin13 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax13 = default(global::haxe.lang.Null<int>);
									object e22 = null;
									if (( e21 == null )) {
										e22 = null;
									}
									else {
										if ( ! (pmin13.hasValue) ) {
											pmin13 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax13.hasValue) ) {
											pmax13 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e22 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e21, (pmax13).toDynamic(), (pmin13).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									return this.parseExprNext(e22);
								}
								
								
								case 11:
								{
									string _g9 = ( _g6 as global::hscript.ExprDef_EFor ).v;
									object _g10 = ( _g6 as global::hscript.ExprDef_EFor ).it;
									object _g11 = ( _g6 as global::hscript.ExprDef_EFor ).e;
									string tmp5 = global::haxe.lang.Runtime.concat("__a_", global::haxe.lang.Runtime.toString(this.uid++));
									global::hscript.ExprDef e23 = global::hscript.ExprDef.EArrayDecl(new global::Array<object>(new object[]{}));
									global::haxe.lang.Null<int> pmin14 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax14 = default(global::haxe.lang.Null<int>);
									object e24 = null;
									if (( e23 == null )) {
										e24 = null;
									}
									else {
										if ( ! (pmin14.hasValue) ) {
											pmin14 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax14.hasValue) ) {
											pmax14 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e24 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e23, (pmax14).toDynamic(), (pmin14).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									global::hscript.ExprDef e25 = global::hscript.ExprDef.EVar(tmp5, null, e24);
									global::haxe.lang.Null<int> pmin15 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax15 = default(global::haxe.lang.Null<int>);
									object e26 = null;
									if (( e25 == null )) {
										e26 = null;
									}
									else {
										if ( ! (pmin15.hasValue) ) {
											pmin15 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax15.hasValue) ) {
											pmax15 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e26 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e25, (pmax15).toDynamic(), (pmin15).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									object e27 = this.mapCompr(tmp5, a1[0]);
									global::hscript.ExprDef e28 = global::hscript.ExprDef.EIdent(tmp5);
									global::haxe.lang.Null<int> pmin16 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax16 = default(global::haxe.lang.Null<int>);
									object e29 = null;
									if (( e28 == null )) {
										e29 = null;
									}
									else {
										if ( ! (pmin16.hasValue) ) {
											pmin16 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax16.hasValue) ) {
											pmax16 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e29 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e28, (pmax16).toDynamic(), (pmin16).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									global::hscript.ExprDef e30 = global::hscript.ExprDef.EBlock(new global::Array<object>(new object[]{e26, e27, e29}));
									global::haxe.lang.Null<int> pmin17 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax17 = default(global::haxe.lang.Null<int>);
									object e31 = null;
									if (( e30 == null )) {
										e31 = null;
									}
									else {
										if ( ! (pmin17.hasValue) ) {
											pmin17 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax17.hasValue) ) {
											pmax17 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e31 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e30, (pmax17).toDynamic(), (pmin17).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									return this.parseExprNext(e31);
								}
								
								
								case 24:
								{
									object _g12 = ( _g6 as global::hscript.ExprDef_EDoWhile ).cond;
									object _g13 = ( _g6 as global::hscript.ExprDef_EDoWhile ).e;
									string tmp6 = global::haxe.lang.Runtime.concat("__a_", global::haxe.lang.Runtime.toString(this.uid++));
									global::hscript.ExprDef e32 = global::hscript.ExprDef.EArrayDecl(new global::Array<object>(new object[]{}));
									global::haxe.lang.Null<int> pmin18 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax18 = default(global::haxe.lang.Null<int>);
									object e33 = null;
									if (( e32 == null )) {
										e33 = null;
									}
									else {
										if ( ! (pmin18.hasValue) ) {
											pmin18 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax18.hasValue) ) {
											pmax18 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e33 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e32, (pmax18).toDynamic(), (pmin18).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									global::hscript.ExprDef e34 = global::hscript.ExprDef.EVar(tmp6, null, e33);
									global::haxe.lang.Null<int> pmin19 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax19 = default(global::haxe.lang.Null<int>);
									object e35 = null;
									if (( e34 == null )) {
										e35 = null;
									}
									else {
										if ( ! (pmin19.hasValue) ) {
											pmin19 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax19.hasValue) ) {
											pmax19 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e35 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e34, (pmax19).toDynamic(), (pmin19).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									object e36 = this.mapCompr(tmp6, a1[0]);
									global::hscript.ExprDef e37 = global::hscript.ExprDef.EIdent(tmp6);
									global::haxe.lang.Null<int> pmin20 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax20 = default(global::haxe.lang.Null<int>);
									object e38 = null;
									if (( e37 == null )) {
										e38 = null;
									}
									else {
										if ( ! (pmin20.hasValue) ) {
											pmin20 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax20.hasValue) ) {
											pmax20 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e38 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e37, (pmax20).toDynamic(), (pmin20).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									global::hscript.ExprDef e39 = global::hscript.ExprDef.EBlock(new global::Array<object>(new object[]{e35, e36, e38}));
									global::haxe.lang.Null<int> pmin21 = new global::haxe.lang.Null<int>(p1, true);
									global::haxe.lang.Null<int> pmax21 = default(global::haxe.lang.Null<int>);
									object e40 = null;
									if (( e39 == null )) {
										e40 = null;
									}
									else {
										if ( ! (pmin21.hasValue) ) {
											pmin21 = new global::haxe.lang.Null<int>(this.tokenMin, true);
										}
										
										if ( ! (pmax21.hasValue) ) {
											pmax21 = new global::haxe.lang.Null<int>(this.tokenMax, true);
										}
										
										e40 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e39, (pmax21).toDynamic(), (pmin21).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
									}
									
									return this.parseExprNext(e40);
								}
								
								
								default:
								{
									break;
								}
								
							}
							
						}
						
						global::hscript.ExprDef e41 = global::hscript.ExprDef.EArrayDecl(a1);
						global::haxe.lang.Null<int> pmin22 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax22 = default(global::haxe.lang.Null<int>);
						object tmp7 = null;
						if (( e41 == null )) {
							tmp7 = null;
						}
						else {
							if ( ! (pmin22.hasValue) ) {
								pmin22 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax22.hasValue) ) {
								pmax22 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							tmp7 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e41, (pmax22).toDynamic(), (pmin22).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
						return this.parseExprNext(tmp7);
					}
					
					
					case 15:
					{
						string id1 = ( tk as global::hscript.Token_TMeta ).s;
						if (this.allowMetadata) {
							global::Array<object> args = this.parseMetaArgs();
							global::hscript.ExprDef e42 = global::hscript.ExprDef.EMeta(id1, args, this.parseExpr());
							global::haxe.lang.Null<int> pmin23 = new global::haxe.lang.Null<int>(p1, true);
							global::haxe.lang.Null<int> pmax23 = default(global::haxe.lang.Null<int>);
							if (( e42 == null )) {
								return null;
							}
							else {
								if ( ! (pmin23.hasValue) ) {
									pmin23 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax23.hasValue) ) {
									pmax23 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e42, (pmax23).toDynamic(), (pmin23).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
						}
						else {
							return this.unexpected(tk);
						}
						
					}
					
					
					default:
					{
						return this.unexpected(tk);
					}
					
				}
				
			}
		}
		
		
		public virtual object parseLambda(global::Array<object> args, global::haxe.lang.Null<int> pmin) {
			unchecked {
				while (true) {
					string id = this.getIdent();
					global::hscript.CType t = ( (this.maybe(global::hscript.Token.TDoubleDot)) ? (this.parseType()) : (null) );
					args.push(new global::haxe.lang.DynamicObject(new int[]{116, 1224700491}, new object[]{t, id}, new int[]{}, new double[]{}));
					global::hscript.Token tk = this.token();
					switch (tk._hx_index) {
						case 5:
						{
							goto label1;
						}
						
						
						case 9:
						{
							break;
						}
						
						
						default:
						{
							this.unexpected(tk);
							goto label1;
						}
						
					}
					
				}
				label1: {};
				{
					global::hscript.Token t1 = this.token();
					if ( ! (global::Type.enumEq<object>(((object) (t1) ), ((object) (global::hscript.Token.TOp("->")) ))) ) {
						this.unexpected(t1);
					}
					
				}
				
				object eret = this.parseExpr();
				global::hscript.ExprDef e = global::hscript.ExprDef.EReturn(eret);
				global::haxe.lang.Null<int> pmin1 = pmin;
				global::haxe.lang.Null<int> pmax = default(global::haxe.lang.Null<int>);
				object e1 = null;
				if (( e == null )) {
					e1 = null;
				}
				else {
					if ( ! (pmin1.hasValue) ) {
						pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
					}
					
					if ( ! (pmax.hasValue) ) {
						pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
					}
					
					e1 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e, (pmax).toDynamic(), (pmin1).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
				}
				
				global::hscript.ExprDef e2 = global::hscript.ExprDef.EFunction(args, e1, null, null);
				global::haxe.lang.Null<int> pmin2 = pmin;
				global::haxe.lang.Null<int> pmax1 = default(global::haxe.lang.Null<int>);
				if (( e2 == null )) {
					return null;
				}
				else {
					if ( ! (pmin2.hasValue) ) {
						pmin2 = new global::haxe.lang.Null<int>(this.tokenMin, true);
					}
					
					if ( ! (pmax1.hasValue) ) {
						pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
					}
					
					return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e2, (pmax1).toDynamic(), (pmin2).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
				}
				
			}
		}
		
		
		public virtual global::Array<object> parseMetaArgs() {
			unchecked {
				global::hscript.Token tk = this.token();
				if (( tk != global::hscript.Token.TPOpen )) {
					{
						this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
					}
					
					return null;
				}
				
				global::Array<object> args = new global::Array<object>(new object[]{});
				tk = this.token();
				if (( tk != global::hscript.Token.TPClose )) {
					{
						this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
					}
					
					while (true) {
						args.push(this.parseExpr());
						{
							global::hscript.Token _g = this.token();
							switch (_g._hx_index) {
								case 5:
								{
									goto label1;
								}
								
								
								case 9:
								{
									break;
								}
								
								
								default:
								{
									global::hscript.Token tk1 = _g;
									this.unexpected(tk1);
									break;
								}
								
							}
							
						}
						
					}
					label1: {};
				}
				
				return args;
			}
		}
		
		
		public virtual object mapCompr(string tmp, object e) {
			unchecked {
				if (( e == null )) {
					return null;
				}
				
				global::hscript.ExprDef edef = null;
				global::hscript.ExprDef _g = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) );
				switch (_g._hx_index) {
					case 3:
					{
						object e2 = ( _g as global::hscript.ExprDef_EParent ).e;
						edef = global::hscript.ExprDef.EParent(this.mapCompr(tmp, e2));
						break;
					}
					
					
					case 4:
					{
						global::Array<object> _g1 = ( _g as global::hscript.ExprDef_EBlock ).e;
						if (( _g1.length == 1 )) {
							object e1 = _g1[0];
							edef = global::hscript.ExprDef.EBlock(new global::Array<object>(new object[]{this.mapCompr(tmp, e1)}));
						}
						else {
							global::hscript.ExprDef e3 = global::hscript.ExprDef.EIdent(tmp);
							global::haxe.lang.Null<int> pmin = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
							object e4 = null;
							if (( e3 == null )) {
								e4 = null;
							}
							else {
								if ( ! (pmin.hasValue) ) {
									pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax.hasValue) ) {
									pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								e4 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e3, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
							global::hscript.ExprDef e5 = global::hscript.ExprDef.EField(e4, "push");
							global::haxe.lang.Null<int> pmin1 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax1 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
							object edef1 = null;
							if (( e5 == null )) {
								edef1 = null;
							}
							else {
								if ( ! (pmin1.hasValue) ) {
									pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax1.hasValue) ) {
									pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								edef1 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e5, (pmax1).toDynamic(), (pmin1).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
							edef = global::hscript.ExprDef.ECall(edef1, new global::Array<object>(new object[]{e}));
						}
						
						break;
					}
					
					
					case 9:
					{
						object cond = ( _g as global::hscript.ExprDef_EIf ).cond;
						object e11 = ( _g as global::hscript.ExprDef_EIf ).e1;
						object e21 = ( _g as global::hscript.ExprDef_EIf ).e2;
						if (( e21 == null )) {
							edef = global::hscript.ExprDef.EIf(cond, this.mapCompr(tmp, e11), null);
						}
						else {
							global::hscript.ExprDef e6 = global::hscript.ExprDef.EIdent(tmp);
							global::haxe.lang.Null<int> pmin2 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax2 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
							object e7 = null;
							if (( e6 == null )) {
								e7 = null;
							}
							else {
								if ( ! (pmin2.hasValue) ) {
									pmin2 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax2.hasValue) ) {
									pmax2 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								e7 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e6, (pmax2).toDynamic(), (pmin2).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
							global::hscript.ExprDef e8 = global::hscript.ExprDef.EField(e7, "push");
							global::haxe.lang.Null<int> pmin3 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax3 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
							object edef2 = null;
							if (( e8 == null )) {
								edef2 = null;
							}
							else {
								if ( ! (pmin3.hasValue) ) {
									pmin3 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax3.hasValue) ) {
									pmax3 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								edef2 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e8, (pmax3).toDynamic(), (pmin3).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
							edef = global::hscript.ExprDef.ECall(edef2, new global::Array<object>(new object[]{e}));
						}
						
						break;
					}
					
					
					case 10:
					{
						object cond1 = ( _g as global::hscript.ExprDef_EWhile ).cond;
						object e22 = ( _g as global::hscript.ExprDef_EWhile ).e;
						edef = global::hscript.ExprDef.EWhile(cond1, this.mapCompr(tmp, e22));
						break;
					}
					
					
					case 11:
					{
						string v = ( _g as global::hscript.ExprDef_EFor ).v;
						object it = ( _g as global::hscript.ExprDef_EFor ).it;
						object e23 = ( _g as global::hscript.ExprDef_EFor ).e;
						edef = global::hscript.ExprDef.EFor(v, it, this.mapCompr(tmp, e23));
						break;
					}
					
					
					case 24:
					{
						object cond2 = ( _g as global::hscript.ExprDef_EDoWhile ).cond;
						object e24 = ( _g as global::hscript.ExprDef_EDoWhile ).e;
						edef = global::hscript.ExprDef.EDoWhile(cond2, this.mapCompr(tmp, e24));
						break;
					}
					
					
					default:
					{
						global::hscript.ExprDef e9 = global::hscript.ExprDef.EIdent(tmp);
						global::haxe.lang.Null<int> pmin4 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax4 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
						object e10 = null;
						if (( e9 == null )) {
							e10 = null;
						}
						else {
							if ( ! (pmin4.hasValue) ) {
								pmin4 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax4.hasValue) ) {
								pmax4 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							e10 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e9, (pmax4).toDynamic(), (pmin4).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
						global::hscript.ExprDef e12 = global::hscript.ExprDef.EField(e10, "push");
						global::haxe.lang.Null<int> pmin5 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax5 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
						object edef3 = null;
						if (( e12 == null )) {
							edef3 = null;
						}
						else {
							if ( ! (pmin5.hasValue) ) {
								pmin5 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax5.hasValue) ) {
								pmax5 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							edef3 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e12, (pmax5).toDynamic(), (pmin5).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
						edef = global::hscript.ExprDef.ECall(edef3, new global::Array<object>(new object[]{e}));
						break;
					}
					
				}
				
				global::haxe.lang.Null<int> pmin6 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) )) ), true);
				global::haxe.lang.Null<int> pmax6 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
				if (( edef == null )) {
					return null;
				}
				else {
					if ( ! (pmin6.hasValue) ) {
						pmin6 = new global::haxe.lang.Null<int>(this.tokenMin, true);
					}
					
					if ( ! (pmax6.hasValue) ) {
						pmax6 = new global::haxe.lang.Null<int>(this.tokenMax, true);
					}
					
					return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{edef, (pmax6).toDynamic(), (pmin6).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
				}
				
			}
		}
		
		
		public virtual object makeUnop(string op, object e) {
			unchecked {
				if (( ( e == null ) && this.resumeErrors )) {
					return null;
				}
				
				global::hscript.ExprDef _g = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) );
				switch (_g._hx_index) {
					case 6:
					{
						string bop = ( _g as global::hscript.ExprDef_EBinop ).op;
						object e1 = ( _g as global::hscript.ExprDef_EBinop ).e1;
						object e2 = ( _g as global::hscript.ExprDef_EBinop ).e2;
						global::hscript.ExprDef e3 = global::hscript.ExprDef.EBinop(bop, this.makeUnop(op, e1), e2);
						global::haxe.lang.Null<int> pmin = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax = new global::haxe.lang.Null<int>(( (( e2 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e2, "pmax", 1247473716, true)) )) ), true);
						if (( e3 == null )) {
							return null;
						}
						else {
							if ( ! (pmin.hasValue) ) {
								pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax.hasValue) ) {
								pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e3, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case 22:
					{
						object e11 = ( _g as global::hscript.ExprDef_ETernary ).cond;
						object e21 = ( _g as global::hscript.ExprDef_ETernary ).e1;
						object e31 = ( _g as global::hscript.ExprDef_ETernary ).e2;
						global::hscript.ExprDef e4 = global::hscript.ExprDef.ETernary(this.makeUnop(op, e11), e21, e31);
						global::haxe.lang.Null<int> pmin1 = new global::haxe.lang.Null<int>(( (( e11 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e11, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax1 = new global::haxe.lang.Null<int>(( (( e31 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e31, "pmax", 1247473716, true)) )) ), true);
						if (( e4 == null )) {
							return null;
						}
						else {
							if ( ! (pmin1.hasValue) ) {
								pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax1.hasValue) ) {
								pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e4, (pmax1).toDynamic(), (pmin1).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					default:
					{
						global::hscript.ExprDef e5 = global::hscript.ExprDef.EUnop(op, true, e);
						global::haxe.lang.Null<int> pmin2 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax2 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
						if (( e5 == null )) {
							return null;
						}
						else {
							if ( ! (pmin2.hasValue) ) {
								pmin2 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax2.hasValue) ) {
								pmax2 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e5, (pmax2).toDynamic(), (pmin2).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
				}
				
			}
		}
		
		
		public virtual object makeBinop(string op, object e1, object e) {
			unchecked {
				if (( ( e == null ) && this.resumeErrors )) {
					global::hscript.ExprDef e2 = global::hscript.ExprDef.EBinop(op, e1, e);
					global::haxe.lang.Null<int> pmin = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
					global::haxe.lang.Null<int> pmax = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmax", 1247473716, true)) )) ), true);
					if (( e2 == null )) {
						return null;
					}
					else {
						if ( ! (pmin.hasValue) ) {
							pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
						}
						
						if ( ! (pmax.hasValue) ) {
							pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
						}
						
						return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e2, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
					}
					
				}
				
				global::hscript.ExprDef _g = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) );
				switch (_g._hx_index) {
					case 6:
					{
						string op2 = ( _g as global::hscript.ExprDef_EBinop ).op;
						object e21 = ( _g as global::hscript.ExprDef_EBinop ).e1;
						object e3 = ( _g as global::hscript.ExprDef_EBinop ).e2;
						if (( ( (((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (this.opPriority) )) ))) ).@get(op)).@value <= (((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (this.opPriority) )) ))) ).@get(op2)).@value ) &&  ! (((global::haxe.ds.StringMap<bool>) (global::haxe.ds.StringMap<object>.__hx_cast<bool>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, bool>) (this.opRightAssoc) )) ))) ).exists(op))  )) {
							global::hscript.ExprDef e4 = global::hscript.ExprDef.EBinop(op2, this.makeBinop(op, e1, e21), e3);
							global::haxe.lang.Null<int> pmin1 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax1 = new global::haxe.lang.Null<int>(( (( e3 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e3, "pmax", 1247473716, true)) )) ), true);
							if (( e4 == null )) {
								return null;
							}
							else {
								if ( ! (pmin1.hasValue) ) {
									pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax1.hasValue) ) {
									pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e4, (pmax1).toDynamic(), (pmin1).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
						}
						else {
							global::hscript.ExprDef e5 = global::hscript.ExprDef.EBinop(op, e1, e);
							global::haxe.lang.Null<int> pmin2 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax2 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
							if (( e5 == null )) {
								return null;
							}
							else {
								if ( ! (pmin2.hasValue) ) {
									pmin2 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax2.hasValue) ) {
									pmax2 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e5, (pmax2).toDynamic(), (pmin2).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
						}
						
					}
					
					
					case 22:
					{
						object e22 = ( _g as global::hscript.ExprDef_ETernary ).cond;
						object e31 = ( _g as global::hscript.ExprDef_ETernary ).e1;
						object e41 = ( _g as global::hscript.ExprDef_ETernary ).e2;
						if (((global::haxe.ds.StringMap<bool>) (global::haxe.ds.StringMap<object>.__hx_cast<bool>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, bool>) (this.opRightAssoc) )) ))) ).exists(op)) {
							global::hscript.ExprDef e6 = global::hscript.ExprDef.EBinop(op, e1, e);
							global::haxe.lang.Null<int> pmin3 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax3 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
							if (( e6 == null )) {
								return null;
							}
							else {
								if ( ! (pmin3.hasValue) ) {
									pmin3 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax3.hasValue) ) {
									pmax3 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e6, (pmax3).toDynamic(), (pmin3).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
						}
						else {
							global::hscript.ExprDef e7 = global::hscript.ExprDef.ETernary(this.makeBinop(op, e1, e22), e31, e41);
							global::haxe.lang.Null<int> pmin4 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax4 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
							if (( e7 == null )) {
								return null;
							}
							else {
								if ( ! (pmin4.hasValue) ) {
									pmin4 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax4.hasValue) ) {
									pmax4 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e7, (pmax4).toDynamic(), (pmin4).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
						}
						
					}
					
					
					default:
					{
						global::hscript.ExprDef e8 = global::hscript.ExprDef.EBinop(op, e1, e);
						global::haxe.lang.Null<int> pmin5 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax5 = new global::haxe.lang.Null<int>(( (( e == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e, "pmax", 1247473716, true)) )) ), true);
						if (( e8 == null )) {
							return null;
						}
						else {
							if ( ! (pmin5.hasValue) ) {
								pmin5 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax5.hasValue) ) {
								pmax5 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e8, (pmax5).toDynamic(), (pmin5).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
				}
				
			}
		}
		
		
		public virtual object parseStructure(string id) {
			unchecked {
				int p1 = this.tokenMin;
				switch (id) {
					case "break":
					{
						global::hscript.ExprDef e = global::hscript.ExprDef.EBreak;
						global::haxe.lang.Null<int> pmin = default(global::haxe.lang.Null<int>);
						global::haxe.lang.Null<int> pmax = default(global::haxe.lang.Null<int>);
						if (( e == null )) {
							return null;
						}
						else {
							if ( ! (pmin.hasValue) ) {
								pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax.hasValue) ) {
								pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "continue":
					{
						global::hscript.ExprDef e1 = global::hscript.ExprDef.EContinue;
						global::haxe.lang.Null<int> pmin1 = default(global::haxe.lang.Null<int>);
						global::haxe.lang.Null<int> pmax1 = default(global::haxe.lang.Null<int>);
						if (( e1 == null )) {
							return null;
						}
						else {
							if ( ! (pmin1.hasValue) ) {
								pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax1.hasValue) ) {
								pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e1, (pmax1).toDynamic(), (pmin1).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "do":
					{
						object e2 = this.parseExpr();
						global::hscript.Token tk = this.token();
						if (( tk._hx_index == 2 )) {
							if (( ( tk as global::hscript.Token_TId ).s == "while" )) {
							}
							else {
								this.unexpected(tk);
							}
							
						}
						else {
							this.unexpected(tk);
						}
						
						object econd = this.parseExpr();
						global::hscript.ExprDef e3 = global::hscript.ExprDef.EDoWhile(econd, e2);
						global::haxe.lang.Null<int> pmin2 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax2 = new global::haxe.lang.Null<int>(( (( econd == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(econd, "pmax", 1247473716, true)) )) ), true);
						if (( e3 == null )) {
							return null;
						}
						else {
							if ( ! (pmin2.hasValue) ) {
								pmin2 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax2.hasValue) ) {
								pmax2 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e3, (pmax2).toDynamic(), (pmin2).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "else":
					{
						return this.unexpected(global::hscript.Token.TId(id));
					}
					
					
					case "for":
					{
						{
							global::hscript.Token t = this.token();
							if (( t != global::hscript.Token.TPOpen )) {
								this.unexpected(t);
							}
							
						}
						
						string vname = this.getIdent();
						{
							global::hscript.Token t1 = this.token();
							if ( ! (global::Type.enumEq<object>(((object) (t1) ), ((object) (global::hscript.Token.TId("in")) ))) ) {
								this.unexpected(t1);
							}
							
						}
						
						object eiter = this.parseExpr();
						{
							global::hscript.Token t2 = this.token();
							if (( t2 != global::hscript.Token.TPClose )) {
								this.unexpected(t2);
							}
							
						}
						
						object e4 = this.parseExpr();
						global::hscript.ExprDef e5 = global::hscript.ExprDef.EFor(vname, eiter, e4);
						global::haxe.lang.Null<int> pmin3 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax3 = new global::haxe.lang.Null<int>(( (( e4 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e4, "pmax", 1247473716, true)) )) ), true);
						if (( e5 == null )) {
							return null;
						}
						else {
							if ( ! (pmin3.hasValue) ) {
								pmin3 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax3.hasValue) ) {
								pmax3 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e5, (pmax3).toDynamic(), (pmin3).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "function":
					{
						global::hscript.Token tk1 = this.token();
						string name = null;
						if (( tk1._hx_index == 2 )) {
							string id1 = ( tk1 as global::hscript.Token_TId ).s;
							name = id1;
						}
						else {
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk1}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						object inf = this.parseFunctionDecl();
						global::hscript.ExprDef e6 = global::hscript.ExprDef.EFunction(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(inf, "args", 1081380189, true)) ))) ), global::haxe.lang.Runtime.getField(inf, "body", 1092319906, true), name, ((global::hscript.CType) (global::haxe.lang.Runtime.getField(inf, "ret", 5691745, true)) ));
						global::haxe.lang.Null<int> pmin4 = new global::haxe.lang.Null<int>(p1, true);
						object e7 = global::haxe.lang.Runtime.getField(inf, "body", 1092319906, true);
						global::haxe.lang.Null<int> pmax4 = new global::haxe.lang.Null<int>(( (( e7 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e7, "pmax", 1247473716, true)) )) ), true);
						if (( e6 == null )) {
							return null;
						}
						else {
							if ( ! (pmin4.hasValue) ) {
								pmin4 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax4.hasValue) ) {
								pmax4 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e6, (pmax4).toDynamic(), (pmin4).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "if":
					{
						{
							global::hscript.Token t3 = this.token();
							if (( t3 != global::hscript.Token.TPOpen )) {
								this.unexpected(t3);
							}
							
						}
						
						object cond = this.parseExpr();
						{
							global::hscript.Token t4 = this.token();
							if (( t4 != global::hscript.Token.TPClose )) {
								this.unexpected(t4);
							}
							
						}
						
						object e11 = this.parseExpr();
						object e21 = null;
						bool semic = false;
						global::hscript.Token tk2 = this.token();
						if (( tk2 == global::hscript.Token.TSemicolon )) {
							semic = true;
							tk2 = this.token();
						}
						
						if (global::Type.enumEq<object>(((object) (tk2) ), ((object) (global::hscript.Token.TId("else")) ))) {
							e21 = this.parseExpr();
						}
						else {
							{
								this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk2}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							
							if (semic) {
								this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{global::hscript.Token.TSemicolon}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							
						}
						
						global::hscript.ExprDef e8 = global::hscript.ExprDef.EIf(cond, e11, e21);
						global::haxe.lang.Null<int> pmin5 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax5 = ( (( e21 == null )) ? (new global::haxe.lang.Null<int>(this.tokenMax, true)) : (new global::haxe.lang.Null<int>(( (( e21 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e21, "pmax", 1247473716, true)) )) ), true)) );
						if (( e8 == null )) {
							return null;
						}
						else {
							if ( ! (pmin5.hasValue) ) {
								pmin5 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax5.hasValue) ) {
								pmax5 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e8, (pmax5).toDynamic(), (pmin5).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "inline":
					{
						if ( ! (this.maybe(global::hscript.Token.TId("function"))) ) {
							this.unexpected(global::hscript.Token.TId("inline"));
						}
						
						return this.parseStructure("function");
					}
					
					
					case "new":
					{
						global::Array<string> a = new global::Array<string>();
						a.push(this.getIdent());
						while (true) {
							global::hscript.Token tk3 = this.token();
							switch (tk3._hx_index) {
								case 4:
								{
									goto label1;
								}
								
								
								case 8:
								{
									a.push(this.getIdent());
									break;
								}
								
								
								default:
								{
									this.unexpected(tk3);
									goto label1;
								}
								
							}
							
						}
						label1: {};
						global::Array<object> args = this.parseExprList(global::hscript.Token.TPClose);
						global::hscript.ExprDef e9 = global::hscript.ExprDef.ENew(a.@join("."), args);
						global::haxe.lang.Null<int> pmin6 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax6 = default(global::haxe.lang.Null<int>);
						if (( e9 == null )) {
							return null;
						}
						else {
							if ( ! (pmin6.hasValue) ) {
								pmin6 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax6.hasValue) ) {
								pmax6 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e9, (pmax6).toDynamic(), (pmin6).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "return":
					{
						global::hscript.Token tk4 = this.token();
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk4}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						object e10 = ( (( tk4 == global::hscript.Token.TSemicolon )) ? (null) : (this.parseExpr()) );
						global::hscript.ExprDef e12 = global::hscript.ExprDef.EReturn(e10);
						global::haxe.lang.Null<int> pmin7 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax7 = ( (( e10 == null )) ? (new global::haxe.lang.Null<int>(this.tokenMax, true)) : (new global::haxe.lang.Null<int>(( (( e10 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e10, "pmax", 1247473716, true)) )) ), true)) );
						if (( e12 == null )) {
							return null;
						}
						else {
							if ( ! (pmin7.hasValue) ) {
								pmin7 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax7.hasValue) ) {
								pmax7 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e12, (pmax7).toDynamic(), (pmin7).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "switch":
					{
						object e13 = this.parseExpr();
						object def = null;
						global::Array<object> cases = new global::Array<object>(new object[]{});
						{
							global::hscript.Token t5 = this.token();
							if (( t5 != global::hscript.Token.TBrOpen )) {
								this.unexpected(t5);
							}
							
						}
						
						while (true) {
							global::hscript.Token tk5 = this.token();
							switch (tk5._hx_index) {
								case 2:
								{
									switch (( tk5 as global::hscript.Token_TId ).s) {
										case "case":
										{
											object c = new global::haxe.lang.DynamicObject(new int[]{1126038837, 1337394146}, new object[]{null, new global::Array<object>(new object[]{})}, new int[]{}, new double[]{});
											cases.push(c);
											while (true) {
												object e14 = this.parseExpr();
												((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(c, "values", 1337394146, true)) ))) ).push(e14);
												tk5 = this.token();
												switch (tk5._hx_index) {
													case 9:
													{
														break;
													}
													
													
													case 14:
													{
														goto label3;
													}
													
													
													default:
													{
														this.unexpected(tk5);
														goto label3;
													}
													
												}
												
											}
											label3: {};
											global::Array<object> exprs = new global::Array<object>(new object[]{});
											while (true) {
												tk5 = this.token();
												{
													this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk5}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
													this.tokenMin = this.oldTokenMin;
													this.tokenMax = this.oldTokenMax;
												}
												
												switch (tk5._hx_index) {
													case 0:
													{
														if (this.resumeErrors) {
															goto label4;
														}
														else {
															this.parseFullExpr(exprs);
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (( tk5 as global::hscript.Token_TId ).s) {
															case "case":
															case "default":
															{
																goto label4;
															}
															
															
															default:
															{
																this.parseFullExpr(exprs);
																break;
															}
															
														}
														
														break;
													}
													
													
													case 7:
													{
														goto label4;
													}
													
													
													default:
													{
														this.parseFullExpr(exprs);
														break;
													}
													
												}
												
											}
											label4: {};
											object tmp = null;
											if (( exprs.length == 1 )) {
												tmp = exprs[0];
											}
											else if (( exprs.length == 0 )) {
												global::hscript.ExprDef e15 = global::hscript.ExprDef.EBlock(new global::Array<object>(new object[]{}));
												global::haxe.lang.Null<int> pmin8 = new global::haxe.lang.Null<int>(this.tokenMin, true);
												global::haxe.lang.Null<int> pmax8 = new global::haxe.lang.Null<int>(this.tokenMin, true);
												if (( e15 == null )) {
													tmp = null;
												}
												else {
													if ( ! (pmin8.hasValue) ) {
														pmin8 = new global::haxe.lang.Null<int>(this.tokenMin, true);
													}
													
													if ( ! (pmax8.hasValue) ) {
														pmax8 = new global::haxe.lang.Null<int>(this.tokenMax, true);
													}
													
													tmp = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e15, (pmax8).toDynamic(), (pmin8).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
												}
												
											}
											else {
												global::hscript.ExprDef e16 = global::hscript.ExprDef.EBlock(exprs);
												object e17 = exprs[0];
												global::haxe.lang.Null<int> pmin9 = new global::haxe.lang.Null<int>(( (( e17 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e17, "pmin", 1247475490, true)) )) ), true);
												object e18 = exprs[( exprs.length - 1 )];
												global::haxe.lang.Null<int> pmax9 = new global::haxe.lang.Null<int>(( (( e18 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e18, "pmax", 1247473716, true)) )) ), true);
												if (( e16 == null )) {
													tmp = null;
												}
												else {
													if ( ! (pmin9.hasValue) ) {
														pmin9 = new global::haxe.lang.Null<int>(this.tokenMin, true);
													}
													
													if ( ! (pmax9.hasValue) ) {
														pmax9 = new global::haxe.lang.Null<int>(this.tokenMax, true);
													}
													
													tmp = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e16, (pmax9).toDynamic(), (pmin9).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
												}
												
											}
											
											global::haxe.lang.Runtime.setField(c, "expr", 1126038837, tmp);
											break;
										}
										
										
										case "default":
										{
											if (( def != null )) {
												this.unexpected(tk5);
											}
											
											{
												global::hscript.Token t6 = this.token();
												if (( t6 != global::hscript.Token.TDoubleDot )) {
													this.unexpected(t6);
												}
												
											}
											
											global::Array<object> exprs1 = new global::Array<object>(new object[]{});
											while (true) {
												tk5 = this.token();
												{
													this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk5}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
													this.tokenMin = this.oldTokenMin;
													this.tokenMax = this.oldTokenMax;
												}
												
												switch (tk5._hx_index) {
													case 0:
													{
														if (this.resumeErrors) {
															goto label5;
														}
														else {
															this.parseFullExpr(exprs1);
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (( tk5 as global::hscript.Token_TId ).s) {
															case "case":
															case "default":
															{
																goto label5;
															}
															
															
															default:
															{
																this.parseFullExpr(exprs1);
																break;
															}
															
														}
														
														break;
													}
													
													
													case 7:
													{
														goto label5;
													}
													
													
													default:
													{
														this.parseFullExpr(exprs1);
														break;
													}
													
												}
												
											}
											label5: {};
											if (( exprs1.length == 1 )) {
												def = exprs1[0];
											}
											else if (( exprs1.length == 0 )) {
												global::hscript.ExprDef e19 = global::hscript.ExprDef.EBlock(new global::Array<object>(new object[]{}));
												global::haxe.lang.Null<int> pmin10 = new global::haxe.lang.Null<int>(this.tokenMin, true);
												global::haxe.lang.Null<int> pmax10 = new global::haxe.lang.Null<int>(this.tokenMin, true);
												if (( e19 == null )) {
													def = null;
												}
												else {
													if ( ! (pmin10.hasValue) ) {
														pmin10 = new global::haxe.lang.Null<int>(this.tokenMin, true);
													}
													
													if ( ! (pmax10.hasValue) ) {
														pmax10 = new global::haxe.lang.Null<int>(this.tokenMax, true);
													}
													
													def = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e19, (pmax10).toDynamic(), (pmin10).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
												}
												
											}
											else {
												global::hscript.ExprDef e20 = global::hscript.ExprDef.EBlock(exprs1);
												object e22 = exprs1[0];
												global::haxe.lang.Null<int> pmin11 = new global::haxe.lang.Null<int>(( (( e22 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e22, "pmin", 1247475490, true)) )) ), true);
												object e23 = exprs1[( exprs1.length - 1 )];
												global::haxe.lang.Null<int> pmax11 = new global::haxe.lang.Null<int>(( (( e23 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e23, "pmax", 1247473716, true)) )) ), true);
												if (( e20 == null )) {
													def = null;
												}
												else {
													if ( ! (pmin11.hasValue) ) {
														pmin11 = new global::haxe.lang.Null<int>(this.tokenMin, true);
													}
													
													if ( ! (pmax11.hasValue) ) {
														pmax11 = new global::haxe.lang.Null<int>(this.tokenMax, true);
													}
													
													def = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e20, (pmax11).toDynamic(), (pmin11).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
												}
												
											}
											
											break;
										}
										
										
										default:
										{
											this.unexpected(tk5);
											goto label2;
										}
										
									}
									
									break;
								}
								
								
								case 7:
								{
									goto label2;
								}
								
								
								default:
								{
									this.unexpected(tk5);
									goto label2;
								}
								
							}
							
						}
						label2: {};
						global::hscript.ExprDef e24 = global::hscript.ExprDef.ESwitch(e13, cases, def);
						global::haxe.lang.Null<int> pmin12 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax12 = new global::haxe.lang.Null<int>(this.tokenMax, true);
						if (( e24 == null )) {
							return null;
						}
						else {
							if ( ! (pmin12.hasValue) ) {
								pmin12 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax12.hasValue) ) {
								pmax12 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e24, (pmax12).toDynamic(), (pmin12).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "throw":
					{
						object e25 = this.parseExpr();
						global::hscript.ExprDef e26 = global::hscript.ExprDef.EThrow(e25);
						global::haxe.lang.Null<int> pmin13 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax13 = new global::haxe.lang.Null<int>(( (( e25 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e25, "pmax", 1247473716, true)) )) ), true);
						if (( e26 == null )) {
							return null;
						}
						else {
							if ( ! (pmin13.hasValue) ) {
								pmin13 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax13.hasValue) ) {
								pmax13 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e26, (pmax13).toDynamic(), (pmin13).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "try":
					{
						object e27 = this.parseExpr();
						{
							global::hscript.Token t7 = this.token();
							if ( ! (global::Type.enumEq<object>(((object) (t7) ), ((object) (global::hscript.Token.TId("catch")) ))) ) {
								this.unexpected(t7);
							}
							
						}
						
						{
							global::hscript.Token t8 = this.token();
							if (( t8 != global::hscript.Token.TPOpen )) {
								this.unexpected(t8);
							}
							
						}
						
						string vname1 = this.getIdent();
						{
							global::hscript.Token t9 = this.token();
							if (( t9 != global::hscript.Token.TDoubleDot )) {
								this.unexpected(t9);
							}
							
						}
						
						global::hscript.CType t10 = null;
						if (this.allowTypes) {
							t10 = this.parseType();
						}
						else {
							global::hscript.Token t11 = this.token();
							if ( ! (global::Type.enumEq<object>(((object) (t11) ), ((object) (global::hscript.Token.TId("Dynamic")) ))) ) {
								this.unexpected(t11);
							}
							
						}
						
						{
							global::hscript.Token t12 = this.token();
							if (( t12 != global::hscript.Token.TPClose )) {
								this.unexpected(t12);
							}
							
						}
						
						object ec = this.parseExpr();
						global::hscript.ExprDef e28 = global::hscript.ExprDef.ETry(e27, vname1, t10, ec);
						global::haxe.lang.Null<int> pmin14 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax14 = new global::haxe.lang.Null<int>(( (( ec == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(ec, "pmax", 1247473716, true)) )) ), true);
						if (( e28 == null )) {
							return null;
						}
						else {
							if ( ! (pmin14.hasValue) ) {
								pmin14 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax14.hasValue) ) {
								pmax14 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e28, (pmax14).toDynamic(), (pmin14).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "var":
					{
						string ident = this.getIdent();
						global::hscript.Token tk6 = this.token();
						global::hscript.CType t13 = null;
						if (( ( tk6 == global::hscript.Token.TDoubleDot ) && this.allowTypes )) {
							t13 = this.parseType();
							tk6 = this.token();
						}
						
						object e29 = null;
						if (global::Type.enumEq<object>(((object) (tk6) ), ((object) (global::hscript.Token.TOp("=")) ))) {
							e29 = this.parseExpr();
						}
						else {
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk6}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						global::hscript.ExprDef e30 = global::hscript.ExprDef.EVar(ident, t13, e29);
						global::haxe.lang.Null<int> pmin15 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax15 = ( (( e29 == null )) ? (new global::haxe.lang.Null<int>(this.tokenMax, true)) : (new global::haxe.lang.Null<int>(( (( e29 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e29, "pmax", 1247473716, true)) )) ), true)) );
						if (( e30 == null )) {
							return null;
						}
						else {
							if ( ! (pmin15.hasValue) ) {
								pmin15 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax15.hasValue) ) {
								pmax15 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e30, (pmax15).toDynamic(), (pmin15).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case "while":
					{
						object econd1 = this.parseExpr();
						object e31 = this.parseExpr();
						global::hscript.ExprDef e32 = global::hscript.ExprDef.EWhile(econd1, e31);
						global::haxe.lang.Null<int> pmin16 = new global::haxe.lang.Null<int>(p1, true);
						global::haxe.lang.Null<int> pmax16 = new global::haxe.lang.Null<int>(( (( e31 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e31, "pmax", 1247473716, true)) )) ), true);
						if (( e32 == null )) {
							return null;
						}
						else {
							if ( ! (pmin16.hasValue) ) {
								pmin16 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax16.hasValue) ) {
								pmax16 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e32, (pmax16).toDynamic(), (pmin16).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					default:
					{
						return null;
					}
					
				}
				
			}
		}
		
		
		public virtual object parseExprNext(object e1) {
			unchecked {
				global::hscript.Token tk = this.token();
				switch (tk._hx_index) {
					case 3:
					{
						string op = ( tk as global::hscript.Token_TOp ).s;
						if (( op == "->" )) {
							{
								global::hscript.ExprDef _g = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e1, "e", 101, true)) );
								switch (_g._hx_index) {
									case 1:
									{
										string i = ( _g as global::hscript.ExprDef_EIdent ).v;
										object eret = this.parseExpr();
										global::hscript.ExprDef e = global::hscript.ExprDef.EReturn(eret);
										global::haxe.lang.Null<int> pmin = new global::haxe.lang.Null<int>(( (( eret == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(eret, "pmin", 1247475490, true)) )) ), true);
										global::haxe.lang.Null<int> pmax = default(global::haxe.lang.Null<int>);
										object e2 = null;
										if (( e == null )) {
											e2 = null;
										}
										else {
											if ( ! (pmin.hasValue) ) {
												pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
											}
											
											if ( ! (pmax.hasValue) ) {
												pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
											}
											
											e2 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
										}
										
										global::hscript.ExprDef e3 = global::hscript.ExprDef.EFunction(new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{i}, new int[]{}, new double[]{})}), e2, null, null);
										global::haxe.lang.Null<int> pmin1 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
										global::haxe.lang.Null<int> pmax1 = default(global::haxe.lang.Null<int>);
										if (( e3 == null )) {
											return null;
										}
										else {
											if ( ! (pmin1.hasValue) ) {
												pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
											}
											
											if ( ! (pmax1.hasValue) ) {
												pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
											}
											
											return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e3, (pmax1).toDynamic(), (pmin1).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
										}
										
									}
									
									
									case 3:
									{
										global::hscript.ExprDef _hx_tmp = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(( _g as global::hscript.ExprDef_EParent ).e, "e", 101, true)) );
										if (( _hx_tmp._hx_index == 1 )) {
											string i1 = ( _hx_tmp as global::hscript.ExprDef_EIdent ).v;
											object eret1 = this.parseExpr();
											global::hscript.ExprDef e4 = global::hscript.ExprDef.EReturn(eret1);
											global::haxe.lang.Null<int> pmin2 = new global::haxe.lang.Null<int>(( (( eret1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(eret1, "pmin", 1247475490, true)) )) ), true);
											global::haxe.lang.Null<int> pmax2 = default(global::haxe.lang.Null<int>);
											object e5 = null;
											if (( e4 == null )) {
												e5 = null;
											}
											else {
												if ( ! (pmin2.hasValue) ) {
													pmin2 = new global::haxe.lang.Null<int>(this.tokenMin, true);
												}
												
												if ( ! (pmax2.hasValue) ) {
													pmax2 = new global::haxe.lang.Null<int>(this.tokenMax, true);
												}
												
												e5 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e4, (pmax2).toDynamic(), (pmin2).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
											}
											
											global::hscript.ExprDef e6 = global::hscript.ExprDef.EFunction(new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{i1}, new int[]{}, new double[]{})}), e5, null, null);
											global::haxe.lang.Null<int> pmin3 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
											global::haxe.lang.Null<int> pmax3 = default(global::haxe.lang.Null<int>);
											if (( e6 == null )) {
												return null;
											}
											else {
												if ( ! (pmin3.hasValue) ) {
													pmin3 = new global::haxe.lang.Null<int>(this.tokenMin, true);
												}
												
												if ( ! (pmax3.hasValue) ) {
													pmax3 = new global::haxe.lang.Null<int>(this.tokenMax, true);
												}
												
												return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e6, (pmax3).toDynamic(), (pmin3).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
											}
											
										}
										
										break;
									}
									
									
									case 26:
									{
										global::hscript.ExprDef _hx_tmp1 = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(( _g as global::hscript.ExprDef_ECheckType ).e, "e", 101, true)) );
										if (( _hx_tmp1._hx_index == 1 )) {
											string i2 = ( _hx_tmp1 as global::hscript.ExprDef_EIdent ).v;
											global::hscript.CType t = ( _g as global::hscript.ExprDef_ECheckType ).t;
											object eret2 = this.parseExpr();
											global::hscript.ExprDef e7 = global::hscript.ExprDef.EReturn(eret2);
											global::haxe.lang.Null<int> pmin4 = new global::haxe.lang.Null<int>(( (( eret2 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(eret2, "pmin", 1247475490, true)) )) ), true);
											global::haxe.lang.Null<int> pmax4 = default(global::haxe.lang.Null<int>);
											object e8 = null;
											if (( e7 == null )) {
												e8 = null;
											}
											else {
												if ( ! (pmin4.hasValue) ) {
													pmin4 = new global::haxe.lang.Null<int>(this.tokenMin, true);
												}
												
												if ( ! (pmax4.hasValue) ) {
													pmax4 = new global::haxe.lang.Null<int>(this.tokenMax, true);
												}
												
												e8 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e7, (pmax4).toDynamic(), (pmin4).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
											}
											
											global::hscript.ExprDef e9 = global::hscript.ExprDef.EFunction(new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{116, 1224700491}, new object[]{t, i2}, new int[]{}, new double[]{})}), e8, null, null);
											global::haxe.lang.Null<int> pmin5 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
											global::haxe.lang.Null<int> pmax5 = default(global::haxe.lang.Null<int>);
											if (( e9 == null )) {
												return null;
											}
											else {
												if ( ! (pmin5.hasValue) ) {
													pmin5 = new global::haxe.lang.Null<int>(this.tokenMin, true);
												}
												
												if ( ! (pmax5.hasValue) ) {
													pmax5 = new global::haxe.lang.Null<int>(this.tokenMax, true);
												}
												
												return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e9, (pmax5).toDynamic(), (pmin5).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
											}
											
										}
										
										break;
									}
									
									
									default:
									{
										break;
									}
									
								}
								
							}
							
							this.unexpected(tk);
						}
						
						if (global::haxe.lang.Runtime.eq((((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (this.opPriority) )) ))) ).@get(op)).toDynamic(), -1)) {
							bool tmp = default(bool);
							if ( ! (this.isBlock(e1)) ) {
								global::hscript.ExprDef _g1 = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e1, "e", 101, true)) );
								if (( _g1._hx_index == 3 )) {
									object _g2 = ( _g1 as global::hscript.ExprDef_EParent ).e;
									tmp = true;
								}
								else {
									tmp = false;
								}
								
							}
							else {
								tmp = true;
							}
							
							if (tmp) {
								{
									this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
									this.tokenMin = this.oldTokenMin;
									this.tokenMax = this.oldTokenMax;
								}
								
								return e1;
							}
							
							global::hscript.ExprDef e10 = global::hscript.ExprDef.EUnop(op, false, e1);
							global::haxe.lang.Null<int> pmin6 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
							global::haxe.lang.Null<int> pmax6 = default(global::haxe.lang.Null<int>);
							object tmp1 = null;
							if (( e10 == null )) {
								tmp1 = null;
							}
							else {
								if ( ! (pmin6.hasValue) ) {
									pmin6 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax6.hasValue) ) {
									pmax6 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								tmp1 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e10, (pmax6).toDynamic(), (pmin6).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
							return this.parseExprNext(tmp1);
						}
						
						return this.makeBinop(op, e1, this.parseExpr());
					}
					
					
					case 4:
					{
						global::hscript.ExprDef e11 = global::hscript.ExprDef.ECall(e1, this.parseExprList(global::hscript.Token.TPClose));
						global::haxe.lang.Null<int> pmin7 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax7 = default(global::haxe.lang.Null<int>);
						object tmp2 = null;
						if (( e11 == null )) {
							tmp2 = null;
						}
						else {
							if ( ! (pmin7.hasValue) ) {
								pmin7 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax7.hasValue) ) {
								pmax7 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							tmp2 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e11, (pmax7).toDynamic(), (pmin7).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
						return this.parseExprNext(tmp2);
					}
					
					
					case 8:
					{
						string field = this.getIdent();
						global::hscript.ExprDef e12 = global::hscript.ExprDef.EField(e1, field);
						global::haxe.lang.Null<int> pmin8 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax8 = default(global::haxe.lang.Null<int>);
						object tmp3 = null;
						if (( e12 == null )) {
							tmp3 = null;
						}
						else {
							if ( ! (pmin8.hasValue) ) {
								pmin8 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax8.hasValue) ) {
								pmax8 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							tmp3 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e12, (pmax8).toDynamic(), (pmin8).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
						return this.parseExprNext(tmp3);
					}
					
					
					case 11:
					{
						object e21 = this.parseExpr();
						{
							global::hscript.Token t1 = this.token();
							if (( t1 != global::hscript.Token.TBkClose )) {
								this.unexpected(t1);
							}
							
						}
						
						global::hscript.ExprDef e13 = global::hscript.ExprDef.EArray(e1, e21);
						global::haxe.lang.Null<int> pmin9 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax9 = default(global::haxe.lang.Null<int>);
						object tmp4 = null;
						if (( e13 == null )) {
							tmp4 = null;
						}
						else {
							if ( ! (pmin9.hasValue) ) {
								pmin9 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax9.hasValue) ) {
								pmax9 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							tmp4 = new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e13, (pmax9).toDynamic(), (pmin9).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
						return this.parseExprNext(tmp4);
					}
					
					
					case 13:
					{
						object e22 = this.parseExpr();
						{
							global::hscript.Token t2 = this.token();
							if (( t2 != global::hscript.Token.TDoubleDot )) {
								this.unexpected(t2);
							}
							
						}
						
						object e31 = this.parseExpr();
						global::hscript.ExprDef e14 = global::hscript.ExprDef.ETernary(e1, e22, e31);
						global::haxe.lang.Null<int> pmin10 = new global::haxe.lang.Null<int>(( (( e1 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e1, "pmin", 1247475490, true)) )) ), true);
						global::haxe.lang.Null<int> pmax10 = new global::haxe.lang.Null<int>(( (( e31 == null )) ? (0) : (((int) (global::haxe.lang.Runtime.getField_f(e31, "pmax", 1247473716, true)) )) ), true);
						if (( e14 == null )) {
							return null;
						}
						else {
							if ( ! (pmin10.hasValue) ) {
								pmin10 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax10.hasValue) ) {
								pmax10 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e14, (pmax10).toDynamic(), (pmin10).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					default:
					{
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						return e1;
					}
					
				}
				
			}
		}
		
		
		public virtual global::Array<object> parseFunctionArgs() {
			unchecked {
				global::Array<object> args = new global::Array<object>();
				global::hscript.Token tk = this.token();
				if (( tk != global::hscript.Token.TPClose )) {
					bool done = false;
					while ( ! (done) ) {
						string name = null;
						bool opt = false;
						if (( tk._hx_index == 13 )) {
							opt = true;
							tk = this.token();
						}
						
						if (( tk._hx_index == 2 )) {
							string id = ( tk as global::hscript.Token_TId ).s;
							name = id;
						}
						else {
							this.unexpected(tk);
							break;
						}
						
						object arg = new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{name}, new int[]{}, new double[]{});
						args.push(arg);
						if (opt) {
							global::haxe.lang.Null<bool> __temp_expr1 = global::haxe.lang.Null<object>.ofDynamic<bool>(global::haxe.lang.Runtime.setField(arg, "opt", 5545011, true));
						}
						
						if (this.allowTypes) {
							if (this.maybe(global::hscript.Token.TDoubleDot)) {
								global::hscript.CType __temp_expr2 = ((global::hscript.CType) (global::haxe.lang.Runtime.setField(arg, "t", 116, this.parseType())) );
							}
							
							if (this.maybe(global::hscript.Token.TOp("="))) {
								global::haxe.lang.Runtime.setField(arg, "value", 834174833, this.parseExpr());
							}
							
						}
						
						tk = this.token();
						switch (tk._hx_index) {
							case 5:
							{
								done = true;
								break;
							}
							
							
							case 9:
							{
								tk = this.token();
								break;
							}
							
							
							default:
							{
								this.unexpected(tk);
								break;
							}
							
						}
						
					}
					
				}
				
				return args;
			}
		}
		
		
		public virtual object parseFunctionDecl() {
			{
				global::hscript.Token t = this.token();
				if (( t != global::hscript.Token.TPOpen )) {
					this.unexpected(t);
				}
				
			}
			
			global::Array<object> args = this.parseFunctionArgs();
			global::hscript.CType ret = null;
			if (this.allowTypes) {
				global::hscript.Token tk = this.token();
				if (( tk != global::hscript.Token.TDoubleDot )) {
					this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
				else {
					ret = this.parseType();
				}
				
			}
			
			{
				object __temp_odecl1 = this.parseExpr();
				return new global::haxe.lang.DynamicObject(new int[]{5691745, 1081380189, 1092319906}, new object[]{ret, args, __temp_odecl1}, new int[]{}, new double[]{});
			}
			
		}
		
		
		public virtual global::Array<string> parsePath() {
			global::Array<string> path = new global::Array<string>(new string[]{this.getIdent()});
			while (true) {
				global::hscript.Token t = this.token();
				if (( t != global::hscript.Token.TDot )) {
					{
						this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{t}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
					}
					
					break;
				}
				
				path.push(this.getIdent());
			}
			
			return path;
		}
		
		
		public virtual global::hscript.CType parseType() {
			unchecked {
				global::hscript.Token t = this.token();
				global::hscript.Parser _gthis = this;
				switch (t._hx_index) {
					case 2:
					{
						string v = ( t as global::hscript.Token_TId ).s;
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{t}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						global::Array<string> path = this.parsePath();
						global::Array<object> @params = null;
						t = this.token();
						if (( t._hx_index == 3 )) {
							string op = ( t as global::hscript.Token_TOp ).s;
							if (( op == "<" )) {
								@params = new global::Array<object>(new object[]{});
								while (true) {
									@params.push(this.parseType());
									t = this.token();
									switch (t._hx_index) {
										case 3:
										{
											string op1 = ( t as global::hscript.Token_TOp ).s;
											{
												if (( op1 == ">" )) {
													goto label1;
												}
												
												if (global::haxe.lang.Runtime.eq((global::haxe.lang.StringExt.charCodeAt(op1, 0)).toDynamic(), 62)) {
													global::haxe.ds.List<object> tmp = this.tokens;
													global::hscript.Token tmp1 = global::hscript.Token.TOp(global::haxe.lang.StringExt.substr(op1, 1, default(global::haxe.lang.Null<int>)));
													tmp.@add(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tmp1}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (( ( this.tokenMax - op1.Length ) - 1 )) )}));
													goto label1;
												}
												
											}
											
											break;
										}
										
										
										case 9:
										{
											continue;
										}
										
										
										default:
										{
											break;
										}
										
									}
									
									this.unexpected(t);
									break;
								}
								label1: {};
							}
							else {
								this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{t}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							
						}
						else {
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{t}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						return this.parseTypeNext(global::hscript.CType.CTPath(path, @params));
					}
					
					
					case 4:
					{
						global::hscript.Token a = this.token();
						global::hscript.Token b = this.token();
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{b}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{a}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						global::haxe.lang.Function withReturn = new global::hscript.Parser_parseType_935__Fun(_gthis);
						switch (a._hx_index) {
							case 2:
							{
								string _g = ( a as global::hscript.Token_TId ).s;
								if (( b._hx_index == 14 )) {
									global::Array<object> _g1 = new global::Array<object>(new object[]{});
									{
										int _g2 = 0;
										global::Array<object> _g3 = this.parseFunctionArgs();
										while (( _g2 < _g3.length )) {
											object arg = _g3[_g2];
											 ++ _g2;
											{
												object _g4 = global::haxe.lang.Runtime.getField(arg, "value", 834174833, true);
												if (( _g4 == null )) {
												}
												else {
													object v1 = _g4;
													if ( ! (this.resumeErrors) ) {
														throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.ECustom("Default values not allowed in function types")) ), ((int) (global::haxe.lang.Runtime.getField_f(v1, "pmin", 1247475490, true)) ), ((int) (global::haxe.lang.Runtime.getField_f(v1, "pmax", 1247473716, true)) ), ((string) (this.origin) ), ((int) (this.line) )))) );
													}
													
												}
												
											}
											
											_g1.push(global::hscript.CType.CTNamed(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(arg, "name", 1224700491, true)), ( (((global::haxe.lang.Null<object>.ofDynamic<bool>(global::haxe.lang.Runtime.getField(arg, "opt", 5545011, true)))).@value) ? (global::hscript.CType.CTOpt(((global::hscript.CType) (global::haxe.lang.Runtime.getField(arg, "t", 116, true)) ))) : (((global::hscript.CType) (global::haxe.lang.Runtime.getField(arg, "t", 116, true)) )) )));
										}
										
									}
									
									global::Array<object> args = _g1;
									return ((global::hscript.CType) (withReturn.__hx_invoke1_o(default(double), args)) );
								}
								else {
									global::hscript.CType t1 = this.parseType();
									global::hscript.Token _g5 = this.token();
									switch (_g5._hx_index) {
										case 5:
										{
											return this.parseTypeNext(global::hscript.CType.CTParent(t1));
										}
										
										
										case 9:
										{
											global::Array<object> args1 = new global::Array<object>(new object[]{t1});
											while (true) {
												args1.push(this.parseType());
												if ( ! (this.maybe(global::hscript.Token.TComma)) ) {
													break;
												}
												
											}
											
											{
												global::hscript.Token t2 = this.token();
												if (( t2 != global::hscript.Token.TPClose )) {
													this.unexpected(t2);
												}
												
											}
											
											return ((global::hscript.CType) (withReturn.__hx_invoke1_o(default(double), args1)) );
										}
										
										
										default:
										{
											global::hscript.Token t3 = _g5;
											return ((global::hscript.CType) (this.unexpected(t3)) );
										}
										
									}
									
								}
								
							}
							
							
							case 5:
							{
								global::Array<object> _g6 = new global::Array<object>(new object[]{});
								{
									int _g7 = 0;
									global::Array<object> _g8 = this.parseFunctionArgs();
									while (( _g7 < _g8.length )) {
										object arg1 = _g8[_g7];
										 ++ _g7;
										{
											object _g9 = global::haxe.lang.Runtime.getField(arg1, "value", 834174833, true);
											if (( _g9 == null )) {
											}
											else {
												object v2 = _g9;
												if ( ! (this.resumeErrors) ) {
													throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.ECustom("Default values not allowed in function types")) ), ((int) (global::haxe.lang.Runtime.getField_f(v2, "pmin", 1247475490, true)) ), ((int) (global::haxe.lang.Runtime.getField_f(v2, "pmax", 1247473716, true)) ), ((string) (this.origin) ), ((int) (this.line) )))) );
												}
												
											}
											
										}
										
										_g6.push(global::hscript.CType.CTNamed(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(arg1, "name", 1224700491, true)), ( (((global::haxe.lang.Null<object>.ofDynamic<bool>(global::haxe.lang.Runtime.getField(arg1, "opt", 5545011, true)))).@value) ? (global::hscript.CType.CTOpt(((global::hscript.CType) (global::haxe.lang.Runtime.getField(arg1, "t", 116, true)) ))) : (((global::hscript.CType) (global::haxe.lang.Runtime.getField(arg1, "t", 116, true)) )) )));
									}
									
								}
								
								global::Array<object> args2 = _g6;
								return ((global::hscript.CType) (withReturn.__hx_invoke1_o(default(double), args2)) );
							}
							
							
							default:
							{
								global::hscript.CType t4 = this.parseType();
								global::hscript.Token _g10 = this.token();
								switch (_g10._hx_index) {
									case 5:
									{
										return this.parseTypeNext(global::hscript.CType.CTParent(t4));
									}
									
									
									case 9:
									{
										global::Array<object> args3 = new global::Array<object>(new object[]{t4});
										while (true) {
											args3.push(this.parseType());
											if ( ! (this.maybe(global::hscript.Token.TComma)) ) {
												break;
											}
											
										}
										
										{
											global::hscript.Token t5 = this.token();
											if (( t5 != global::hscript.Token.TPClose )) {
												this.unexpected(t5);
											}
											
										}
										
										return ((global::hscript.CType) (withReturn.__hx_invoke1_o(default(double), args3)) );
									}
									
									
									default:
									{
										global::hscript.Token t6 = _g10;
										return ((global::hscript.CType) (this.unexpected(t6)) );
									}
									
								}
								
							}
							
						}
						
					}
					
					
					case 6:
					{
						global::Array<object> fields = new global::Array<object>(new object[]{});
						global::Array<object> meta = null;
						while (true) {
							t = this.token();
							switch (t._hx_index) {
								case 2:
								{
									string _g11 = ( t as global::hscript.Token_TId ).s;
									if (( _g11 == "var" )) {
										string name = this.getIdent();
										{
											global::hscript.Token t7 = this.token();
											if (( t7 != global::hscript.Token.TDoubleDot )) {
												this.unexpected(t7);
											}
											
										}
										
										object __temp_stmt5 = null;
										{
											global::hscript.CType __temp_odecl1 = this.parseType();
											__temp_stmt5 = new global::haxe.lang.DynamicObject(new int[]{116, 1213811397, 1224700491}, new object[]{__temp_odecl1, meta, name}, new int[]{}, new double[]{});
										}
										
										fields.push(__temp_stmt5);
										meta = null;
										{
											global::hscript.Token t8 = this.token();
											if (( t8 != global::hscript.Token.TSemicolon )) {
												this.unexpected(t8);
											}
											
										}
										
									}
									else {
										string name1 = _g11;
										{
											{
												global::hscript.Token t9 = this.token();
												if (( t9 != global::hscript.Token.TDoubleDot )) {
													this.unexpected(t9);
												}
												
											}
											
											object __temp_stmt4 = null;
											{
												global::hscript.CType __temp_odecl2 = this.parseType();
												__temp_stmt4 = new global::haxe.lang.DynamicObject(new int[]{116, 1213811397, 1224700491}, new object[]{__temp_odecl2, meta, name1}, new int[]{}, new double[]{});
											}
											
											fields.push(__temp_stmt4);
											t = this.token();
											switch (t._hx_index) {
												case 7:
												{
													goto label6;
												}
												
												
												case 9:
												{
													break;
												}
												
												
												default:
												{
													this.unexpected(t);
													break;
												}
												
											}
											
										}
										
									}
									
									break;
								}
								
								
								case 7:
								{
									goto label6;
								}
								
								
								case 15:
								{
									string name2 = ( t as global::hscript.Token_TMeta ).s;
									{
										if (( meta == null )) {
											meta = new global::Array<object>(new object[]{});
										}
										
										object __temp_stmt6 = null;
										{
											global::Array<object> __temp_odecl3 = this.parseMetaArgs();
											__temp_stmt6 = new global::haxe.lang.DynamicObject(new int[]{1224700491, 1836776262}, new object[]{name2, __temp_odecl3}, new int[]{}, new double[]{});
										}
										
										meta.push(__temp_stmt6);
									}
									
									break;
								}
								
								
								default:
								{
									this.unexpected(t);
									goto label6;
								}
								
							}
							
						}
						label6: {};
						return this.parseTypeNext(global::hscript.CType.CTAnon(fields));
					}
					
					
					default:
					{
						return ((global::hscript.CType) (this.unexpected(t)) );
					}
					
				}
				
			}
		}
		
		
		public virtual global::hscript.CType parseTypeNext(global::hscript.CType t) {
			unchecked {
				global::hscript.Token tk = this.token();
				if (( tk._hx_index == 3 )) {
					string op = ( tk as global::hscript.Token_TOp ).s;
					if (( op != "->" )) {
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						return t;
					}
					
				}
				else {
					{
						this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
					}
					
					return t;
				}
				
				global::hscript.CType t2 = this.parseType();
				if (( t2._hx_index == 1 )) {
					global::hscript.CType _g = ( t2 as global::hscript.CType_CTFun ).ret;
					global::Array<object> args = ( t2 as global::hscript.CType_CTFun ).args;
					args.unshift(t);
					return t2;
				}
				else {
					return global::hscript.CType.CTFun(new global::Array<object>(new object[]{t}), t2);
				}
				
			}
		}
		
		
		public virtual global::Array<object> parseExprList(global::hscript.Token etk) {
			unchecked {
				global::Array<object> args = new global::Array<object>();
				global::hscript.Token tk = this.token();
				if (( tk == etk )) {
					return args;
				}
				
				{
					this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
				
				while (true) {
					args.push(this.parseExpr());
					tk = this.token();
					if (( tk._hx_index == 9 )) {
					}
					else {
						if (( tk == etk )) {
							break;
						}
						
						this.unexpected(tk);
						break;
					}
					
				}
				
				return args;
			}
		}
		
		
		public virtual global::Array<object> parseModule(string content, string origin) {
			if (( origin == null )) {
				origin = "hscript";
			}
			
			this.initParser(origin);
			this.input = content;
			this.readPos = 0;
			this.allowTypes = true;
			this.allowMetadata = true;
			global::Array<object> decls = new global::Array<object>(new object[]{});
			while (true) {
				global::hscript.Token tk = this.token();
				if (( tk == global::hscript.Token.TEof )) {
					break;
				}
				
				{
					this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
				
				decls.push(this.parseModuleDecl());
			}
			
			return decls;
		}
		
		
		public virtual global::Array<object> parseMetadata() {
			unchecked {
				global::Array<object> meta = new global::Array<object>(new object[]{});
				while (true) {
					global::hscript.Token tk = this.token();
					if (( tk._hx_index == 15 )) {
						string name = ( tk as global::hscript.Token_TMeta ).s;
						object __temp_stmt2 = null;
						{
							global::Array<object> __temp_odecl1 = this.parseMetaArgs();
							__temp_stmt2 = new global::haxe.lang.DynamicObject(new int[]{1224700491, 1836776262}, new object[]{name, __temp_odecl1}, new int[]{}, new double[]{});
						}
						
						meta.push(__temp_stmt2);
					}
					else {
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						break;
					}
					
				}
				
				return meta;
			}
		}
		
		
		public virtual object parseParams() {
			if (this.maybe(global::hscript.Token.TOp("<"))) {
				if ( ! (this.resumeErrors) ) {
					throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.EInvalidOp("Unsupported class type parameters")) ), ((int) (this.readPos) ), ((int) (this.readPos) ), ((string) (this.origin) ), ((int) (this.line) )))) );
				}
				
			}
			
			return new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{});
		}
		
		
		public virtual global::hscript.ModuleDecl parseModuleDecl() {
			unchecked {
				global::Array<object> meta = this.parseMetadata();
				string ident = this.getIdent();
				bool isPrivate = false;
				bool isExtern = false;
				while (true) {
					switch (ident) {
						case "extern":
						{
							isExtern = true;
							break;
						}
						
						
						case "private":
						{
							isPrivate = true;
							break;
						}
						
						
						default:
						{
							goto label1;
						}
						
					}
					
					ident = this.getIdent();
				}
				label1: {};
				switch (ident) {
					case "class":
					{
						string name = this.getIdent();
						object @params = this.parseParams();
						global::hscript.CType extend = null;
						global::Array<object> implement = new global::Array<object>(new object[]{});
						while (true) {
							global::hscript.Token t = this.token();
							if (( t._hx_index == 2 )) {
								switch (( t as global::hscript.Token_TId ).s) {
									case "extends":
									{
										extend = this.parseType();
										break;
									}
									
									
									case "implements":
									{
										implement.push(this.parseType());
										break;
									}
									
									
									default:
									{
										{
											this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{t}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
											this.tokenMin = this.oldTokenMin;
											this.tokenMax = this.oldTokenMax;
										}
										
										goto label2;
									}
									
								}
								
							}
							else {
								{
									this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{t}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
									this.tokenMin = this.oldTokenMin;
									this.tokenMax = this.oldTokenMax;
								}
								
								break;
							}
							
						}
						label2: {};
						global::Array<object> fields = new global::Array<object>(new object[]{});
						{
							global::hscript.Token t1 = this.token();
							if (( t1 != global::hscript.Token.TBrOpen )) {
								this.unexpected(t1);
							}
							
						}
						
						while ( ! (this.maybe(global::hscript.Token.TBrClose)) ) {
							fields.push(this.parseField());
						}
						
						return global::hscript.ModuleDecl.DClass(new global::haxe.lang.DynamicObject(new int[]{9342585, 225290809, 528773354, 792687011, 1192939994, 1213811397, 1224700491, 1836776262}, new object[]{fields, isPrivate, isExtern, implement, extend, meta, name, @params}, new int[]{}, new double[]{}));
					}
					
					
					case "import":
					{
						global::Array<string> path = new global::Array<string>(new string[]{this.getIdent()});
						bool star = false;
						while (true) {
							global::hscript.Token t2 = this.token();
							if (( t2 != global::hscript.Token.TDot )) {
								{
									this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{t2}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
									this.tokenMin = this.oldTokenMin;
									this.tokenMax = this.oldTokenMax;
								}
								
								break;
							}
							
							t2 = this.token();
							switch (t2._hx_index) {
								case 2:
								{
									string id = ( t2 as global::hscript.Token_TId ).s;
									path.push(id);
									break;
								}
								
								
								case 3:
								{
									if (( ( t2 as global::hscript.Token_TOp ).s == "*" )) {
										star = true;
									}
									else {
										this.unexpected(t2);
									}
									
									break;
								}
								
								
								default:
								{
									this.unexpected(t2);
									break;
								}
								
							}
							
						}
						
						{
							global::hscript.Token t3 = this.token();
							if (( t3 != global::hscript.Token.TSemicolon )) {
								this.unexpected(t3);
							}
							
						}
						
						return global::hscript.ModuleDecl.DImport(path, new global::haxe.lang.Null<bool>(star, true));
					}
					
					
					case "package":
					{
						global::Array<string> path1 = this.parsePath();
						{
							global::hscript.Token t4 = this.token();
							if (( t4 != global::hscript.Token.TSemicolon )) {
								this.unexpected(t4);
							}
							
						}
						
						return global::hscript.ModuleDecl.DPackage(path1);
					}
					
					
					case "typedef":
					{
						string name1 = this.getIdent();
						object params1 = this.parseParams();
						{
							global::hscript.Token t5 = this.token();
							if ( ! (global::Type.enumEq<object>(((object) (t5) ), ((object) (global::hscript.Token.TOp("=")) ))) ) {
								this.unexpected(t5);
							}
							
						}
						
						global::hscript.CType t6 = this.parseType();
						return global::hscript.ModuleDecl.DTypedef(new global::haxe.lang.DynamicObject(new int[]{116, 225290809, 1213811397, 1224700491, 1836776262}, new object[]{t6, isPrivate, meta, name1, params1}, new int[]{}, new double[]{}));
					}
					
					
					default:
					{
						this.unexpected(global::hscript.Token.TId(ident));
						break;
					}
					
				}
				
				return null;
			}
		}
		
		
		public virtual object parseField() {
			unchecked {
				global::Array<object> meta = this.parseMetadata();
				global::Array<object> access = new global::Array<object>(new object[]{});
				while (true) {
					string id = this.getIdent();
					switch (id) {
						case "function":
						{
							string name = this.getIdent();
							object inf = this.parseFunctionDecl();
							{
								object __temp_stmt6 = null;
								{
									global::Array<object> __temp_odecl1 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(inf, "args", 1081380189, true)) ))) );
									object __temp_odecl2 = global::haxe.lang.Runtime.getField(inf, "body", 1092319906, true);
									global::hscript.CType __temp_odecl3 = ((global::hscript.CType) (global::haxe.lang.Runtime.getField(inf, "ret", 5691745, true)) );
									__temp_stmt6 = new global::haxe.lang.DynamicObject(new int[]{5691745, 1081380189, 1126038837}, new object[]{__temp_odecl3, __temp_odecl1, __temp_odecl2}, new int[]{}, new double[]{});
								}
								
								global::hscript.FieldKind __temp_odecl4 = global::hscript.FieldKind.KFunction(__temp_stmt6);
								return new global::haxe.lang.DynamicObject(new int[]{184980900, 1191829844, 1213811397, 1224700491}, new object[]{access, __temp_odecl4, meta, name}, new int[]{}, new double[]{});
							}
							
						}
						
						
						case "inline":
						{
							access.push(global::hscript.FieldAccess.AInline);
							break;
						}
						
						
						case "macro":
						{
							access.push(global::hscript.FieldAccess.AMacro);
							break;
						}
						
						
						case "override":
						{
							access.push(global::hscript.FieldAccess.AOverride);
							break;
						}
						
						
						case "private":
						{
							access.push(global::hscript.FieldAccess.APrivate);
							break;
						}
						
						
						case "public":
						{
							access.push(global::hscript.FieldAccess.APublic);
							break;
						}
						
						
						case "static":
						{
							access.push(global::hscript.FieldAccess.AStatic);
							break;
						}
						
						
						case "var":
						{
							string name1 = this.getIdent();
							string @get = null;
							string @set = null;
							if (this.maybe(global::hscript.Token.TPOpen)) {
								@get = this.getIdent();
								{
									global::hscript.Token t = this.token();
									if (( t != global::hscript.Token.TComma )) {
										this.unexpected(t);
									}
									
								}
								
								@set = this.getIdent();
								{
									global::hscript.Token t1 = this.token();
									if (( t1 != global::hscript.Token.TPClose )) {
										this.unexpected(t1);
									}
									
								}
								
							}
							
							global::hscript.CType type = ( (this.maybe(global::hscript.Token.TDoubleDot)) ? (this.parseType()) : (null) );
							object expr = ( (this.maybe(global::hscript.Token.TOp("="))) ? (this.parseExpr()) : (null) );
							if (( expr != null )) {
								if (this.isBlock(expr)) {
									this.maybe(global::hscript.Token.TSemicolon);
								}
								else {
									global::hscript.Token t2 = this.token();
									if (( t2 != global::hscript.Token.TSemicolon )) {
										this.unexpected(t2);
									}
									
								}
								
							}
							else {
								bool tmp = default(bool);
								if (( type != null )) {
									if (( type == null )) {
										tmp = false;
									}
									else if (( type._hx_index == 2 )) {
										global::Array<object> _g = ( type as global::hscript.CType_CTAnon ).fields;
										tmp = true;
									}
									else {
										tmp = false;
									}
									
								}
								else {
									tmp = false;
								}
								
								if (tmp) {
									this.maybe(global::hscript.Token.TSemicolon);
								}
								else {
									global::hscript.Token t3 = this.token();
									if (( t3 != global::hscript.Token.TSemicolon )) {
										this.unexpected(t3);
									}
									
								}
								
							}
							
							{
								global::hscript.FieldKind __temp_odecl5 = global::hscript.FieldKind.KVar(new global::haxe.lang.DynamicObject(new int[]{5144726, 5741474, 1126038837, 1292432058}, new object[]{@get, @set, expr, type}, new int[]{}, new double[]{}));
								return new global::haxe.lang.DynamicObject(new int[]{184980900, 1191829844, 1213811397, 1224700491}, new object[]{access, __temp_odecl5, meta, name1}, new int[]{}, new double[]{});
							}
							
						}
						
						
						default:
						{
							this.unexpected(global::hscript.Token.TId(id));
							goto label1;
						}
						
					}
					
				}
				label1: {};
				return null;
			}
		}
		
		
		public int readChar() {
			unchecked {
				string s = this.input;
				int index = this.readPos++;
				if (( ((uint) (index) ) < s.Length )) {
					return ((int) (s[index]) );
				}
				else {
					return -1;
				}
				
			}
		}
		
		
		public virtual string readString(int until) {
			unchecked {
				int c = 0;
				global::StringBuf b = new global::StringBuf();
				bool esc = false;
				int old = this.line;
				string s = this.input;
				int p1 = ( this.readPos - 1 );
				while (true) {
					string s1 = this.input;
					int index = this.readPos++;
					int c1 = ( (( ((uint) (index) ) < s1.Length )) ? (((int) (s1[index]) )) : (-1) );
					if (( c1 == -1 )) {
						this.line = old;
						if ( ! (this.resumeErrors) ) {
							throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.EUnterminatedString) ), ((int) (p1) ), ((int) (p1) ), ((string) (this.origin) ), ((int) (this.line) )))) );
						}
						
						break;
					}
					
					if (esc) {
						esc = false;
						switch (c1) {
							case 34:
							case 39:
							case 92:
							{
								b.addChar(c1);
								break;
							}
							
							
							case 47:
							{
								if (this.allowJSON) {
									b.addChar(c1);
								}
								else {
									this.invalidChar(c1);
								}
								
								break;
							}
							
							
							case 110:
							{
								b.addChar(10);
								break;
							}
							
							
							case 114:
							{
								b.addChar(13);
								break;
							}
							
							
							case 116:
							{
								b.addChar(9);
								break;
							}
							
							
							case 117:
							{
								if ( ! (this.allowJSON) ) {
									this.invalidChar(c1);
								}
								
								int k = 0;
								{
									int _g = 0;
									while (( _g < 4 )) {
										int i = _g++;
										k <<= 4;
										string s2 = this.input;
										int index1 = this.readPos++;
										int @char = ( (( ((uint) (index1) ) < s2.Length )) ? (((int) (s2[index1]) )) : (-1) );
										switch (@char) {
											case 48:
											case 49:
											case 50:
											case 51:
											case 52:
											case 53:
											case 54:
											case 55:
											case 56:
											case 57:
											{
												k += ( @char - 48 );
												break;
											}
											
											
											case 65:
											case 66:
											case 67:
											case 68:
											case 69:
											case 70:
											{
												k += ( @char - 55 );
												break;
											}
											
											
											case 97:
											case 98:
											case 99:
											case 100:
											case 101:
											case 102:
											{
												k += ( @char - 87 );
												break;
											}
											
											
											default:
											{
												if (( @char == -1 )) {
													this.line = old;
													if ( ! (this.resumeErrors) ) {
														throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.EUnterminatedString) ), ((int) (p1) ), ((int) (p1) ), ((string) (this.origin) ), ((int) (this.line) )))) );
													}
													
												}
												
												this.invalidChar(@char);
												break;
											}
											
										}
										
									}
									
								}
								
								b.addChar(k);
								break;
							}
							
							
							default:
							{
								this.invalidChar(c1);
								break;
							}
							
						}
						
					}
					else if (( c1 == 92 )) {
						esc = true;
					}
					else if (( c1 == until )) {
						break;
					}
					else {
						if (( c1 == 10 )) {
							this.line++;
						}
						
						b.addChar(c1);
					}
					
				}
				
				return b.b.ToString();
			}
		}
		
		
		public virtual global::hscript.Token token() {
			unchecked {
				object t = (this.tokens.pop()).@value;
				if (( t != null )) {
					this.tokenMin = ((int) (global::haxe.lang.Runtime.getField_f(t, "min", 5443986, true)) );
					this.tokenMax = ((int) (global::haxe.lang.Runtime.getField_f(t, "max", 5442212, true)) );
					return ((global::hscript.Token) (global::haxe.lang.Runtime.getField(t, "t", 116, true)) );
				}
				
				this.oldTokenMin = this.tokenMin;
				this.oldTokenMax = this.tokenMax;
				this.tokenMin = ( (( this.@char < 0 )) ? (this.readPos) : (( this.readPos - 1 )) );
				global::hscript.Token t1 = this._token();
				this.tokenMax = ( (( this.@char < 0 )) ? (( this.readPos - 1 )) : (( this.readPos - 2 )) );
				return t1;
			}
		}
		
		
		public virtual global::hscript.Token _token() {
			unchecked {
				int @char = default(int);
				if (( this.@char < 0 )) {
					string s = this.input;
					int index = this.readPos++;
					@char = ( (( ((uint) (index) ) < s.Length )) ? (((int) (s[index]) )) : (-1) );
				}
				else {
					@char = this.@char;
					this.@char = -1;
				}
				
				while (true) {
					if (( @char == -1 )) {
						this.@char = @char;
						return global::hscript.Token.TEof;
					}
					
					switch (@char) {
						case 0:
						{
							return global::hscript.Token.TEof;
						}
						
						
						case 10:
						{
							this.line++;
							this.tokenMin++;
							break;
						}
						
						
						case 9:
						case 13:
						case 32:
						{
							this.tokenMin++;
							break;
						}
						
						
						case 35:
						{
							string s1 = this.input;
							int index1 = this.readPos++;
							@char = ( (( ((uint) (index1) ) < s1.Length )) ? (((int) (s1[index1]) )) : (-1) );
							if (this.idents[@char]) {
								string id = global::haxe.lang.StringExt.fromCharCode(@char);
								while (true) {
									string s2 = this.input;
									int index2 = this.readPos++;
									@char = ( (( ((uint) (index2) ) < s2.Length )) ? (((int) (s2[index2]) )) : (-1) );
									if ( ! (this.idents[@char]) ) {
										this.@char = @char;
										return this.preprocess(id);
									}
									
									id = global::haxe.lang.Runtime.concat(id, global::haxe.lang.StringExt.fromCharCode(@char));
								}
								
							}
							
							this.invalidChar(@char);
							break;
						}
						
						
						case 34:
						case 39:
						{
							return global::hscript.Token.TConst(global::hscript.Const.CString(this.readString(@char)));
						}
						
						
						case 40:
						{
							return global::hscript.Token.TPOpen;
						}
						
						
						case 41:
						{
							return global::hscript.Token.TPClose;
						}
						
						
						case 44:
						{
							return global::hscript.Token.TComma;
						}
						
						
						case 46:
						{
							string s3 = this.input;
							int index3 = this.readPos++;
							@char = ( (( ((uint) (index3) ) < s3.Length )) ? (((int) (s3[index3]) )) : (-1) );
							switch (@char) {
								case 46:
								{
									string s4 = this.input;
									int index4 = this.readPos++;
									@char = ( (( ((uint) (index4) ) < s4.Length )) ? (((int) (s4[index4]) )) : (-1) );
									if (( @char != 46 )) {
										this.invalidChar(@char);
									}
									
									return global::hscript.Token.TOp("...");
								}
								
								
								case 48:
								case 49:
								case 50:
								case 51:
								case 52:
								case 53:
								case 54:
								case 55:
								case 56:
								case 57:
								{
									int n = ( @char - 48 );
									int exp = 1;
									while (true) {
										string s5 = this.input;
										int index5 = this.readPos++;
										@char = ( (( ((uint) (index5) ) < s5.Length )) ? (((int) (s5[index5]) )) : (-1) );
										exp *= 10;
										switch (@char) {
											case 48:
											case 49:
											case 50:
											case 51:
											case 52:
											case 53:
											case 54:
											case 55:
											case 56:
											case 57:
											{
												n = ( ( n * 10 ) + (( @char - 48 )) );
												break;
											}
											
											
											default:
											{
												this.@char = @char;
												return global::hscript.Token.TConst(global::hscript.Const.CFloat(( ((double) (n) ) / exp )));
											}
											
										}
										
									}
									
									break;
								}
								
								
								default:
								{
									this.@char = @char;
									return global::hscript.Token.TDot;
								}
								
							}
							
							break;
						}
						
						
						case 48:
						case 49:
						case 50:
						case 51:
						case 52:
						case 53:
						case 54:
						case 55:
						case 56:
						case 57:
						{
							double n1 = ( (( @char - 48 )) * 1.0 );
							double exp1 = 0.0;
							while (true) {
								string s6 = this.input;
								int index6 = this.readPos++;
								@char = ( (( ((uint) (index6) ) < s6.Length )) ? (((int) (s6[index6]) )) : (-1) );
								exp1 *= ((double) (10) );
								switch (@char) {
									case 46:
									{
										if (( exp1 > 0 )) {
											bool tmp = default(bool);
											if (( exp1 == 10 )) {
												string s7 = this.input;
												int index7 = this.readPos++;
												tmp = ( (( (( ((uint) (index7) ) < s7.Length )) ? (((int) (s7[index7]) )) : (-1) )) == 46 );
											}
											else {
												tmp = false;
											}
											
											if (tmp) {
												{
													object __temp_stmt2 = null;
													{
														global::hscript.Token __temp_odecl1 = global::hscript.Token.TOp("...");
														__temp_stmt2 = new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{__temp_odecl1}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )});
													}
													
													this.tokens.push(__temp_stmt2);
													this.tokenMin = this.oldTokenMin;
													this.tokenMax = this.oldTokenMax;
												}
												
												int i = ((int) (n1) );
												return global::hscript.Token.TConst(( (( i == n1 )) ? (global::hscript.Const.CInt(i)) : (global::hscript.Const.CFloat(n1)) ));
											}
											
											this.invalidChar(@char);
										}
										
										exp1 = 1.0;
										break;
									}
									
									
									case 48:
									case 49:
									case 50:
									case 51:
									case 52:
									case 53:
									case 54:
									case 55:
									case 56:
									case 57:
									{
										n1 = ( ( n1 * 10 ) + (( @char - 48 )) );
										break;
									}
									
									
									case 69:
									case 101:
									{
										global::hscript.Token tk = this.token();
										global::haxe.lang.Null<int> pow = default(global::haxe.lang.Null<int>);
										switch (tk._hx_index) {
											case 1:
											{
												global::hscript.Const _g = ( tk as global::hscript.Token_TConst ).c;
												if (( _g._hx_index == 0 )) {
													int e = ( _g as global::hscript.Const_CInt ).v;
													pow = new global::haxe.lang.Null<int>(e, true);
												}
												else {
													this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
													this.tokenMin = this.oldTokenMin;
													this.tokenMax = this.oldTokenMax;
												}
												
												break;
											}
											
											
											case 3:
											{
												if (( ( tk as global::hscript.Token_TOp ).s == "-" )) {
													tk = this.token();
													if (( tk._hx_index == 1 )) {
														global::hscript.Const _g1 = ( tk as global::hscript.Token_TConst ).c;
														if (( _g1._hx_index == 0 )) {
															int e1 = ( _g1 as global::hscript.Const_CInt ).v;
															pow = new global::haxe.lang.Null<int>( - (e1) , true);
														}
														else {
															this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
															this.tokenMin = this.oldTokenMin;
															this.tokenMax = this.oldTokenMax;
														}
														
													}
													else {
														this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
														this.tokenMin = this.oldTokenMin;
														this.tokenMax = this.oldTokenMax;
													}
													
												}
												else {
													this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
													this.tokenMin = this.oldTokenMin;
													this.tokenMax = this.oldTokenMax;
												}
												
												break;
											}
											
											
											default:
											{
												this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
												this.tokenMin = this.oldTokenMin;
												this.tokenMax = this.oldTokenMax;
												break;
											}
											
										}
										
										if ( ! (pow.hasValue) ) {
											this.invalidChar(@char);
										}
										
										return global::hscript.Token.TConst(global::hscript.Const.CFloat(( ( ( global::System.Math.Pow(((double) (10) ), ((double) ((pow).@value) )) / exp1 ) * n1 ) * 10 )));
									}
									
									
									case 120:
									{
										if (( ( n1 > 0 ) || ( exp1 > 0 ) )) {
											this.invalidChar(@char);
										}
										
										int n2 = 0;
										while (true) {
											string s8 = this.input;
											int index8 = this.readPos++;
											@char = ( (( ((uint) (index8) ) < s8.Length )) ? (((int) (s8[index8]) )) : (-1) );
											switch (@char) {
												case 48:
												case 49:
												case 50:
												case 51:
												case 52:
												case 53:
												case 54:
												case 55:
												case 56:
												case 57:
												{
													n2 = ( ( (( n2 << 4 )) + @char ) - 48 );
													break;
												}
												
												
												case 65:
												case 66:
												case 67:
												case 68:
												case 69:
												case 70:
												{
													n2 = ( (( n2 << 4 )) + (( @char - 55 )) );
													break;
												}
												
												
												case 97:
												case 98:
												case 99:
												case 100:
												case 101:
												case 102:
												{
													n2 = ( (( n2 << 4 )) + (( @char - 87 )) );
													break;
												}
												
												
												default:
												{
													this.@char = @char;
													return global::hscript.Token.TConst(global::hscript.Const.CInt(n2));
												}
												
											}
											
										}
										
										break;
									}
									
									
									default:
									{
										this.@char = @char;
										int i1 = ((int) (n1) );
										return global::hscript.Token.TConst(( (( exp1 > 0 )) ? (global::hscript.Const.CFloat(( ( n1 * 10 ) / exp1 ))) : (( (( i1 == n1 )) ? (global::hscript.Const.CInt(i1)) : (global::hscript.Const.CFloat(n1)) )) ));
									}
									
								}
								
							}
							
							break;
						}
						
						
						case 58:
						{
							return global::hscript.Token.TDoubleDot;
						}
						
						
						case 59:
						{
							return global::hscript.Token.TSemicolon;
						}
						
						
						case 61:
						{
							string s9 = this.input;
							int index9 = this.readPos++;
							@char = ( (( ((uint) (index9) ) < s9.Length )) ? (((int) (s9[index9]) )) : (-1) );
							if (( @char == 61 )) {
								return global::hscript.Token.TOp("==");
							}
							else if (( @char == 62 )) {
								return global::hscript.Token.TOp("=>");
							}
							
							this.@char = @char;
							return global::hscript.Token.TOp("=");
						}
						
						
						case 63:
						{
							return global::hscript.Token.TQuestion;
						}
						
						
						case 64:
						{
							string s10 = this.input;
							int index10 = this.readPos++;
							@char = ( (( ((uint) (index10) ) < s10.Length )) ? (((int) (s10[index10]) )) : (-1) );
							if (( this.idents[@char] || ( @char == 58 ) )) {
								string id1 = global::haxe.lang.StringExt.fromCharCode(@char);
								while (true) {
									string s11 = this.input;
									int index11 = this.readPos++;
									@char = ( (( ((uint) (index11) ) < s11.Length )) ? (((int) (s11[index11]) )) : (-1) );
									if ( ! (this.idents[@char]) ) {
										this.@char = @char;
										return global::hscript.Token.TMeta(id1);
									}
									
									id1 = global::haxe.lang.Runtime.concat(id1, global::haxe.lang.StringExt.fromCharCode(@char));
								}
								
							}
							
							this.invalidChar(@char);
							break;
						}
						
						
						case 91:
						{
							return global::hscript.Token.TBkOpen;
						}
						
						
						case 93:
						{
							return global::hscript.Token.TBkClose;
						}
						
						
						case 123:
						{
							return global::hscript.Token.TBrOpen;
						}
						
						
						case 125:
						{
							return global::hscript.Token.TBrClose;
						}
						
						
						default:
						{
							if (this.ops[@char]) {
								string op = global::haxe.lang.StringExt.fromCharCode(@char);
								while (true) {
									string s12 = this.input;
									int index12 = this.readPos++;
									@char = ( (( ((uint) (index12) ) < s12.Length )) ? (((int) (s12[index12]) )) : (-1) );
									if (( @char == -1 )) {
										@char = 0;
									}
									
									if ( ! (this.ops[@char]) ) {
										this.@char = @char;
										return global::hscript.Token.TOp(op);
									}
									
									string pop = op;
									op = global::haxe.lang.Runtime.concat(op, global::haxe.lang.StringExt.fromCharCode(@char));
									if ((  ! (((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (this.opPriority) )) ))) ).exists(op))  && ((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, int>) (this.opPriority) )) ))) ).exists(pop) )) {
										if (( ( op == "//" ) || ( op == "/*" ) )) {
											return this.tokenComment(op, @char);
										}
										
										this.@char = @char;
										return global::hscript.Token.TOp(pop);
									}
									
								}
								
							}
							
							if (this.idents[@char]) {
								string id2 = global::haxe.lang.StringExt.fromCharCode(@char);
								while (true) {
									string s13 = this.input;
									int index13 = this.readPos++;
									@char = ( (( ((uint) (index13) ) < s13.Length )) ? (((int) (s13[index13]) )) : (-1) );
									if (( @char == -1 )) {
										@char = 0;
									}
									
									if ( ! (this.idents[@char]) ) {
										this.@char = @char;
										return global::hscript.Token.TId(id2);
									}
									
									id2 = global::haxe.lang.Runtime.concat(id2, global::haxe.lang.StringExt.fromCharCode(@char));
								}
								
							}
							
							this.invalidChar(@char);
							break;
						}
						
					}
					
					string s14 = this.input;
					int index14 = this.readPos++;
					@char = ( (( ((uint) (index14) ) < s14.Length )) ? (((int) (s14[index14]) )) : (-1) );
				}
				
				return null;
			}
		}
		
		
		public virtual object preprocValue(string id) {
			return ((object) (global::haxe.lang.Runtime.callField(((global::haxe.ds.StringMap) (((object) (((global::haxe.IMap) (((object) (this.preprocesorValues) )) )) )) ), "get", 5144726, new object[]{id})) );
		}
		
		
		public global::Array<object> preprocStack;
		
		public virtual object parsePreproCond() {
			unchecked {
				global::hscript.Token tk = this.token();
				switch (tk._hx_index) {
					case 2:
					{
						string id = ( tk as global::hscript.Token_TId ).s;
						global::hscript.ExprDef e = global::hscript.ExprDef.EIdent(id);
						global::haxe.lang.Null<int> pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
						global::haxe.lang.Null<int> pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
						if (( e == null )) {
							return null;
						}
						else {
							if ( ! (pmin.hasValue) ) {
								pmin = new global::haxe.lang.Null<int>(this.tokenMin, true);
							}
							
							if ( ! (pmax.hasValue) ) {
								pmax = new global::haxe.lang.Null<int>(this.tokenMax, true);
							}
							
							return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e, (pmax).toDynamic(), (pmin).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
						}
						
					}
					
					
					case 3:
					{
						if (( ( tk as global::hscript.Token_TOp ).s == "!" )) {
							global::hscript.ExprDef e1 = global::hscript.ExprDef.EUnop("!", true, this.parsePreproCond());
							global::haxe.lang.Null<int> pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
							global::haxe.lang.Null<int> pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
							if (( e1 == null )) {
								return null;
							}
							else {
								if ( ! (pmin1.hasValue) ) {
									pmin1 = new global::haxe.lang.Null<int>(this.tokenMin, true);
								}
								
								if ( ! (pmax1.hasValue) ) {
									pmax1 = new global::haxe.lang.Null<int>(this.tokenMax, true);
								}
								
								return new global::haxe.lang.DynamicObject(new int[]{101, 1247473716, 1247475490, 1258363366}, new object[]{e1, (pmax1).toDynamic(), (pmin1).toDynamic(), this.origin}, new int[]{1202919412}, new double[]{((double) (this.line) )});
							}
							
						}
						else {
							return this.unexpected(tk);
						}
						
					}
					
					
					case 4:
					{
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{global::hscript.Token.TPOpen}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						return this.parseExpr();
					}
					
					
					default:
					{
						return this.unexpected(tk);
					}
					
				}
				
			}
		}
		
		
		public virtual bool evalPreproCond(object e) {
			unchecked {
				global::hscript.ExprDef _g = ((global::hscript.ExprDef) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) );
				switch (_g._hx_index) {
					case 1:
					{
						string id = ( _g as global::hscript.ExprDef_EIdent ).v;
						return ( this.preprocValue(id) != null );
					}
					
					
					case 3:
					{
						object e1 = ( _g as global::hscript.ExprDef_EParent ).e;
						return this.evalPreproCond(e1);
					}
					
					
					case 6:
					{
						object _g1 = ( _g as global::hscript.ExprDef_EBinop ).e1;
						object _g2 = ( _g as global::hscript.ExprDef_EBinop ).e2;
						switch (( _g as global::hscript.ExprDef_EBinop ).op) {
							case "&&":
							{
								object e11 = _g1;
								object e2 = _g2;
								if (this.evalPreproCond(e11)) {
									return this.evalPreproCond(e2);
								}
								else {
									return false;
								}
								
							}
							
							
							case "||":
							{
								object e12 = _g1;
								object e21 = _g2;
								if ( ! (this.evalPreproCond(e12)) ) {
									return this.evalPreproCond(e21);
								}
								else {
									return true;
								}
								
							}
							
							
							default:
							{
								{
									global::hscript.ErrorDef err = global::hscript.ErrorDef.EInvalidPreprocessor(global::haxe.lang.Runtime.concat("Can\'t eval ", global::Type.enumConstructor(((object) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) ))));
									if ( ! (this.resumeErrors) ) {
										throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (err) ), ((int) (this.readPos) ), ((int) (this.readPos) ), ((string) (this.origin) ), ((int) (this.line) )))) );
									}
									
								}
								
								return false;
							}
							
						}
						
					}
					
					
					case 7:
					{
						bool _g3 = ( _g as global::hscript.ExprDef_EUnop ).prefix;
						if (( ( _g as global::hscript.ExprDef_EUnop ).op == "!" )) {
							object e3 = ( _g as global::hscript.ExprDef_EUnop ).e;
							return  ! (this.evalPreproCond(e3)) ;
						}
						else {
							{
								global::hscript.ErrorDef err1 = global::hscript.ErrorDef.EInvalidPreprocessor(global::haxe.lang.Runtime.concat("Can\'t eval ", global::Type.enumConstructor(((object) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) ))));
								if ( ! (this.resumeErrors) ) {
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (err1) ), ((int) (this.readPos) ), ((int) (this.readPos) ), ((string) (this.origin) ), ((int) (this.line) )))) );
								}
								
							}
							
							return false;
						}
						
					}
					
					
					default:
					{
						{
							global::hscript.ErrorDef err2 = global::hscript.ErrorDef.EInvalidPreprocessor(global::haxe.lang.Runtime.concat("Can\'t eval ", global::Type.enumConstructor(((object) (global::haxe.lang.Runtime.getField(e, "e", 101, true)) ))));
							if ( ! (this.resumeErrors) ) {
								throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (err2) ), ((int) (this.readPos) ), ((int) (this.readPos) ), ((string) (this.origin) ), ((int) (this.line) )))) );
							}
							
						}
						
						return false;
					}
					
				}
				
			}
		}
		
		
		public virtual global::hscript.Token preprocess(string id) {
			unchecked {
				switch (id) {
					case "else":
					case "elseif":
					{
						if (( this.preprocStack.length > 0 )) {
							if (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.getField(this.preprocStack[( this.preprocStack.length - 1 )], "r", 114, true))) {
								bool __temp_expr3 = global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.setField(this.preprocStack[( this.preprocStack.length - 1 )], "r", 114, false));
								this.skipTokens();
								return this.token();
							}
							else if (( id == "else" )) {
								object __temp_expr2 = (this.preprocStack.pop()).@value;
								this.preprocStack.push(new global::haxe.lang.DynamicObject(new int[]{114}, new object[]{true}, new int[]{}, new double[]{}));
								return this.token();
							}
							else {
								object __temp_expr1 = (this.preprocStack.pop()).@value;
								return this.preprocess("if");
							}
							
						}
						else {
							return global::hscript.Token.TPrepro(id);
						}
						
					}
					
					
					case "end":
					{
						if (( this.preprocStack.length > 0 )) {
							object __temp_expr4 = (this.preprocStack.pop()).@value;
							return this.token();
						}
						else {
							return global::hscript.Token.TPrepro(id);
						}
						
					}
					
					
					case "if":
					{
						object e = this.parsePreproCond();
						if (this.evalPreproCond(e)) {
							this.preprocStack.push(new global::haxe.lang.DynamicObject(new int[]{114}, new object[]{true}, new int[]{}, new double[]{}));
							return this.token();
						}
						
						this.preprocStack.push(new global::haxe.lang.DynamicObject(new int[]{114}, new object[]{false}, new int[]{}, new double[]{}));
						this.skipTokens();
						return this.token();
					}
					
					
					default:
					{
						return global::hscript.Token.TPrepro(id);
					}
					
				}
				
			}
		}
		
		
		public virtual void skipTokens() {
			unchecked {
				int spos = ( this.preprocStack.length - 1 );
				object obj = this.preprocStack[spos];
				int pos = this.readPos;
				while (true) {
					global::hscript.Token tk = this.token();
					if (( tk == global::hscript.Token.TEof )) {
						if ( ! (this.resumeErrors) ) {
							throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.EInvalidPreprocessor("Unclosed")) ), ((int) (pos) ), ((int) (pos) ), ((string) (this.origin) ), ((int) (this.line) )))) );
						}
						
					}
					
					if (( ! (global::haxe.lang.Runtime.refEq(this.preprocStack[spos], obj)) )) {
						{
							this.tokens.push(new global::haxe.lang.DynamicObject(new int[]{116}, new object[]{tk}, new int[]{5442212, 5443986}, new double[]{((double) (this.tokenMax) ), ((double) (this.tokenMin) )}));
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						
						break;
					}
					
				}
				
			}
		}
		
		
		public virtual global::hscript.Token tokenComment(string op, int @char) {
			unchecked {
				global::haxe.lang.Null<int> c = global::haxe.lang.StringExt.charCodeAt(op, 1);
				string s = this.input;
				if (global::haxe.lang.Runtime.eq((c).toDynamic(), 47)) {
					while (( ( @char != 13 ) && ( @char != 10 ) )) {
						string s1 = this.input;
						int index = this.readPos++;
						@char = ( (( ((uint) (index) ) < s1.Length )) ? (((int) (s1[index]) )) : (-1) );
						if (( @char == -1 )) {
							break;
						}
						
					}
					
					this.@char = @char;
					return this.token();
				}
				
				if (global::haxe.lang.Runtime.eq((c).toDynamic(), 42)) {
					int old = this.line;
					if (( op == "/**/" )) {
						this.@char = @char;
						return this.token();
					}
					
					while (true) {
						while (( @char != 42 )) {
							if (( @char == 10 )) {
								this.line++;
							}
							
							string s2 = this.input;
							int index1 = this.readPos++;
							@char = ( (( ((uint) (index1) ) < s2.Length )) ? (((int) (s2[index1]) )) : (-1) );
							if (( @char == -1 )) {
								this.line = old;
								if ( ! (this.resumeErrors) ) {
									throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.EUnterminatedComment) ), ((int) (this.tokenMin) ), ((int) (this.tokenMin) ), ((string) (this.origin) ), ((int) (this.line) )))) );
								}
								
								break;
							}
							
						}
						
						string s3 = this.input;
						int index2 = this.readPos++;
						@char = ( (( ((uint) (index2) ) < s3.Length )) ? (((int) (s3[index2]) )) : (-1) );
						if (( @char == -1 )) {
							this.line = old;
							if ( ! (this.resumeErrors) ) {
								throw ((global::System.Exception) (global::haxe.Exception.thrown(new global::hscript.Error(((global::hscript.ErrorDef) (global::hscript.ErrorDef.EUnterminatedComment) ), ((int) (this.tokenMin) ), ((int) (this.tokenMin) ), ((string) (this.origin) ), ((int) (this.line) )))) );
							}
							
							break;
						}
						
						if (( @char == 47 )) {
							break;
						}
						
					}
					
					return this.token();
				}
				
				this.@char = @char;
				return global::hscript.Token.TOp(op);
			}
		}
		
		
		public virtual string constString(global::hscript.Const c) {
			unchecked {
				switch (c._hx_index) {
					case 0:
					{
						int v = ( c as global::hscript.Const_CInt ).v;
						return global::Std.@string(v);
					}
					
					
					case 1:
					{
						double f = ( c as global::hscript.Const_CFloat ).f;
						return global::Std.@string(f);
					}
					
					
					case 2:
					{
						string s = ( c as global::hscript.Const_CString ).s;
						return s;
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual string tokenString(global::hscript.Token t) {
			unchecked {
				switch (t._hx_index) {
					case 0:
					{
						return "<eof>";
					}
					
					
					case 1:
					{
						global::hscript.Const c = ( t as global::hscript.Token_TConst ).c;
						return this.constString(c);
					}
					
					
					case 2:
					{
						string s = ( t as global::hscript.Token_TId ).s;
						return s;
					}
					
					
					case 3:
					{
						string s1 = ( t as global::hscript.Token_TOp ).s;
						return s1;
					}
					
					
					case 4:
					{
						return "(";
					}
					
					
					case 5:
					{
						return ")";
					}
					
					
					case 6:
					{
						return "{";
					}
					
					
					case 7:
					{
						return "}";
					}
					
					
					case 8:
					{
						return ".";
					}
					
					
					case 9:
					{
						return ",";
					}
					
					
					case 10:
					{
						return ";";
					}
					
					
					case 11:
					{
						return "[";
					}
					
					
					case 12:
					{
						return "]";
					}
					
					
					case 13:
					{
						return "?";
					}
					
					
					case 14:
					{
						return ":";
					}
					
					
					case 15:
					{
						string id = ( t as global::hscript.Token_TMeta ).s;
						return global::haxe.lang.Runtime.concat("@", id);
					}
					
					
					case 16:
					{
						string id1 = ( t as global::hscript.Token_TPrepro ).s;
						return global::haxe.lang.Runtime.concat("#", id1);
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1797027058:
					{
						this.oldTokenMax = ((int) (@value) );
						return @value;
					}
					
					
					case 1797028832:
					{
						this.oldTokenMin = ((int) (@value) );
						return @value;
					}
					
					
					case 725786923:
					{
						this.tokenMax = ((int) (@value) );
						return @value;
					}
					
					
					case 725788697:
					{
						this.tokenMin = ((int) (@value) );
						return @value;
					}
					
					
					case 5841808:
					{
						this.uid = ((int) (@value) );
						return @value;
					}
					
					
					case 1103060694:
					{
						this.@char = ((int) (@value) );
						return @value;
					}
					
					
					case 47121374:
					{
						this.readPos = ((int) (@value) );
						return @value;
					}
					
					
					case 1202919412:
					{
						this.line = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2057163599:
					{
						this.preprocStack = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 300357466:
					{
						this.tokens = ((global::haxe.ds.List<object>) (global::haxe.ds.List<object>.__hx_cast<object>(((global::haxe.ds.List) (@value) ))) );
						return @value;
					}
					
					
					case 1797027058:
					{
						this.oldTokenMax = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1797028832:
					{
						this.oldTokenMin = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 725786923:
					{
						this.tokenMax = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 725788697:
					{
						this.tokenMin = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1258363366:
					{
						this.origin = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 5841808:
					{
						this.uid = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1386303363:
					{
						this.idents = ((global::Array<bool>) (global::Array<object>.__hx_cast<bool>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 5545010:
					{
						this.ops = ((global::Array<bool>) (global::Array<object>.__hx_cast<bool>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 1103060694:
					{
						this.@char = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 47121374:
					{
						this.readPos = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1042138122:
					{
						this.input = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 825712952:
					{
						this.resumeErrors = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 282360088:
					{
						this.allowMetadata = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1167534896:
					{
						this.allowTypes = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 826550065:
					{
						this.allowJSON = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1317134924:
					{
						this.preprocesorValues = ((global::haxe.ds.StringMap) (@value) );
						return @value;
					}
					
					
					case 50254234:
					{
						this.opRightAssoc = ((global::haxe.ds.StringMap<bool>) (global::haxe.ds.StringMap<object>.__hx_cast<bool>(((global::haxe.ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 1054351781:
					{
						this.opPriority = ((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 1849631693:
					{
						this.identChars = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 682095612:
					{
						this.opChars = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1202919412:
					{
						this.line = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 618537130:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "tokenString", 618537130)) );
					}
					
					
					case 691028628:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "constString", 691028628)) );
					}
					
					
					case 637231206:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "tokenComment", 637231206)) );
					}
					
					
					case 2045446969:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "skipTokens", 2045446969)) );
					}
					
					
					case 306633900:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "preprocess", 306633900)) );
					}
					
					
					case 810689960:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "evalPreproCond", 810689960)) );
					}
					
					
					case 1443990783:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parsePreproCond", 1443990783)) );
					}
					
					
					case 2057163599:
					{
						return this.preprocStack;
					}
					
					
					case 675998584:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "preprocValue", 675998584)) );
					}
					
					
					case 269666874:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "_token", 269666874)) );
					}
					
					
					case 338395897:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "token", 338395897)) );
					}
					
					
					case 179047623:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "readString", 179047623)) );
					}
					
					
					case 1773615436:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "readChar", 1773615436)) );
					}
					
					
					case 712301447:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseField", 712301447)) );
					}
					
					
					case 194144585:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseModuleDecl", 194144585)) );
					}
					
					
					case 1756866521:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseParams", 1756866521)) );
					}
					
					
					case 88678082:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseMetadata", 88678082)) );
					}
					
					
					case 1007673663:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseModule", 1007673663)) );
					}
					
					
					case 1918417798:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseExprList", 1918417798)) );
					}
					
					
					case 2063384608:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseTypeNext", 2063384608)) );
					}
					
					
					case 1420772493:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseType", 1420772493)) );
					}
					
					
					case 1375221624:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parsePath", 1375221624)) );
					}
					
					
					case 104493173:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseFunctionDecl", 104493173)) );
					}
					
					
					case 71871848:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseFunctionArgs", 71871848)) );
					}
					
					
					case 1940399131:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseExprNext", 1940399131)) );
					}
					
					
					case 191923584:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseStructure", 191923584)) );
					}
					
					
					case 110661850:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "makeBinop", 110661850)) );
					}
					
					
					case 1145554120:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "makeUnop", 1145554120)) );
					}
					
					
					case 1100981319:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "mapCompr", 1100981319)) );
					}
					
					
					case 1848869397:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseMetaArgs", 1848869397)) );
					}
					
					
					case 1274863514:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseLambda", 1274863514)) );
					}
					
					
					case 1254379272:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseExpr", 1254379272)) );
					}
					
					
					case 276573010:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseObject", 276573010)) );
					}
					
					
					case 476102071:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseFullExpr", 476102071)) );
					}
					
					
					case 1367480579:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "isBlock", 1367480579)) );
					}
					
					
					case 24414:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "mk", 24414)) );
					}
					
					
					case 1247473716:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pmax", 1247473716)) );
					}
					
					
					case 1247475490:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pmin", 1247475490)) );
					}
					
					
					case 1126038837:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "expr", 1126038837)) );
					}
					
					
					case 391139962:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "getIdent", 391139962)) );
					}
					
					
					case 52892584:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "maybe", 52892584)) );
					}
					
					
					case 1815309403:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ensureToken", 1815309403)) );
					}
					
					
					case 75232702:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ensure", 75232702)) );
					}
					
					
					case 1247875546:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "push", 1247875546)) );
					}
					
					
					case 1173624273:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "unexpected", 1173624273)) );
					}
					
					
					case 208459108:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "parseString", 208459108)) );
					}
					
					
					case 1909323791:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "initParser", 1909323791)) );
					}
					
					
					case 701410669:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "invalidChar", 701410669)) );
					}
					
					
					case 1932118984:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "error", 1932118984)) );
					}
					
					
					case 300357466:
					{
						return this.tokens;
					}
					
					
					case 1797027058:
					{
						return this.oldTokenMax;
					}
					
					
					case 1797028832:
					{
						return this.oldTokenMin;
					}
					
					
					case 725786923:
					{
						return this.tokenMax;
					}
					
					
					case 725788697:
					{
						return this.tokenMin;
					}
					
					
					case 1258363366:
					{
						return this.origin;
					}
					
					
					case 5841808:
					{
						return this.uid;
					}
					
					
					case 1386303363:
					{
						return this.idents;
					}
					
					
					case 5545010:
					{
						return this.ops;
					}
					
					
					case 1103060694:
					{
						return this.@char;
					}
					
					
					case 47121374:
					{
						return this.readPos;
					}
					
					
					case 1042138122:
					{
						return this.input;
					}
					
					
					case 825712952:
					{
						return this.resumeErrors;
					}
					
					
					case 282360088:
					{
						return this.allowMetadata;
					}
					
					
					case 1167534896:
					{
						return this.allowTypes;
					}
					
					
					case 826550065:
					{
						return this.allowJSON;
					}
					
					
					case 1317134924:
					{
						return this.preprocesorValues;
					}
					
					
					case 50254234:
					{
						return this.opRightAssoc;
					}
					
					
					case 1054351781:
					{
						return this.opPriority;
					}
					
					
					case 1849631693:
					{
						return this.identChars;
					}
					
					
					case 682095612:
					{
						return this.opChars;
					}
					
					
					case 1202919412:
					{
						return this.line;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1797027058:
					{
						return ((double) (this.oldTokenMax) );
					}
					
					
					case 1797028832:
					{
						return ((double) (this.oldTokenMin) );
					}
					
					
					case 725786923:
					{
						return ((double) (this.tokenMax) );
					}
					
					
					case 725788697:
					{
						return ((double) (this.tokenMin) );
					}
					
					
					case 5841808:
					{
						return ((double) (this.uid) );
					}
					
					
					case 1103060694:
					{
						return ((double) (this.@char) );
					}
					
					
					case 47121374:
					{
						return ((double) (this.readPos) );
					}
					
					
					case 1202919412:
					{
						return ((double) (this.line) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 618537130:
					{
						return this.tokenString(((global::hscript.Token) (dynargs[0]) ));
					}
					
					
					case 691028628:
					{
						return this.constString(((global::hscript.Const) (dynargs[0]) ));
					}
					
					
					case 637231206:
					{
						return this.tokenComment(global::haxe.lang.Runtime.toString(dynargs[0]), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ));
					}
					
					
					case 2045446969:
					{
						this.skipTokens();
						break;
					}
					
					
					case 306633900:
					{
						return this.preprocess(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 810689960:
					{
						return this.evalPreproCond(dynargs[0]);
					}
					
					
					case 1443990783:
					{
						return this.parsePreproCond();
					}
					
					
					case 675998584:
					{
						return this.preprocValue(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 269666874:
					{
						return this._token();
					}
					
					
					case 338395897:
					{
						return this.token();
					}
					
					
					case 179047623:
					{
						return this.readString(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1773615436:
					{
						return this.readChar();
					}
					
					
					case 712301447:
					{
						return this.parseField();
					}
					
					
					case 194144585:
					{
						return this.parseModuleDecl();
					}
					
					
					case 1756866521:
					{
						return this.parseParams();
					}
					
					
					case 88678082:
					{
						return this.parseMetadata();
					}
					
					
					case 1007673663:
					{
						return this.parseModule(global::haxe.lang.Runtime.toString(dynargs[0]), global::haxe.lang.Runtime.toString(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )));
					}
					
					
					case 1918417798:
					{
						return this.parseExprList(((global::hscript.Token) (dynargs[0]) ));
					}
					
					
					case 2063384608:
					{
						return this.parseTypeNext(((global::hscript.CType) (dynargs[0]) ));
					}
					
					
					case 1420772493:
					{
						return this.parseType();
					}
					
					
					case 1375221624:
					{
						return this.parsePath();
					}
					
					
					case 104493173:
					{
						return this.parseFunctionDecl();
					}
					
					
					case 71871848:
					{
						return this.parseFunctionArgs();
					}
					
					
					case 1940399131:
					{
						return this.parseExprNext(dynargs[0]);
					}
					
					
					case 191923584:
					{
						return this.parseStructure(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 110661850:
					{
						return this.makeBinop(global::haxe.lang.Runtime.toString(dynargs[0]), dynargs[1], dynargs[2]);
					}
					
					
					case 1145554120:
					{
						return this.makeUnop(global::haxe.lang.Runtime.toString(dynargs[0]), dynargs[1]);
					}
					
					
					case 1100981319:
					{
						return this.mapCompr(global::haxe.lang.Runtime.toString(dynargs[0]), dynargs[1]);
					}
					
					
					case 1848869397:
					{
						return this.parseMetaArgs();
					}
					
					
					case 1274863514:
					{
						return this.parseLambda(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ), global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[1]));
					}
					
					
					case 1254379272:
					{
						return this.parseExpr();
					}
					
					
					case 276573010:
					{
						return this.parseObject(global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[0]));
					}
					
					
					case 476102071:
					{
						this.parseFullExpr(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
						break;
					}
					
					
					case 1367480579:
					{
						return this.isBlock(dynargs[0]);
					}
					
					
					case 24414:
					{
						return this.mk(((global::hscript.ExprDef) (dynargs[0]) ), global::haxe.lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )), global::haxe.lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 2 )) ? (dynargs[2]) : (null) )));
					}
					
					
					case 1247473716:
					{
						return this.pmax(dynargs[0]);
					}
					
					
					case 1247475490:
					{
						return this.pmin(dynargs[0]);
					}
					
					
					case 1126038837:
					{
						return this.expr(dynargs[0]);
					}
					
					
					case 391139962:
					{
						return this.getIdent();
					}
					
					
					case 52892584:
					{
						return this.maybe(((global::hscript.Token) (dynargs[0]) ));
					}
					
					
					case 1815309403:
					{
						this.ensureToken(((global::hscript.Token) (dynargs[0]) ));
						break;
					}
					
					
					case 75232702:
					{
						this.ensure(((global::hscript.Token) (dynargs[0]) ));
						break;
					}
					
					
					case 1247875546:
					{
						this.push(((global::hscript.Token) (dynargs[0]) ));
						break;
					}
					
					
					case 1173624273:
					{
						return this.unexpected(((global::hscript.Token) (dynargs[0]) ));
					}
					
					
					case 208459108:
					{
						return this.parseString(global::haxe.lang.Runtime.toString(dynargs[0]), global::haxe.lang.Runtime.toString(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )));
					}
					
					
					case 1909323791:
					{
						this.initParser(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					case 701410669:
					{
						this.invalidChar(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
						break;
					}
					
					
					case 1932118984:
					{
						this.error(((global::hscript.ErrorDef) (dynargs[0]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[2])) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("preprocStack");
			baseArr.push("tokens");
			baseArr.push("oldTokenMax");
			baseArr.push("oldTokenMin");
			baseArr.push("tokenMax");
			baseArr.push("tokenMin");
			baseArr.push("origin");
			baseArr.push("uid");
			baseArr.push("idents");
			baseArr.push("ops");
			baseArr.push("char");
			baseArr.push("readPos");
			baseArr.push("input");
			baseArr.push("resumeErrors");
			baseArr.push("allowMetadata");
			baseArr.push("allowTypes");
			baseArr.push("allowJSON");
			baseArr.push("preprocesorValues");
			baseArr.push("opRightAssoc");
			baseArr.push("opPriority");
			baseArr.push("identChars");
			baseArr.push("opChars");
			baseArr.push("line");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hscript {
	public class Parser_parseType_935__Fun : global::haxe.lang.Function {
		
		public Parser_parseType_935__Fun(global::hscript.Parser _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::Array<object> args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (__fn_dyn1) ))) )) );
				{
					global::hscript.Token _g = this._gthis.token();
					if (( _g._hx_index == 3 )) {
						if (( ( _g as global::hscript.Token_TOp ).s == "->" )) {
						}
						else {
							global::hscript.Token t = _g;
							this._gthis.unexpected(t);
						}
						
					}
					else {
						global::hscript.Token t1 = _g;
						this._gthis.unexpected(t1);
					}
					
				}
				
				return global::hscript.CType.CTFun(args, this._gthis.parseType());
			}
		}
		
		
		public global::hscript.Parser _gthis;
		
	}
}


