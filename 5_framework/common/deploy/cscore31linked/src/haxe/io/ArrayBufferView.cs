// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.io {
	public class ArrayBufferViewImpl : global::haxe.lang.HxObject {
		
		public ArrayBufferViewImpl(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ArrayBufferViewImpl(global::haxe.io.Bytes bytes, int pos, int length) {
			global::haxe.io.ArrayBufferViewImpl.__hx_ctor_haxe_io_ArrayBufferViewImpl(this, bytes, pos, length);
		}
		
		
		protected static void __hx_ctor_haxe_io_ArrayBufferViewImpl(global::haxe.io.ArrayBufferViewImpl __hx_this, global::haxe.io.Bytes bytes, int pos, int length) {
			__hx_this.bytes = bytes;
			__hx_this.byteOffset = pos;
			__hx_this.byteLength = length;
		}
		
		
		public global::haxe.io.Bytes bytes;
		
		public int byteOffset;
		
		public int byteLength;
		
		public virtual global::haxe.io.ArrayBufferViewImpl sub(int begin, global::haxe.lang.Null<int> length) {
			if ( ! (length.hasValue) ) {
				length = new global::haxe.lang.Null<int>(( this.byteLength - begin ), true);
			}
			
			if (( ( ( begin < 0 ) || ( (length).@value < 0 ) ) || ( ( begin + (length).@value ) > this.byteLength ) )) {
				throw ((global::System.Exception) (global::haxe.Exception.thrown(global::haxe.io.Error.OutsideBounds)) );
			}
			
			return new global::haxe.io.ArrayBufferViewImpl(((global::haxe.io.Bytes) (this.bytes) ), ((int) (( this.byteOffset + begin )) ), (length).@value);
		}
		
		
		public virtual global::haxe.io.ArrayBufferViewImpl subarray(global::haxe.lang.Null<int> begin, global::haxe.lang.Null<int> end) {
			if ( ! (begin.hasValue) ) {
				begin = new global::haxe.lang.Null<int>(0, true);
			}
			
			if ( ! (end.hasValue) ) {
				end = new global::haxe.lang.Null<int>(( this.byteLength - (begin).@value ), true);
			}
			
			return this.sub((begin).@value, new global::haxe.lang.Null<int>(( (end).@value - (begin).@value ), true));
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1997282830:
					{
						this.byteLength = ((int) (@value) );
						return @value;
					}
					
					
					case 943988923:
					{
						this.byteOffset = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1997282830:
					{
						this.byteLength = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 943988923:
					{
						this.byteOffset = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1033373803:
					{
						this.bytes = ((global::haxe.io.Bytes) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 125916185:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "subarray", 125916185)) );
					}
					
					
					case 5745024:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "sub", 5745024)) );
					}
					
					
					case 1997282830:
					{
						return this.byteLength;
					}
					
					
					case 943988923:
					{
						return this.byteOffset;
					}
					
					
					case 1033373803:
					{
						return this.bytes;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1997282830:
					{
						return ((double) (this.byteLength) );
					}
					
					
					case 943988923:
					{
						return ((double) (this.byteOffset) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 125916185:
					{
						return this.subarray(global::haxe.lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )), global::haxe.lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )));
					}
					
					
					case 5745024:
					{
						return this.sub(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), global::haxe.lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("byteLength");
			baseArr.push("byteOffset");
			baseArr.push("bytes");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.io._ArrayBufferView {
	public sealed class ArrayBufferView_Impl_ {
		
		
		
		
		
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::haxe.io.ArrayBufferViewImpl _new(int size) {
			global::haxe.io.ArrayBufferViewImpl this1 = new global::haxe.io.ArrayBufferViewImpl(((global::haxe.io.Bytes) (global::haxe.io.Bytes.alloc(size)) ), ((int) (0) ), ((int) (size) ));
			return ((global::haxe.io.ArrayBufferViewImpl) (this1) );
		}
		
		
		public static int get_byteOffset(global::haxe.io.ArrayBufferViewImpl this1) {
			return this1.byteOffset;
		}
		
		
		public static int get_byteLength(global::haxe.io.ArrayBufferViewImpl this1) {
			return this1.byteLength;
		}
		
		
		public static global::haxe.io.Bytes get_buffer(global::haxe.io.ArrayBufferViewImpl this1) {
			return this1.bytes;
		}
		
		
		public static global::haxe.io.ArrayBufferViewImpl sub(global::haxe.io.ArrayBufferViewImpl this1, int begin, global::haxe.lang.Null<int> length) {
			return ((global::haxe.io.ArrayBufferViewImpl) (this1.sub(begin, length)) );
		}
		
		
		public static global::haxe.io.ArrayBufferViewImpl subarray(global::haxe.io.ArrayBufferViewImpl this1, global::haxe.lang.Null<int> begin, global::haxe.lang.Null<int> end) {
			return ((global::haxe.io.ArrayBufferViewImpl) (this1.subarray(begin, end)) );
		}
		
		
		public static global::haxe.io.ArrayBufferViewImpl getData(global::haxe.io.ArrayBufferViewImpl this1) {
			return this1;
		}
		
		
		public static global::haxe.io.ArrayBufferViewImpl fromData(global::haxe.io.ArrayBufferViewImpl a) {
			return ((global::haxe.io.ArrayBufferViewImpl) (a) );
		}
		
		
		public static global::haxe.io.ArrayBufferViewImpl fromBytes(global::haxe.io.Bytes bytes, global::haxe.lang.Null<int> pos, global::haxe.lang.Null<int> length) {
			int pos1 = ( ( ! (pos.hasValue) ) ? (0) : ((pos).@value) );
			if ( ! (length.hasValue) ) {
				length = new global::haxe.lang.Null<int>(( bytes.length - pos1 ), true);
			}
			
			if (( ( ( pos1 < 0 ) || ( (length).@value < 0 ) ) || ( ( pos1 + (length).@value ) > bytes.length ) )) {
				throw ((global::System.Exception) (global::haxe.Exception.thrown(global::haxe.io.Error.OutsideBounds)) );
			}
			
			return ((global::haxe.io.ArrayBufferViewImpl) (new global::haxe.io.ArrayBufferViewImpl(((global::haxe.io.Bytes) (bytes) ), ((int) (pos1) ), (length).@value)) );
		}
		
		
	}
}


