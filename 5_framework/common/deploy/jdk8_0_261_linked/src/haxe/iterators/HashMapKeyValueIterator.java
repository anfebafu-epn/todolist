// Generated by Haxe 4.2.2
package haxe.iterators;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class HashMapKeyValueIterator<K, V> extends haxe.lang.HxObject
{
	public HashMapKeyValueIterator(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public HashMapKeyValueIterator(haxe.ds._HashMap.HashMapData<K, V> map)
	{
		//line 9 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		haxe.iterators.HashMapKeyValueIterator.__hx_ctor_haxe_iterators_HashMapKeyValueIterator(((haxe.iterators.HashMapKeyValueIterator<K, V>) (this) ), ((haxe.ds._HashMap.HashMapData<K, V>) (map) ));
		//line 9 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		java.lang.Object __temp_expr1 = ((java.lang.Object) (null) );
	}
	
	
	protected static <K_c, V_c> void __hx_ctor_haxe_iterators_HashMapKeyValueIterator(haxe.iterators.HashMapKeyValueIterator<K_c, V_c> __hx_this, haxe.ds._HashMap.HashMapData<K_c, V_c> map)
	{
		//line 10 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		__hx_this.map = map;
		//line 11 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		__hx_this.keys = ((java.lang.Object) (new haxe.ds._IntMap.IntMapValueIterator<K_c>(((haxe.ds.IntMap<K_c>) (((haxe.ds._HashMap.HashMapData<K_c, V_c>) (map) ).keys) ))) );
	}
	
	
	public haxe.ds._HashMap.HashMapData<K, V> map;
	
	public java.lang.Object keys;
	
	public final boolean hasNext()
	{
		//line 18 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(this.keys, "hasNext", null)) ));
	}
	
	
	public final java.lang.Object next()
	{
		//line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		K key = ((K) (haxe.lang.Runtime.callField(this.keys, "next", null)) );
		//line 26 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		{
			//line 26 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			java.lang.Object __temp_odecl1 = ((haxe.ds._HashMap.HashMapData<K, V>) (this.map) ).values.get(((int) (((java.lang.Object) (key) ).hashCode()) ));
			//line 26 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"key", "value"}, new java.lang.Object[]{key, __temp_odecl1}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		{
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case 3288564:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("keys")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							this.keys = ((java.lang.Object) (value) );
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return value;
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		{
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case 3288564:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("keys")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							this.keys = ((java.lang.Object) (value) );
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return value;
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
					case 107868:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("map")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							this.map = ((haxe.ds._HashMap.HashMapData<K, V>) (value) );
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return value;
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		{
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case 3377907:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("next")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "next")) );
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
					case 107868:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("map")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return this.map;
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
					case 696759469:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("hasNext")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hasNext")) );
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
					case 3288564:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("keys")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return this.keys;
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		{
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case 3288564:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("keys")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return ((double) (haxe.lang.Runtime.toDouble(this.keys)) );
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		{
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case 3377907:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("next")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return this.next();
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
					case 696759469:
					{
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						if (field.equals("hasNext")) 
						{
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
							return this.hasNext();
						}
						
						//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		baseArr.push("keys");
		//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		baseArr.push("map");
		//line 5 "C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\HashMapKeyValueIterator.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


