// Generated by Haxe 4.2.2
package haxe.rtti;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class XmlParser_sortFields_73__Fun extends haxe.lang.Function
{
	public XmlParser_sortFields_73__Fun()
	{
		//line 73 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		super(2, 1);
	}
	
	
	public static haxe.rtti.XmlParser_sortFields_73__Fun __hx_current;
	
	@Override public double __hx_invoke2_f(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2)
	{
		//line 73 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object f2 = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((java.lang.Object) (__fn_float2) )) : (((java.lang.Object) (__fn_dyn2) )) );
		//line 73 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object f1 = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((java.lang.Object) (__fn_float1) )) : (((java.lang.Object) (__fn_dyn1) )) );
		//line 74 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		boolean v1 = haxe.rtti.TypeApi.isVar(((haxe.rtti.CType) (haxe.lang.Runtime.getField(f1, "type", true)) ));
		//line 75 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		boolean v2 = haxe.rtti.TypeApi.isVar(((haxe.rtti.CType) (haxe.lang.Runtime.getField(f2, "type", true)) ));
		//line 76 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( v1 &&  ! (v2)  )) 
		{
			//line 77 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return ((double) (-1) );
		}
		
		//line 78 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( v2 &&  ! (v1)  )) 
		{
			//line 79 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return ((double) (1) );
		}
		
		//line 80 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f1, "name", true)), "new")) 
		{
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return ((double) (-1) );
		}
		
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f2, "name", true)), "new")) 
		{
			//line 83 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return ((double) (1) );
		}
		
		//line 84 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f1, "name", true)).compareTo(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f2, "name", true))) > 0 )) 
		{
			//line 85 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return ((double) (1) );
		}
		
		//line 86 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return ((double) (-1) );
	}
	
	
}


