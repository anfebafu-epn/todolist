// Generated by Haxe 4.2.2
package haxe.rtti;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class XmlParser extends haxe.lang.HxObject
{
	public XmlParser(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public XmlParser()
	{
		//line 39 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.rtti.XmlParser.__hx_ctor_haxe_rtti_XmlParser(this);
	}
	
	
	protected static void __hx_ctor_haxe_rtti_XmlParser(haxe.rtti.XmlParser __hx_this)
	{
		//line 118 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		__hx_this.newField = ( (( haxe.rtti.XmlParser___hx_ctor_haxe_rtti_XmlParser_118__Fun.__hx_current != null )) ? (haxe.rtti.XmlParser___hx_ctor_haxe_rtti_XmlParser_118__Fun.__hx_current) : (haxe.rtti.XmlParser___hx_ctor_haxe_rtti_XmlParser_118__Fun.__hx_current = ((haxe.rtti.XmlParser___hx_ctor_haxe_rtti_XmlParser_118__Fun) (new haxe.rtti.XmlParser___hx_ctor_haxe_rtti_XmlParser_118__Fun()) )) );
		//line 40 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 40 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			__hx_this.root = new haxe.root.Array<haxe.rtti.TypeTree>();
		}
		
	}
	
	
	public haxe.root.Array<haxe.rtti.TypeTree> root;
	
	public java.lang.String curplatform;
	
	public void sort(haxe.root.Array<haxe.rtti.TypeTree> l)
	{
		//line 44 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( l == null )) 
		{
			//line 45 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			l = this.root;
		}
		
		//line 46 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		l.sort(( (( haxe.rtti.XmlParser_sort_46__Fun.__hx_current != null )) ? (haxe.rtti.XmlParser_sort_46__Fun.__hx_current) : (haxe.rtti.XmlParser_sort_46__Fun.__hx_current = ((haxe.rtti.XmlParser_sort_46__Fun) (new haxe.rtti.XmlParser_sort_46__Fun()) )) ));
		//line 59 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 59 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g = 0;
			//line 59 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g < l.length ))
			{
				//line 59 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.rtti.TypeTree x = l.__get(_g);
				//line 59 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				 ++ _g;
				//line 60 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				switch (x.index)
				{
					case 0:
					{
						//line 61 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.String _g1 = haxe.lang.Runtime.toString(x.params[0]);
						//line 61 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.String _g2 = haxe.lang.Runtime.toString(x.params[1]);
						//line 61 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						{
							//line 61 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							haxe.root.Array<haxe.rtti.TypeTree> l1 = ((haxe.root.Array<haxe.rtti.TypeTree>) (x.params[2]) );
							//line 62 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.sort(l1);
						}
						
						//line 61 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 1:
					{
						//line 63 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.Object c = x.params[0];
						//line 63 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						{
							//line 64 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.sortFields(((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c, "fields", true)) ));
							//line 65 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.sortFields(((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c, "statics", true)) ));
						}
						
						//line 63 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 2:
					{
						//line 66 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.Object _g3 = x.params[0];
						//line 66 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 3:
					{
						//line 68 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.Object _g4 = x.params[0];
						//line 68 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 4:
					{
						//line 67 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.Object _g5 = x.params[0];
						//line 67 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
				}
				
			}
			
		}
		
	}
	
	
	public void sortFields(haxe.root.Array<java.lang.Object> a)
	{
		//line 73 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		a.sort(( (( haxe.rtti.XmlParser_sortFields_73__Fun.__hx_current != null )) ? (haxe.rtti.XmlParser_sortFields_73__Fun.__hx_current) : (haxe.rtti.XmlParser_sortFields_73__Fun.__hx_current = ((haxe.rtti.XmlParser_sortFields_73__Fun) (new haxe.rtti.XmlParser_sortFields_73__Fun()) )) ));
	}
	
	
	public void process(haxe.root.Xml x, java.lang.String platform)
	{
		//line 91 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		this.curplatform = platform;
		//line 92 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ( x.nodeType != haxe.root.Xml.Document ) && ( x.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 92 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid nodeType " + _Xml.XmlType_Impl_.toString(x.nodeType) ))) );
		}
		
		//line 92 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Xml this1 = x;
		//line 92 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		this.xroot(((haxe.root.Xml) (this1) ));
	}
	
	
	public boolean mergeRights(java.lang.Object f1, java.lang.Object f2)
	{
		//line 97 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ( ( ( ((haxe.rtti.Rights) (haxe.lang.Runtime.getField(f1, "get", true)) ) == haxe.rtti.Rights.RInline ) && ( ((haxe.rtti.Rights) (haxe.lang.Runtime.getField(f1, "set", true)) ) == haxe.rtti.Rights.RNo ) ) && ( ((haxe.rtti.Rights) (haxe.lang.Runtime.getField(f2, "get", true)) ) == haxe.rtti.Rights.RNormal ) ) && ( ((haxe.rtti.Rights) (haxe.lang.Runtime.getField(f2, "set", true)) ) == haxe.rtti.Rights.RMethod ) )) 
		{
			//line 98 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.rtti.Rights __temp_expr1 = ((haxe.rtti.Rights) (haxe.lang.Runtime.setField(f1, "get", haxe.rtti.Rights.RNormal)) );
			//line 99 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.rtti.Rights __temp_expr2 = ((haxe.rtti.Rights) (haxe.lang.Runtime.setField(f1, "set", haxe.rtti.Rights.RMethod)) );
			//line 100 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return true;
		}
		
		//line 102 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.root.Type.enumEq(((haxe.rtti.Rights) (haxe.lang.Runtime.getField(f1, "get", true)) ), ((haxe.rtti.Rights) (haxe.lang.Runtime.getField(f2, "get", true)) ))) ))) 
		{
			//line 102 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.root.Type.enumEq(((haxe.rtti.Rights) (haxe.lang.Runtime.getField(f1, "set", true)) ), ((haxe.rtti.Rights) (haxe.lang.Runtime.getField(f2, "set", true)) ))) ));
		}
		else
		{
			//line 102 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return false;
		}
		
	}
	
	
	public boolean mergeDoc(java.lang.Object f1, java.lang.Object f2)
	{
		//line 106 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f1, "doc", true)) == null )) 
		{
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_expr2 = haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(f1, "doc", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f2, "doc", true))));
		}
		else
		{
			//line 108 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f2, "doc", true)) == null )) 
			{
				//line 109 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.String __temp_expr1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(f2, "doc", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f1, "doc", true))));
			}
			
		}
		
		//line 110 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return true;
	}
	
	
	public boolean mergeFields(java.lang.Object f, java.lang.Object f2)
	{
		//line 114 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if ( ! (haxe.rtti.TypeApi.fieldEq(f, f2)) ) 
		{
			//line 115 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( ( haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f, "name", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f2, "name", true))) && (( this.mergeRights(f, f2) || this.mergeRights(f2, f) )) ) && this.mergeDoc(f, f2) )) 
			{
				//line 115 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				return haxe.rtti.TypeApi.fieldEq(f, f2);
			}
			else
			{
				//line 115 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				return false;
			}
			
		}
		else
		{
			//line 114 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return true;
		}
		
	}
	
	
	public haxe.lang.Function newField;
	
	public boolean mergeClasses(java.lang.Object c, java.lang.Object c2)
	{
		//line 122 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(c, "isInterface", true)) )) != haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(c2, "isInterface", true)) )) )) 
		{
			//line 123 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return false;
		}
		
		//line 124 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( this.curplatform != null )) 
		{
			//line 125 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(c, "platforms", true)) ).push(this.curplatform);
		}
		
		//line 126 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(c, "isExtern", true)) )) != haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(c2, "isExtern", true)) )) )) 
		{
			//line 127 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_expr1 = haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.setField(c, "isExtern", false)) ));
		}
		
		//line 129 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 129 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g = 0;
			//line 129 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.Object> _g1 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c2, "fields", true)) );
			//line 129 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g < _g1.length ))
			{
				//line 129 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.Object f2 = _g1.__get(_g);
				//line 129 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				 ++ _g;
				//line 130 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.Object found = null;
				//line 131 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 131 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					int _g2 = 0;
					//line 131 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					haxe.root.Array<java.lang.Object> _g3 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c, "fields", true)) );
					//line 131 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					while (( _g2 < _g3.length ))
					{
						//line 131 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.Object f = _g3.__get(_g2);
						//line 131 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						 ++ _g2;
						//line 132 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (this.mergeFields(f, f2)) 
						{
							//line 133 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							found = f;
							//line 134 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							break;
						}
						
					}
					
				}
				
				//line 136 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (( found == null )) 
				{
					//line 137 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					this.newField.__hx_invoke2_o(0.0, c, 0.0, f2);
					//line 138 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c, "fields", true)) ).push(f2);
				}
				else
				{
					//line 139 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( this.curplatform != null )) 
					{
						//line 140 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(found, "platforms", true)) ).push(this.curplatform);
					}
					
				}
				
			}
			
		}
		
		//line 142 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g4 = 0;
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.Object> _g5 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c2, "statics", true)) );
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g4 < _g5.length ))
			{
				//line 142 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.Object f21 = _g5.__get(_g4);
				//line 142 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				 ++ _g4;
				//line 143 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.Object found1 = null;
				//line 144 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 144 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					int _g6 = 0;
					//line 144 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					haxe.root.Array<java.lang.Object> _g7 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c, "statics", true)) );
					//line 144 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					while (( _g6 < _g7.length ))
					{
						//line 144 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.Object f1 = _g7.__get(_g6);
						//line 144 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						 ++ _g6;
						//line 145 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (this.mergeFields(f1, f21)) 
						{
							//line 146 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							found1 = f1;
							//line 147 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							break;
						}
						
					}
					
				}
				
				//line 149 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (( found1 == null )) 
				{
					//line 150 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					this.newField.__hx_invoke2_o(0.0, c, 0.0, f21);
					//line 151 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c, "statics", true)) ).push(f21);
				}
				else
				{
					//line 152 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( this.curplatform != null )) 
					{
						//line 153 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(found1, "platforms", true)) ).push(this.curplatform);
					}
					
				}
				
			}
			
		}
		
		//line 155 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return true;
	}
	
	
	public boolean mergeEnums(java.lang.Object e, java.lang.Object e2)
	{
		//line 159 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(e, "isExtern", true)) )) != haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(e2, "isExtern", true)) )) )) 
		{
			//line 160 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return false;
		}
		
		//line 161 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( this.curplatform != null )) 
		{
			//line 162 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(e, "platforms", true)) ).push(this.curplatform);
		}
		
		//line 163 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 163 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g = 0;
			//line 163 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.Object> _g1 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(e2, "constructors", true)) );
			//line 163 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g < _g1.length ))
			{
				//line 163 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.Object c2 = _g1.__get(_g);
				//line 163 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				 ++ _g;
				//line 164 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.Object found = null;
				//line 165 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 165 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					int _g2 = 0;
					//line 165 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					haxe.root.Array<java.lang.Object> _g3 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(e, "constructors", true)) );
					//line 165 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					while (( _g2 < _g3.length ))
					{
						//line 165 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.Object c = _g3.__get(_g2);
						//line 165 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						 ++ _g2;
						//line 166 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (haxe.rtti.TypeApi.constructorEq(c, c2)) 
						{
							//line 167 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							found = c;
							//line 168 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							break;
						}
						
					}
					
				}
				
				//line 170 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (( found == null )) 
				{
					//line 171 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(e, "constructors", true)) ).push(c2);
				}
				else
				{
					//line 172 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( this.curplatform != null )) 
					{
						//line 173 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(found, "platforms", true)) ).push(this.curplatform);
					}
					
				}
				
			}
			
		}
		
		//line 175 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return true;
	}
	
	
	public boolean mergeTypedefs(java.lang.Object t, java.lang.Object t2)
	{
		//line 179 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( this.curplatform == null )) 
		{
			//line 180 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return false;
		}
		
		//line 181 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(t, "platforms", true)) ).push(this.curplatform);
		//line 182 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		((haxe.ds.StringMap<haxe.rtti.CType>) (((haxe.IMap<java.lang.String, haxe.rtti.CType>) (haxe.lang.Runtime.getField(t, "types", true)) )) ).set(this.curplatform, ((haxe.rtti.CType) (haxe.lang.Runtime.getField(t2, "type", true)) ));
		//line 183 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return true;
	}
	
	
	public boolean mergeAbstracts(java.lang.Object a, java.lang.Object a2)
	{
		//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( this.curplatform == null )) 
		{
			//line 188 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return false;
		}
		
		//line 189 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a, "to", true)) ).length != ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a2, "to", true)) ).length ) || ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a, "from", true)) ).length != ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a2, "from", true)) ).length ) )) 
		{
			//line 190 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return false;
		}
		
		//line 191 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 191 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g = 0;
			//line 191 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g1 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a, "to", true)) ).length;
			//line 191 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g < _g1 ))
			{
				//line 191 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				int i = _g++;
				//line 192 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if ( ! (haxe.rtti.TypeApi.typeEq(((haxe.rtti.CType) (haxe.lang.Runtime.getField(((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a, "to", true)) ).__get(i), "t", true)) ), ((haxe.rtti.CType) (haxe.lang.Runtime.getField(((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a2, "to", true)) ).__get(i), "t", true)) ))) ) 
				{
					//line 193 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					return false;
				}
				
			}
			
		}
		
		//line 194 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 194 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g2 = 0;
			//line 194 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g3 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a, "from", true)) ).length;
			//line 194 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g2 < _g3 ))
			{
				//line 194 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				int i1 = _g2++;
				//line 195 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if ( ! (haxe.rtti.TypeApi.typeEq(((haxe.rtti.CType) (haxe.lang.Runtime.getField(((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a, "from", true)) ).__get(i1), "t", true)) ), ((haxe.rtti.CType) (haxe.lang.Runtime.getField(((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(a2, "from", true)) ).__get(i1), "t", true)) ))) ) 
				{
					//line 196 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					return false;
				}
				
			}
			
		}
		
		//line 197 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ! (( haxe.lang.Runtime.getField(a2, "impl", true) == null )) )) 
		{
			//line 198 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			this.mergeClasses(haxe.lang.Runtime.getField(a, "impl", true), haxe.lang.Runtime.getField(a2, "impl", true));
		}
		
		//line 199 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(a, "platforms", true)) ).push(this.curplatform);
		//line 200 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return true;
	}
	
	
	public void merge(haxe.rtti.TypeTree t)
	{
		//line 204 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object inf = haxe.rtti.TypeApi.typeInfos(t);
		//line 205 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.String> pack = haxe.lang.StringExt.split(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "path", true)), ".");
		//line 206 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<haxe.rtti.TypeTree> cur = this.root;
		//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.String> curpack = new haxe.root.Array<java.lang.String>();
		//line 208 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String __temp_expr1 = haxe.lang.Runtime.toString(pack.pop());
		//line 209 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 209 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g = 0;
			//line 209 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g < pack.length ))
			{
				//line 209 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.String p = pack.__get(_g);
				//line 209 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				 ++ _g;
				//line 210 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				boolean found = false;
				//line 211 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 211 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					int _g1 = 0;
					//line 211 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					label2:
					while (( _g1 < cur.length ))
					{
						//line 211 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						haxe.rtti.TypeTree pk = cur.__get(_g1);
						//line 211 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						 ++ _g1;
						//line 212 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						switch (pk.index)
						{
							case 0:
							{
								//line 213 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.String _g2 = haxe.lang.Runtime.toString(pk.params[1]);
								//line 213 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								{
									//line 213 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									java.lang.String pname = haxe.lang.Runtime.toString(pk.params[0]);
									//line 213 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									haxe.root.Array<haxe.rtti.TypeTree> subs = ((haxe.root.Array<haxe.rtti.TypeTree>) (pk.params[2]) );
									//line 214 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (haxe.lang.Runtime.valEq(pname, p)) 
									{
										//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										found = true;
										//line 216 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										cur = subs;
										//line 217 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break label2;
									}
									
								}
								
								//line 213 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								break;
							}
							
							
							default:
							{
								//line 219 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								break;
							}
							
						}
						
					}
					;
				}
				
				//line 221 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				curpack.push(p);
				//line 222 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if ( ! (found) ) 
				{
					//line 223 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					haxe.root.Array<haxe.rtti.TypeTree> pk1 = new haxe.root.Array<haxe.rtti.TypeTree>();
					//line 224 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					cur.push(haxe.rtti.TypeTree.TPackage(p, curpack.join("."), pk1));
					//line 225 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					cur = pk1;
				}
				
			}
			
		}
		
		//line 228 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 228 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g3 = 0;
			//line 228 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g3 < cur.length ))
			{
				//line 228 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.rtti.TypeTree ct = cur.__get(_g3);
				//line 228 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				 ++ _g3;
				//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				boolean tmp = false;
				//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				switch (ct.index)
				{
					case 0:
					{
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.String _g4 = haxe.lang.Runtime.toString(ct.params[0]);
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.String _g5 = haxe.lang.Runtime.toString(ct.params[1]);
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						haxe.root.Array<haxe.rtti.TypeTree> _g6 = ((haxe.root.Array<haxe.rtti.TypeTree>) (ct.params[2]) );
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						tmp = true;
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					default:
					{
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						tmp = false;
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
				}
				
				//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (tmp) 
				{
					//line 230 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					continue;
				}
				
				//line 231 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.Object tinf = haxe.rtti.TypeApi.typeInfos(ct);
				//line 234 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "path", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "path", true)))) 
				{
					//line 235 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					boolean sameType = true;
					//line 236 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "doc", true)) == null ) != (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "doc", true)) == null )) )) 
					{
						//line 237 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "doc", true)) == null )) 
						{
							//line 238 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							java.lang.String __temp_expr3 = haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(inf, "doc", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "doc", true))));
						}
						else
						{
							//line 240 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							java.lang.String __temp_expr2 = haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(tinf, "doc", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "doc", true))));
						}
						
					}
					
					//line 242 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "path", true)), "haxe._Int64.NativeInt64")) 
					{
						//line 243 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						continue;
					}
					
					//line 244 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ( haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "module", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "module", true))) && haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "doc", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "doc", true))) ) && ( haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(tinf, "isPrivate", true)) )) == haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(inf, "isPrivate", true)) )) ) )) 
					{
						//line 245 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						switch (ct.index)
						{
							case 0:
							{
								//line 277 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.String _g7 = haxe.lang.Runtime.toString(ct.params[0]);
								//line 277 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.String _g8 = haxe.lang.Runtime.toString(ct.params[1]);
								//line 277 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								haxe.root.Array<haxe.rtti.TypeTree> _g9 = ((haxe.root.Array<haxe.rtti.TypeTree>) (ct.params[2]) );
								//line 278 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								sameType = false;
								//line 277 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								break;
							}
							
							
							case 1:
							{
								//line 246 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.Object c = ct.params[0];
								//line 247 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								switch (t.index)
								{
									case 1:
									{
										//line 248 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										java.lang.Object c2 = t.params[0];
										//line 249 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										if (this.mergeClasses(c, c2)) 
										{
											//line 250 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											return ;
										}
										
										//line 248 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break;
									}
									
									
									default:
									{
										//line 252 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										sameType = false;
										//line 252 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break;
									}
									
								}
								
								//line 246 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								break;
							}
							
							
							case 2:
							{
								//line 254 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.Object e = ct.params[0];
								//line 255 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								switch (t.index)
								{
									case 2:
									{
										//line 256 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										java.lang.Object e2 = t.params[0];
										//line 257 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										if (this.mergeEnums(e, e2)) 
										{
											//line 258 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											return ;
										}
										
										//line 256 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break;
									}
									
									
									default:
									{
										//line 260 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										sameType = false;
										//line 260 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break;
									}
									
								}
								
								//line 254 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								break;
							}
							
							
							case 3:
							{
								//line 262 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.Object td = ct.params[0];
								//line 263 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								switch (t.index)
								{
									case 3:
									{
										//line 264 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										java.lang.Object td2 = t.params[0];
										//line 265 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										if (this.mergeTypedefs(td, td2)) 
										{
											//line 266 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											return ;
										}
										
										//line 264 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break;
									}
									
									
									default:
									{
										//line 267 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break;
									}
									
								}
								
								//line 262 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								break;
							}
							
							
							case 4:
							{
								//line 269 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.Object a = ct.params[0];
								//line 270 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								switch (t.index)
								{
									case 4:
									{
										//line 271 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										java.lang.Object a2 = t.params[0];
										//line 272 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										if (this.mergeAbstracts(a, a2)) 
										{
											//line 273 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											return ;
										}
										
										//line 271 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break;
									}
									
									
									default:
									{
										//line 275 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										sameType = false;
										//line 275 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										break;
									}
									
								}
								
								//line 269 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								break;
							}
							
							
						}
						
					}
					
					//line 281 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.String msg = ( ( ! (haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "module", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "module", true)))) ) ? (( ( ( "module " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "module", true)) ) + " should be " ) + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "module", true)) )) : (( ( ! (haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "doc", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(inf, "doc", true)))) ) ? ("documentation is different") : (( (( haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(tinf, "isPrivate", true)) )) != haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(inf, "isPrivate", true)) )) )) ? ("private flag is different") : (( ( ! (sameType) ) ? ("type kind is different") : ("could not merge definition") )) )) )) );
					//line 289 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( ( ( ( ( ( ( ( "Incompatibilities between " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tinf, "path", true)) ) + " in " ) + ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(tinf, "platforms", true)) ).join(",") ) + " and " ) + this.curplatform ) + " (" ) + msg ) + ")" ))) );
				}
				
			}
			
		}
		
		//line 292 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		cur.push(t);
	}
	
	
	public java.lang.String mkPath(java.lang.String p)
	{
		//line 296 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return p;
	}
	
	
	public haxe.root.Array<java.lang.String> mkTypeParams(java.lang.String p)
	{
		//line 300 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.String> pl = haxe.lang.StringExt.split(p, ":");
		//line 301 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (haxe.lang.Runtime.valEq(pl.__get(0), "")) 
		{
			//line 302 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return new haxe.root.Array<java.lang.String>();
		}
		
		//line 303 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return pl;
	}
	
	
	public haxe.rtti.Rights mkRights(java.lang.String r)
	{
		//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_svar1 = (r);
			//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_executeDef2 = true;
			//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( __temp_svar1 != null )) 
			{
				//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				switch (__temp_svar1.hashCode())
				{
					case 2124767295:
					{
						//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar1.equals("dynamic")) 
						{
							//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef2 = false;
							//line 310 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.Rights.RDynamic;
						}
						
						//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 3392903:
					{
						//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar1.equals("null")) 
						{
							//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef2 = false;
							//line 308 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.Rights.RNo;
						}
						
						//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1183997287:
					{
						//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar1.equals("inline")) 
						{
							//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef2 = false;
							//line 311 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.Rights.RInline;
						}
						
						//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1077554975:
					{
						//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar1.equals("method")) 
						{
							//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef2 = false;
							//line 309 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.Rights.RMethod;
						}
						
						//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 312 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (__temp_executeDef2) 
			{
				//line 312 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				return haxe.rtti.Rights.RCall(r);
			}
			else
			{
				//line 312 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	public java.lang.Object xerror(haxe.root.Xml c)
	{
		//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String tmp = null;
		//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ((haxe.root.Xml) (c) ).nodeType == haxe.root.Xml.Document )) 
		{
			//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			tmp = "Document";
		}
		else
		{
			//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( ((haxe.root.Xml) (c) ).nodeType != haxe.root.Xml.Element )) 
			{
				//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c) ).nodeType) ))) );
			}
			
			//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			tmp = ((haxe.root.Xml) (c) ).nodeName;
		}
		
		//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid " + tmp ))) );
	}
	
	
	public void xroot(haxe.root.Xml x)
	{
		//line 321 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object c = ((haxe.root.Xml) (x) ).elements();
		//line 321 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(c, "hasNext", null)) )))
		{
			//line 321 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Xml c1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(c, "next", null)) );
			//line 322 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			this.merge(this.processElement(c1));
		}
		
	}
	
	
	public haxe.rtti.TypeTree processElement(haxe.root.Xml x)
	{
		//line 326 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ( x.nodeType != haxe.root.Xml.Document ) && ( x.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 326 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid nodeType " + _Xml.XmlType_Impl_.toString(x.nodeType) ))) );
		}
		
		//line 326 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Xml this1 = x;
		//line 326 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Xml c = ((haxe.root.Xml) (this1) );
		//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String _g = null;
		//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ((haxe.root.Xml) (c) ).nodeType == haxe.root.Xml.Document )) 
		{
			//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			_g = "Document";
		}
		else
		{
			//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( ((haxe.root.Xml) (c) ).nodeType != haxe.root.Xml.Element )) 
			{
				//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c) ).nodeType) ))) );
			}
			
			//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			_g = ((haxe.root.Xml) (c) ).nodeName;
		}
		
		//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_svar1 = (_g);
			//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_executeDef2 = true;
			//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( __temp_svar1 != null )) 
			{
				//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				switch (__temp_svar1.hashCode())
				{
					case 1732898850:
					{
						//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar1.equals("abstract")) 
						{
							//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef2 = false;
							//line 331 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.TypeTree.TAbstractdecl(this.xabstract(c));
						}
						
						//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -853085557:
					{
						//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar1.equals("typedef")) 
						{
							//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef2 = false;
							//line 330 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.TypeTree.TTypedecl(this.xtypedef(c));
						}
						
						//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 94742904:
					{
						//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar1.equals("class")) 
						{
							//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef2 = false;
							//line 328 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.TypeTree.TClassdecl(this.xclass(c));
						}
						
						//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 3118337:
					{
						//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar1.equals("enum")) 
						{
							//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef2 = false;
							//line 329 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.TypeTree.TEnumdecl(this.xenum(c));
						}
						
						//line 327 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 332 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (__temp_executeDef2) 
			{
				//line 332 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				return ((haxe.rtti.TypeTree) (this.xerror(c)) );
			}
			else
			{
				//line 332 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	public haxe.root.Array<java.lang.Object> xmeta(haxe.root.Xml x)
	{
		//line 337 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> ml = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 338 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 338 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			int _g = 0;
			//line 338 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<haxe.root.Xml> _g1 = haxe.xml._Access.NodeListAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "m");
			//line 338 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (( _g < _g1.length ))
			{
				//line 338 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml m = _g1.__get(_g);
				//line 338 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				 ++ _g;
				//line 339 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Array<java.lang.String> pl = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
				//line 340 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 340 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					int _g2 = 0;
					//line 340 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					haxe.root.Array<haxe.root.Xml> _g3 = haxe.xml._Access.NodeListAccess_Impl_.resolve(((haxe.root.Xml) (m) ), "e");
					//line 340 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					while (( _g2 < _g3.length ))
					{
						//line 340 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						haxe.root.Xml p = _g3.__get(_g2);
						//line 340 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						 ++ _g2;
						//line 341 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						pl.push(haxe.xml._Access.Access_Impl_.get_innerHTML(p));
					}
					
				}
				
				//line 342 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.Object __temp_stmt2 = null;
				//line 342 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 342 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.String __temp_odecl1 = haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (m) ), "n");
					//line 342 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					__temp_stmt2 = new haxe.lang.DynamicObject(new java.lang.String[]{"name", "params"}, new java.lang.Object[]{__temp_odecl1, pl}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 342 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				ml.push(__temp_stmt2);
			}
			
		}
		
		//line 344 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return ml;
	}
	
	
	public haxe.root.Array<java.lang.Object> xoverloads(haxe.root.Xml x)
	{
		//line 348 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> l = new haxe.root.Array<java.lang.Object>();
		//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object m = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
			//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(m, "hasNext", null)) )))
			{
				//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml m1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(m, "next", null)) );
				//line 350 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				l.push(this.xclassfield(m1, null));
			}
			
		}
		
		//line 352 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return l;
	}
	
	
	public java.lang.Object xpath(haxe.root.Xml x)
	{
		//line 356 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String path = this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path"));
		//line 357 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<haxe.rtti.CType> params = new haxe.root.Array<haxe.rtti.CType>();
		//line 358 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 358 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object c = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
			//line 358 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(c, "hasNext", null)) )))
			{
				//line 358 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml c1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(c, "next", null)) );
				//line 359 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				params.push(this.xtype(c1));
			}
			
		}
		
		//line 360 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return new haxe.lang.DynamicObject(new java.lang.String[]{"params", "path"}, new java.lang.Object[]{params, path}, new java.lang.String[]{}, new double[]{});
	}
	
	
	public java.lang.Object xclass(haxe.root.Xml x)
	{
		//line 367 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object csuper = null;
		//line 368 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String doc = null;
		//line 369 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.rtti.CType tdynamic = null;
		//line 370 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> interfaces = new haxe.root.Array<java.lang.Object>();
		//line 371 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> fields = new haxe.root.Array<java.lang.Object>();
		//line 372 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> statics = new haxe.root.Array<java.lang.Object>();
		//line 373 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> meta = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 374 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		boolean isInterface = ((haxe.root.Xml) (x) ).exists("interface");
		//line 375 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 375 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object c = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
			//line 375 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(c, "hasNext", null)) )))
			{
				//line 375 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml c1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(c, "next", null)) );
				//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.String _g = null;
					//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ((haxe.root.Xml) (c1) ).nodeType == haxe.root.Xml.Document )) 
					{
						//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						_g = "Document";
					}
					else
					{
						//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( ((haxe.root.Xml) (c1) ).nodeType != haxe.root.Xml.Element )) 
						{
							//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c1) ).nodeType) ))) );
						}
						
						//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						_g = ((haxe.root.Xml) (c1) ).nodeName;
					}
					
					//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					{
						//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.String __temp_svar9 = (_g);
						//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						boolean __temp_executeDef10 = true;
						//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( __temp_svar9 != null )) 
						{
							//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							switch (__temp_svar9.hashCode())
							{
								case -1305664359:
								{
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar9.equals("extends")) 
									{
										//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef10 = false;
										//line 380 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										if (isInterface) 
										{
											//line 381 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											interfaces.push(this.xpath(c1));
										}
										else
										{
											//line 383 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											csuper = this.xpath(c1);
										}
										
									}
									
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case 3347973:
								{
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar9.equals("meta")) 
									{
										//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef10 = false;
										//line 390 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										meta = this.xmeta(c1);
									}
									
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case 288895775:
								{
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar9.equals("haxe_doc")) 
									{
										//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef10 = false;
										//line 378 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										doc = haxe.xml._Access.Access_Impl_.get_innerData(c1);
									}
									
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case -915384400:
								{
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar9.equals("implements")) 
									{
										//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef10 = false;
										//line 386 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										interfaces.push(this.xpath(c1));
									}
									
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case -1753955674:
								{
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar9.equals("haxe_dynamic")) 
									{
										//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef10 = false;
										//line 388 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										haxe.root.Xml x1 = ((haxe.root.Xml) (c1) ).firstElement();
										//line 388 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										if (( ( x1.nodeType != haxe.root.Xml.Document ) && ( x1.nodeType != haxe.root.Xml.Element ) )) 
										{
											//line 388 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid nodeType " + _Xml.XmlType_Impl_.toString(x1.nodeType) ))) );
										}
										
										//line 388 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										haxe.root.Xml this1 = x1;
										//line 388 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										tdynamic = this.xtype(((haxe.root.Xml) (this1) ));
									}
									
									//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
							}
							
						}
						
						//line 392 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_executeDef10) 
						{
							//line 392 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							if (((haxe.root.Xml) (c1) ).exists("static")) 
							{
								//line 393 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								statics.push(this.xclassfield(c1, null));
							}
							else
							{
								//line 395 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								fields.push(this.xclassfield(c1, null));
							}
							
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 397 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 398 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl1 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "file")) ? (haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "file")) : (null) );
			//line 399 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl2 = this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path"));
			//line 400 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl3 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "module")) ? (this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "module"))) : (null) );
			//line 402 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl4 = ((haxe.root.Xml) (x) ).exists("private");
			//line 403 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl5 = ((haxe.root.Xml) (x) ).exists("extern");
			//line 404 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl6 = ((haxe.root.Xml) (x) ).exists("final");
			//line 406 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl7 = this.mkTypeParams(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "params"));
			//line 412 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl8 = this.defplat();
			//line 397 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"doc", "fields", "file", "interfaces", "isExtern", "isFinal", "isInterface", "isPrivate", "meta", "module", "params", "path", "platforms", "statics", "superClass", "tdynamic"}, new java.lang.Object[]{doc, fields, __temp_odecl1, interfaces, __temp_odecl5, __temp_odecl6, isInterface, __temp_odecl4, meta, __temp_odecl3, __temp_odecl7, __temp_odecl2, __temp_odecl8, statics, csuper, tdynamic}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	public java.lang.Object xclassfield(haxe.root.Xml x, java.lang.Object defPublic)
	{
		//line 417 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object defPublic1 = ( (haxe.lang.Runtime.eq(defPublic, null)) ? (((java.lang.Object) (false) )) : (defPublic) );
		//line 418 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object e = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
		//line 419 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.rtti.CType t = this.xtype(((haxe.root.Xml) (haxe.lang.Runtime.callField(e, "next", null)) ));
		//line 420 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String doc = null;
		//line 421 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> meta = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 422 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> overloads = null;
		//line 423 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 423 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object c = e;
			//line 423 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(c, "hasNext", null)) )))
			{
				//line 423 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml c1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(c, "next", null)) );
				//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.String _g = null;
					//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ((haxe.root.Xml) (c1) ).nodeType == haxe.root.Xml.Document )) 
					{
						//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						_g = "Document";
					}
					else
					{
						//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( ((haxe.root.Xml) (c1) ).nodeType != haxe.root.Xml.Element )) 
						{
							//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c1) ).nodeType) ))) );
						}
						
						//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						_g = ((haxe.root.Xml) (c1) ).nodeName;
					}
					
					//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					{
						//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.String __temp_svar10 = (_g);
						//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						boolean __temp_executeDef11 = true;
						//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( __temp_svar10 != null )) 
						{
							//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							switch (__temp_svar10.hashCode())
							{
								case 288895775:
								{
									//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar10.equals("haxe_doc")) 
									{
										//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef11 = false;
										//line 426 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										doc = haxe.xml._Access.Access_Impl_.get_innerData(c1);
									}
									
									//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case -755335175:
								{
									//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar10.equals("overloads")) 
									{
										//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef11 = false;
										//line 430 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										overloads = this.xoverloads(c1);
									}
									
									//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case 3347973:
								{
									//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar10.equals("meta")) 
									{
										//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef11 = false;
										//line 428 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										meta = this.xmeta(c1);
									}
									
									//line 424 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
							}
							
						}
						
						//line 432 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_executeDef11) 
						{
							//line 432 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.xerror(c1);
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String tmp = null;
		//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ((haxe.root.Xml) (x) ).nodeType == haxe.root.Xml.Document )) 
		{
			//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			tmp = "Document";
		}
		else
		{
			//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( ((haxe.root.Xml) (x) ).nodeType != haxe.root.Xml.Element )) 
			{
				//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (x) ).nodeType) ))) );
			}
			
			//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			tmp = ((haxe.root.Xml) (x) ).nodeName;
		}
		
		//line 434 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl1 = ( haxe.lang.Runtime.toBool(((java.lang.Boolean) (((haxe.root.Xml) (x) ).exists("public")) )) || haxe.lang.Runtime.toBool(((java.lang.Boolean) (defPublic1) )) );
			//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl2 = ((haxe.root.Xml) (x) ).exists("final");
			//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl3 = ((haxe.root.Xml) (x) ).exists("override");
			//line 436 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object __temp_odecl4 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "line")) ? (haxe.root.Std.parseInt(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "line"))) : (null) );
			//line 436 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.rtti.Rights __temp_odecl5 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "get")) ? (this.mkRights(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "get"))) : (haxe.rtti.Rights.RNormal) );
			//line 436 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.rtti.Rights __temp_odecl6 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "set")) ? (this.mkRights(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "set"))) : (haxe.rtti.Rights.RNormal) );
			//line 439 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl7 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "params")) ? (this.mkTypeParams(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "params"))) : (new haxe.root.Array<java.lang.String>(new java.lang.String[]{})) );
			//line 439 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl8 = this.defplat();
			//line 439 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl9 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "expr")) ? (haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "expr")) : (null) );
			//line 434 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"doc", "expr", "get", "isFinal", "isOverride", "isPublic", "line", "meta", "name", "overloads", "params", "platforms", "set", "type"}, new java.lang.Object[]{doc, __temp_odecl9, __temp_odecl5, __temp_odecl2, __temp_odecl3, __temp_odecl1, __temp_odecl4, meta, tmp, overloads, __temp_odecl7, __temp_odecl8, __temp_odecl6, t}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	public java.lang.Object xenum(haxe.root.Xml x)
	{
		//line 447 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> cl = new haxe.root.Array<java.lang.Object>();
		//line 448 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String doc = null;
		//line 449 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> meta = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 450 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 450 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object c = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
			//line 450 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(c, "hasNext", null)) )))
			{
				//line 450 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml c1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(c, "next", null)) );
				//line 451 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.String tmp = null;
				//line 451 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (( ((haxe.root.Xml) (c1) ).nodeType == haxe.root.Xml.Document )) 
				{
					//line 451 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					tmp = "Document";
				}
				else
				{
					//line 451 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ((haxe.root.Xml) (c1) ).nodeType != haxe.root.Xml.Element )) 
					{
						//line 451 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c1) ).nodeType) ))) );
					}
					
					//line 451 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					tmp = ((haxe.root.Xml) (c1) ).nodeName;
				}
				
				//line 451 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (haxe.lang.Runtime.valEq(tmp, "haxe_doc")) 
				{
					//line 452 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					doc = haxe.xml._Access.Access_Impl_.get_innerData(c1);
				}
				else
				{
					//line 453 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.String tmp1 = null;
					//line 453 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ((haxe.root.Xml) (c1) ).nodeType == haxe.root.Xml.Document )) 
					{
						//line 453 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						tmp1 = "Document";
					}
					else
					{
						//line 453 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( ((haxe.root.Xml) (c1) ).nodeType != haxe.root.Xml.Element )) 
						{
							//line 453 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c1) ).nodeType) ))) );
						}
						
						//line 453 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						tmp1 = ((haxe.root.Xml) (c1) ).nodeName;
					}
					
					//line 453 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (haxe.lang.Runtime.valEq(tmp1, "meta")) 
					{
						//line 454 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						meta = this.xmeta(c1);
					}
					else
					{
						//line 456 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						cl.push(this.xenumfield(c1));
					}
					
				}
				
			}
			
		}
		
		//line 457 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 458 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl1 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "file")) ? (haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "file")) : (null) );
			//line 459 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl2 = this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path"));
			//line 460 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl3 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "module")) ? (this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "module"))) : (null) );
			//line 462 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl4 = ((haxe.root.Xml) (x) ).exists("private");
			//line 463 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl5 = ((haxe.root.Xml) (x) ).exists("extern");
			//line 464 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl6 = this.mkTypeParams(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "params"));
			//line 466 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl7 = this.defplat();
			//line 457 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"constructors", "doc", "file", "isExtern", "isPrivate", "meta", "module", "params", "path", "platforms"}, new java.lang.Object[]{cl, doc, __temp_odecl1, __temp_odecl5, __temp_odecl4, meta, __temp_odecl3, __temp_odecl6, __temp_odecl2, __temp_odecl7}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	public java.lang.Object xenumfield(haxe.root.Xml x)
	{
		//line 472 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> args = null;
		//line 473 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object docElements = ((haxe.root.Xml) (x) ).elementsNamed("haxe_doc");
		//line 474 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Xml xdoc = ( (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(docElements, "hasNext", null)) ))) ? (((haxe.root.Xml) (haxe.lang.Runtime.callField(docElements, "next", null)) )) : (null) );
		//line 475 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> meta = ( (haxe.xml._Access.HasNodeAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "meta")) ? (this.xmeta(haxe.xml._Access.NodeAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "meta"))) : (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{})) );
		//line 476 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "a")) 
		{
			//line 477 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> names = haxe.lang.StringExt.split(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "a"), ":");
			//line 478 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object elts = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
			//line 479 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			args = new haxe.root.Array<java.lang.Object>();
			//line 480 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			{
				//line 480 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				int _g = 0;
				//line 480 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				while (( _g < names.length ))
				{
					//line 480 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.String c = names.__get(_g);
					//line 480 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					 ++ _g;
					//line 481 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					boolean opt = false;
					//line 482 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.charAt(c, 0), "?")) 
					{
						//line 483 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						opt = true;
						//line 484 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						c = haxe.lang.StringExt.substr(c, 1, null);
					}
					
					//line 486 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.Object __temp_stmt3 = null;
					//line 486 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					{
						//line 489 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						haxe.rtti.CType __temp_odecl1 = this.xtype(((haxe.root.Xml) (haxe.lang.Runtime.callField(elts, "next", null)) ));
						//line 486 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						__temp_stmt3 = new haxe.lang.DynamicObject(new java.lang.String[]{"name", "opt", "t"}, new java.lang.Object[]{c, opt, __temp_odecl1}, new java.lang.String[]{}, new double[]{});
					}
					
					//line 486 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					args.push(__temp_stmt3);
				}
				
			}
			
		}
		
		//line 494 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String tmp = null;
		//line 494 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ((haxe.root.Xml) (x) ).nodeType == haxe.root.Xml.Document )) 
		{
			//line 494 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			tmp = "Document";
		}
		else
		{
			//line 494 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( ((haxe.root.Xml) (x) ).nodeType != haxe.root.Xml.Element )) 
			{
				//line 494 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (x) ).nodeType) ))) );
			}
			
			//line 494 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			tmp = ((haxe.root.Xml) (x) ).nodeName;
		}
		
		//line 496 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String tmp1 = null;
		//line 496 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( xdoc == null )) 
		{
			//line 496 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			tmp1 = null;
		}
		else
		{
			//line 496 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( ( xdoc.nodeType != haxe.root.Xml.Document ) && ( xdoc.nodeType != haxe.root.Xml.Element ) )) 
			{
				//line 496 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid nodeType " + _Xml.XmlType_Impl_.toString(xdoc.nodeType) ))) );
			}
			
			//line 496 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Xml this1 = xdoc;
			//line 496 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			tmp1 = haxe.xml._Access.Access_Impl_.get_innerData(((haxe.root.Xml) (this1) ));
		}
		
		//line 493 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 498 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl2 = this.defplat();
			//line 493 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"args", "doc", "meta", "name", "platforms"}, new java.lang.Object[]{args, tmp1, meta, tmp, __temp_odecl2}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	public java.lang.Object xabstract(haxe.root.Xml x)
	{
		//line 503 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String doc = null;
		//line 503 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.Object impl = null;
		//line 503 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.rtti.CType athis = null;
		//line 504 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> meta = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 504 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> to = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 504 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> from = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 505 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 505 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object c = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
			//line 505 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(c, "hasNext", null)) )))
			{
				//line 505 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml c1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(c, "next", null)) );
				//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				{
					//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.String _g = null;
					//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ((haxe.root.Xml) (c1) ).nodeType == haxe.root.Xml.Document )) 
					{
						//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						_g = "Document";
					}
					else
					{
						//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( ((haxe.root.Xml) (c1) ).nodeType != haxe.root.Xml.Element )) 
						{
							//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c1) ).nodeType) ))) );
						}
						
						//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						_g = ((haxe.root.Xml) (c1) ).nodeName;
					}
					
					//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					{
						//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						java.lang.String __temp_svar13 = (_g);
						//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						boolean __temp_executeDef14 = true;
						//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( __temp_svar13 != null )) 
						{
							//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							switch (__temp_svar13.hashCode())
							{
								case 3151786:
								{
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar13.equals("from")) 
									{
										//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef14 = false;
										//line 515 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										java.lang.Object t = ((java.lang.Object) (((haxe.root.Xml) (c1) ).elements()) );
										//line 515 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(t, "hasNext", null)) )))
										{
											//line 515 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											haxe.root.Xml t1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(t, "next", null)) );
											//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											haxe.root.Xml x1 = ((haxe.root.Xml) (t1) ).firstElement();
											//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											if (( ( x1.nodeType != haxe.root.Xml.Document ) && ( x1.nodeType != haxe.root.Xml.Element ) )) 
											{
												//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
												throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid nodeType " + _Xml.XmlType_Impl_.toString(x1.nodeType) ))) );
											}
											
											//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											haxe.root.Xml this1 = x1;
											//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											java.lang.Object __temp_stmt11 = null;
											//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											{
												//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
												haxe.rtti.CType __temp_odecl1 = this.xtype(((haxe.root.Xml) (this1) ));
												//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
												java.lang.String __temp_odecl2 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (t1) ), "field")) ? (haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (t1) ), "field")) : (null) );
												//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
												__temp_stmt11 = new haxe.lang.DynamicObject(new java.lang.String[]{"field", "t"}, new java.lang.Object[]{__temp_odecl2, __temp_odecl1}, new java.lang.String[]{}, new double[]{});
											}
											
											//line 516 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											from.push(__temp_stmt11);
										}
										
									}
									
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case 3707:
								{
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar13.equals("to")) 
									{
										//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef14 = false;
										//line 512 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										java.lang.Object t2 = ((java.lang.Object) (((haxe.root.Xml) (c1) ).elements()) );
										//line 512 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(t2, "hasNext", null)) )))
										{
											//line 512 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											haxe.root.Xml t3 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(t2, "next", null)) );
											//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											haxe.root.Xml x3 = ((haxe.root.Xml) (t3) ).firstElement();
											//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											if (( ( x3.nodeType != haxe.root.Xml.Document ) && ( x3.nodeType != haxe.root.Xml.Element ) )) 
											{
												//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
												throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid nodeType " + _Xml.XmlType_Impl_.toString(x3.nodeType) ))) );
											}
											
											//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											haxe.root.Xml this3 = x3;
											//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											java.lang.Object __temp_stmt12 = null;
											//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											{
												//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
												haxe.rtti.CType __temp_odecl3 = this.xtype(((haxe.root.Xml) (this3) ));
												//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
												java.lang.String __temp_odecl4 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (t3) ), "field")) ? (haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (t3) ), "field")) : (null) );
												//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
												__temp_stmt12 = new haxe.lang.DynamicObject(new java.lang.String[]{"field", "t"}, new java.lang.Object[]{__temp_odecl4, __temp_odecl3}, new java.lang.String[]{}, new double[]{});
											}
											
											//line 513 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											to.push(__temp_stmt12);
										}
										
									}
									
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case 288895775:
								{
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar13.equals("haxe_doc")) 
									{
										//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef14 = false;
										//line 508 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										doc = haxe.xml._Access.Access_Impl_.get_innerData(c1);
									}
									
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case 3559070:
								{
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar13.equals("this")) 
									{
										//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef14 = false;
										//line 520 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										haxe.root.Xml x2 = ((haxe.root.Xml) (c1) ).firstElement();
										//line 520 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										if (( ( x2.nodeType != haxe.root.Xml.Document ) && ( x2.nodeType != haxe.root.Xml.Element ) )) 
										{
											//line 520 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
											throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid nodeType " + _Xml.XmlType_Impl_.toString(x2.nodeType) ))) );
										}
										
										//line 520 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										haxe.root.Xml this2 = x2;
										//line 520 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										athis = this.xtype(((haxe.root.Xml) (this2) ));
									}
									
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case 3236384:
								{
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar13.equals("impl")) 
									{
										//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef14 = false;
										//line 518 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										impl = this.xclass(haxe.xml._Access.NodeAccess_Impl_.resolve(((haxe.root.Xml) (c1) ), "class"));
									}
									
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
								case 3347973:
								{
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (__temp_svar13.equals("meta")) 
									{
										//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_executeDef14 = false;
										//line 510 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										meta = this.xmeta(c1);
									}
									
									//line 506 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									break;
								}
								
								
							}
							
						}
						
						//line 522 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_executeDef14) 
						{
							//line 522 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.xerror(c1);
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 524 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 525 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl5 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "file")) ? (haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "file")) : (null) );
			//line 526 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl6 = this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path"));
			//line 527 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl7 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "module")) ? (this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "module"))) : (null) );
			//line 529 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl8 = ((haxe.root.Xml) (x) ).exists("private");
			//line 530 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl9 = this.mkTypeParams(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "params"));
			//line 531 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl10 = this.defplat();
			//line 524 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"athis", "doc", "file", "from", "impl", "isPrivate", "meta", "module", "params", "path", "platforms", "to"}, new java.lang.Object[]{athis, doc, __temp_odecl5, from, impl, __temp_odecl8, meta, __temp_odecl7, __temp_odecl9, __temp_odecl6, __temp_odecl10, to}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	public java.lang.Object xtypedef(haxe.root.Xml x)
	{
		//line 541 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String doc = null;
		//line 542 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.rtti.CType t = null;
		//line 543 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.Object> meta = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 544 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 544 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object c = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
			//line 544 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(c, "hasNext", null)) )))
			{
				//line 544 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml c1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(c, "next", null)) );
				//line 545 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				java.lang.String tmp = null;
				//line 545 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (( ((haxe.root.Xml) (c1) ).nodeType == haxe.root.Xml.Document )) 
				{
					//line 545 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					tmp = "Document";
				}
				else
				{
					//line 545 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ((haxe.root.Xml) (c1) ).nodeType != haxe.root.Xml.Element )) 
					{
						//line 545 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c1) ).nodeType) ))) );
					}
					
					//line 545 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					tmp = ((haxe.root.Xml) (c1) ).nodeName;
				}
				
				//line 545 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				if (haxe.lang.Runtime.valEq(tmp, "haxe_doc")) 
				{
					//line 546 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					doc = haxe.xml._Access.Access_Impl_.get_innerData(c1);
				}
				else
				{
					//line 547 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					java.lang.String tmp1 = null;
					//line 547 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (( ((haxe.root.Xml) (c1) ).nodeType == haxe.root.Xml.Document )) 
					{
						//line 547 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						tmp1 = "Document";
					}
					else
					{
						//line 547 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (( ((haxe.root.Xml) (c1) ).nodeType != haxe.root.Xml.Element )) 
						{
							//line 547 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (c1) ).nodeType) ))) );
						}
						
						//line 547 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						tmp1 = ((haxe.root.Xml) (c1) ).nodeName;
					}
					
					//line 547 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
					if (haxe.lang.Runtime.valEq(tmp1, "meta")) 
					{
						//line 548 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						meta = this.xmeta(c1);
					}
					else
					{
						//line 550 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						t = this.xtype(c1);
					}
					
				}
				
			}
			
		}
		
		//line 551 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.ds.StringMap<haxe.rtti.CType> types = new haxe.ds.StringMap<haxe.rtti.CType>();
		//line 552 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( this.curplatform != null )) 
		{
			//line 553 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			types.set(this.curplatform, t);
		}
		
		//line 554 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 555 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl1 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "file")) ? (haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "file")) : (null) );
			//line 556 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl2 = this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path"));
			//line 557 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_odecl3 = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "module")) ? (this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "module"))) : (null) );
			//line 559 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_odecl4 = ((haxe.root.Xml) (x) ).exists("private");
			//line 560 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl5 = this.mkTypeParams(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "params"));
			//line 563 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			haxe.root.Array<java.lang.String> __temp_odecl6 = this.defplat();
			//line 554 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"doc", "file", "isPrivate", "meta", "module", "params", "path", "platforms", "type", "types"}, new java.lang.Object[]{doc, __temp_odecl1, __temp_odecl4, meta, __temp_odecl3, __temp_odecl5, __temp_odecl2, __temp_odecl6, t, ((haxe.ds.StringMap<haxe.rtti.CType>) (types) )}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	public haxe.rtti.CType xtype(haxe.root.Xml x)
	{
		//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		java.lang.String _g = null;
		//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( ((haxe.root.Xml) (x) ).nodeType == haxe.root.Xml.Document )) 
		{
			//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			_g = "Document";
		}
		else
		{
			//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( ((haxe.root.Xml) (x) ).nodeType != haxe.root.Xml.Element )) 
			{
				//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(((haxe.root.Xml) (x) ).nodeType) ))) );
			}
			
			//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			_g = ((haxe.root.Xml) (x) ).nodeName;
		}
		
		//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.String __temp_svar4 = (_g);
			//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_executeDef5 = true;
			//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( __temp_svar4 != null )) 
			{
				//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				switch (__temp_svar4.hashCode())
				{
					case 97:
					{
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar4.equals("a")) 
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef5 = false;
							//line 606 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							haxe.root.Array<java.lang.Object> fields = new haxe.root.Array<java.lang.Object>();
							//line 607 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							{
								//line 607 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.Object f = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
								//line 607 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(f, "hasNext", null)) )))
								{
									//line 607 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									haxe.root.Xml f1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(f, "next", null)) );
									//line 608 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									java.lang.Object f2 = this.xclassfield(f1, true);
									//line 609 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									haxe.root.Array<java.lang.String> __temp_expr2 = ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.setField(f2, "platforms", new haxe.root.Array<java.lang.String>())) );
									//line 610 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									fields.push(f2);
								}
								
							}
							
							//line 612 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.CType.CAnonymous(fields);
						}
						
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 120:
					{
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar4.equals("x")) 
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef5 = false;
							//line 579 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.CType.CAbstract(this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path")), this.xtypeparams(x));
						}
						
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 99:
					{
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar4.equals("c")) 
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef5 = false;
							//line 575 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.CType.CClass(this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path")), this.xtypeparams(x));
						}
						
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -284840886:
					{
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar4.equals("unknown")) 
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef5 = false;
							//line 571 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.CType.CUnknown;
						}
						
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 100:
					{
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar4.equals("d")) 
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef5 = false;
							//line 614 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							haxe.rtti.CType t = null;
							//line 615 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							haxe.root.Xml tx = ((haxe.root.Xml) (x) ).firstElement();
							//line 616 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							if (( tx != null )) 
							{
								//line 617 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								if (( ( tx.nodeType != haxe.root.Xml.Document ) && ( tx.nodeType != haxe.root.Xml.Element ) )) 
								{
									//line 617 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Invalid nodeType " + _Xml.XmlType_Impl_.toString(tx.nodeType) ))) );
								}
								
								//line 617 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								haxe.root.Xml this1 = tx;
								//line 617 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								t = this.xtype(((haxe.root.Xml) (this1) ));
							}
							
							//line 618 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.CType.CDynamic(t);
						}
						
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 116:
					{
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar4.equals("t")) 
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef5 = false;
							//line 577 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.CType.CTypedef(this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path")), this.xtypeparams(x));
						}
						
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 101:
					{
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar4.equals("e")) 
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef5 = false;
							//line 573 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.CType.CEnum(this.mkPath(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "path")), this.xtypeparams(x));
						}
						
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 102:
					{
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (__temp_svar4.equals("f")) 
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef5 = false;
							//line 581 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							haxe.root.Array<java.lang.Object> args = new haxe.root.Array<java.lang.Object>();
							//line 582 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							haxe.root.Array<java.lang.String> aname = haxe.lang.StringExt.split(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "a"), ":");
							//line 583 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							int eargs_current = 0;
							//line 583 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							haxe.root.Array<java.lang.String> eargs_array = aname;
							//line 584 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							haxe.iterators.ArrayIterator<java.lang.String> evalues = ( (haxe.xml._Access.HasAttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "v")) ? (new haxe.iterators.ArrayIterator<java.lang.String>(((haxe.root.Array<java.lang.String>) (haxe.lang.StringExt.split(haxe.xml._Access.AttribAccess_Impl_.resolve(((haxe.root.Xml) (x) ), "v"), ":")) ))) : (null) );
							//line 585 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							{
								//line 585 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								java.lang.Object e = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
								//line 585 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
								while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(e, "hasNext", null)) )))
								{
									//line 585 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									haxe.root.Xml e1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(e, "next", null)) );
									//line 586 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									boolean opt = false;
									//line 587 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									java.lang.String a = ( (( eargs_current < eargs_array.length )) ? (eargs_array.__get(eargs_current++)) : (null) );
									//line 588 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (( a == null )) 
									{
										//line 589 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										a = "";
									}
									
									//line 590 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.charAt(a, 0), "?")) 
									{
										//line 591 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										opt = true;
										//line 592 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										a = haxe.lang.StringExt.substr(a, 1, null);
									}
									
									//line 594 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									java.lang.String v = ( (( ( evalues == null ) || ( evalues.current >= evalues.array.length ) )) ? (null) : (evalues.array.__get(evalues.current++)) );
									//line 595 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									java.lang.Object __temp_stmt3 = null;
									//line 595 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									{
										//line 598 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										haxe.rtti.CType __temp_odecl1 = this.xtype(e1);
										//line 595 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
										__temp_stmt3 = new haxe.lang.DynamicObject(new java.lang.String[]{"name", "opt", "t", "value"}, new java.lang.Object[]{a, opt, __temp_odecl1, ( (haxe.lang.Runtime.valEq(v, "")) ? (null) : (v) )}, new java.lang.String[]{}, new double[]{});
									}
									
									//line 595 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
									args.push(__temp_stmt3);
								}
								
							}
							
							//line 602 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							java.lang.Object ret = args.__get(( args.length - 1 ));
							//line 603 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							args.remove(ret);
							//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return haxe.rtti.CType.CFunction(args, ((haxe.rtti.CType) (haxe.lang.Runtime.getField(ret, "t", true)) ));
						}
						
						//line 569 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 620 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (__temp_executeDef5) 
			{
				//line 620 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				return ((haxe.rtti.CType) (this.xerror(x)) );
			}
			else
			{
				//line 620 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	public haxe.root.Array<haxe.rtti.CType> xtypeparams(haxe.root.Xml x)
	{
		//line 625 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<haxe.rtti.CType> p = new haxe.root.Array<haxe.rtti.CType>();
		//line 626 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 626 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			java.lang.Object c = ((java.lang.Object) (((haxe.root.Xml) (x) ).elements()) );
			//line 626 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(c, "hasNext", null)) )))
			{
				//line 626 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				haxe.root.Xml c1 = ((haxe.root.Xml) (haxe.lang.Runtime.callField(c, "next", null)) );
				//line 627 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				p.push(this.xtype(c1));
			}
			
		}
		
		//line 628 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return p;
	}
	
	
	public haxe.root.Array<java.lang.String> defplat()
	{
		//line 632 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		haxe.root.Array<java.lang.String> l = new haxe.root.Array<java.lang.String>();
		//line 633 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		if (( this.curplatform != null )) 
		{
			//line 634 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			l.push(this.curplatform);
		}
		
		//line 635 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return l;
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_executeDef1 = true;
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( field != null )) 
			{
				//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				switch (field.hashCode())
				{
					case 1353911098:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("newField")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.newField = ((haxe.lang.Function) (value) );
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return value;
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 3506402:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("root")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.root = ((haxe.root.Array<haxe.rtti.TypeTree>) (value) );
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return value;
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1338463565:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("curplatform")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.curplatform = haxe.lang.Runtime.toString(value);
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return value;
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (__temp_executeDef1) 
			{
				//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_executeDef1 = true;
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( field != null )) 
			{
				//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				switch (field.hashCode())
				{
					case 1545241780:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("defplat")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "defplat")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 3506402:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("root")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.root;
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1495826504:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xtypeparams")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xtypeparams")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1338463565:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("curplatform")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.curplatform;
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 114398130:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xtype")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xtype")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 3536286:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("sort")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sort")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 2125724435:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xtypedef")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xtypedef")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1095945737:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("sortFields")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sortFields")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -413271910:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xabstract")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xabstract")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -309518737:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("process")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "process")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1858729183:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xenumfield")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xenumfield")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 153552943:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeRights")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mergeRights")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 113940857:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xenum")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xenum")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -501719584:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeDoc")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mergeDoc")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1169953542:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xclassfield")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xclassfield")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -190053103:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeFields")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mergeFields")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -764726272:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xclass")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xclass")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 1353911098:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("newField")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.newField;
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 114256029:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xpath")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xpath")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 118193358:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeClasses")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mergeClasses")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 1432848001:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xoverloads")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xoverloads")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1115268550:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeEnums")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mergeEnums")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 114170493:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xmeta")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xmeta")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1999261792:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeTypedefs")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mergeTypedefs")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1747759731:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("processElement")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "processElement")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -190853319:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeAbstracts")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mergeAbstracts")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 114328922:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xroot")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xroot")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 103785528:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("merge")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "merge")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -762684272:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xerror")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "xerror")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1073092893:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mkPath")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mkPath")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -385856235:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mkRights")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mkRights")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1642816098:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mkTypeParams")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mkTypeParams")) );
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (__temp_executeDef1) 
			{
				//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		{
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			boolean __temp_executeDef1 = true;
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (( field != null )) 
			{
				//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				switch (field.hashCode())
				{
					case 1545241780:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("defplat")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.defplat();
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 3536286:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("sort")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.sort(((haxe.root.Array<haxe.rtti.TypeTree>) (( (( dynargs.length > 0 )) ? (dynargs[0]) : (null) )) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1495826504:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xtypeparams")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xtypeparams(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1095945737:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("sortFields")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.sortFields(((haxe.root.Array<java.lang.Object>) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 114398130:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xtype")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xtype(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -309518737:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("process")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.process(((haxe.root.Xml) (dynargs[0]) ), haxe.lang.Runtime.toString(dynargs[1]));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 2125724435:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xtypedef")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xtypedef(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 153552943:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeRights")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mergeRights(dynargs[0], dynargs[1]);
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -413271910:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xabstract")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xabstract(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -501719584:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeDoc")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mergeDoc(dynargs[0], dynargs[1]);
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1858729183:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xenumfield")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xenumfield(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -190053103:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeFields")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mergeFields(dynargs[0], dynargs[1]);
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 113940857:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xenum")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xenum(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 118193358:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeClasses")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mergeClasses(dynargs[0], dynargs[1]);
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1169953542:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xclassfield")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xclassfield(((haxe.root.Xml) (dynargs[0]) ), ( (( dynargs.length > 1 )) ? (dynargs[1]) : (null) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1115268550:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeEnums")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mergeEnums(dynargs[0], dynargs[1]);
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -764726272:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xclass")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xclass(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1999261792:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeTypedefs")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mergeTypedefs(dynargs[0], dynargs[1]);
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 114256029:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xpath")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xpath(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -190853319:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mergeAbstracts")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mergeAbstracts(dynargs[0], dynargs[1]);
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 1432848001:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xoverloads")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xoverloads(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 103785528:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("merge")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.merge(((haxe.rtti.TypeTree) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 114170493:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xmeta")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xmeta(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1073092893:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mkPath")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mkPath(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1747759731:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("processElement")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.processElement(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -1642816098:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mkTypeParams")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mkTypeParams(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case 114328922:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xroot")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							this.xroot(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -385856235:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("mkRights")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.mkRights(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
					case -762684272:
					{
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						if (field.equals("xerror")) 
						{
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							__temp_executeDef1 = false;
							//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
							return this.xerror(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
			if (__temp_executeDef1) 
			{
				//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		baseArr.push("newField");
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		baseArr.push("curplatform");
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		baseArr.push("root");
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\XmlParser.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


