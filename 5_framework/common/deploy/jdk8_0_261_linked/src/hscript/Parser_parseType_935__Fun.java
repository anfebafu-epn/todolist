// Generated by Haxe 4.2.2
package hscript;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Parser_parseType_935__Fun extends haxe.lang.Function
{
	public Parser_parseType_935__Fun(hscript.Parser _gthis)
	{
		//line 935 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
		super(1, 0);
		//line 935 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
		this._gthis = _gthis;
	}
	
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 935 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
		haxe.root.Array<hscript.CType> args = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array<hscript.CType>) (((java.lang.Object) (__fn_float1) )) )) : (((haxe.root.Array<hscript.CType>) (__fn_dyn1) )) );
		//line 936 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
		{
			//line 936 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
			hscript.Token _g = this._gthis.token();
			//line 936 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
			switch (_g.index)
			{
				case 3:
				{
					//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
					{
						//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
						java.lang.String __temp_svar1 = (haxe.lang.Runtime.toString(_g.params[0]));
						//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
						boolean __temp_executeDef2 = true;
						//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
						if (( __temp_svar1 != null )) 
						{
							//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
							switch (__temp_svar1.hashCode())
							{
								case 1457:
								{
									//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
									if (__temp_svar1.equals("->")) 
									{
										//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
										__temp_executeDef2 = false;
									}
									
									//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
									break;
								}
								
								
							}
							
						}
						
						//line 938 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
						if (__temp_executeDef2) 
						{
							//line 938 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
							hscript.Token t = _g;
							//line 938 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
							this._gthis.unexpected(t);
						}
						
					}
					
					//line 937 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
					break;
				}
				
				
				default:
				{
					//line 938 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
					hscript.Token t1 = _g;
					//line 938 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
					this._gthis.unexpected(t1);
					//line 938 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
					break;
				}
				
			}
			
		}
		
		//line 941 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Parser.hx"
		return hscript.CType.CTFun(args, this._gthis.parseType());
	}
	
	
	public hscript.Parser _gthis;
	
}


