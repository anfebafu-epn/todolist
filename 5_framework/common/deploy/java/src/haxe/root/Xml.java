// Generated by Haxe 4.2.2
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Xml extends haxe.lang.HxObject
{
	static
	{
		//line 86 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml.Element = ((int) (0) );
		//line 91 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml.PCData = ((int) (1) );
		//line 96 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml.CData = ((int) (2) );
		//line 101 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml.Comment = ((int) (3) );
		//line 106 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml.DocType = ((int) (4) );
		//line 111 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml.ProcessingInstruction = ((int) (5) );
		//line 116 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml.Document = ((int) (6) );
	}
	
	public Xml(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Xml(int nodeType)
	{
		//line 397 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml.__hx_ctor__Xml(this, nodeType);
	}
	
	
	protected static void __hx_ctor__Xml(haxe.root.Xml __hx_this, int nodeType)
	{
		//line 398 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		__hx_this.nodeType = nodeType;
		//line 399 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		__hx_this.children = new haxe.root.Array<haxe.root.Xml>(new haxe.root.Xml[]{});
		//line 400 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		__hx_this.attributeMap = new haxe.ds.StringMap<java.lang.String>();
	}
	
	
	public static int Element;
	
	public static int PCData;
	
	public static int CData;
	
	public static int Comment;
	
	public static int DocType;
	
	public static int ProcessingInstruction;
	
	public static int Document;
	
	public static haxe.root.Xml parse(java.lang.String str)
	{
		//line 122 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return haxe.xml.Parser.parse(str, null);
	}
	
	
	public static haxe.root.Xml createElement(java.lang.String name)
	{
		//line 183 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml xml = new haxe.root.Xml(((int) (haxe.root.Xml.Element) ));
		//line 184 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 184 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( xml.nodeType != haxe.root.Xml.Element )) 
			{
				//line 184 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(xml.nodeType) ))) );
			}
			
			//line 184 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			xml.nodeName = name;
		}
		
		//line 185 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return xml;
	}
	
	
	public static haxe.root.Xml createPCData(java.lang.String data)
	{
		//line 192 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml xml = new haxe.root.Xml(((int) (haxe.root.Xml.PCData) ));
		//line 193 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 193 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( ( xml.nodeType == haxe.root.Xml.Document ) || ( xml.nodeType == haxe.root.Xml.Element ) )) 
			{
				//line 193 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, unexpected " + _Xml.XmlType_Impl_.toString(xml.nodeType) ))) );
			}
			
			//line 193 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			xml.nodeValue = data;
		}
		
		//line 194 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return xml;
	}
	
	
	public static haxe.root.Xml createCData(java.lang.String data)
	{
		//line 201 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml xml = new haxe.root.Xml(((int) (haxe.root.Xml.CData) ));
		//line 202 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 202 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( ( xml.nodeType == haxe.root.Xml.Document ) || ( xml.nodeType == haxe.root.Xml.Element ) )) 
			{
				//line 202 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, unexpected " + _Xml.XmlType_Impl_.toString(xml.nodeType) ))) );
			}
			
			//line 202 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			xml.nodeValue = data;
		}
		
		//line 203 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return xml;
	}
	
	
	public static haxe.root.Xml createComment(java.lang.String data)
	{
		//line 210 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml xml = new haxe.root.Xml(((int) (haxe.root.Xml.Comment) ));
		//line 211 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 211 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( ( xml.nodeType == haxe.root.Xml.Document ) || ( xml.nodeType == haxe.root.Xml.Element ) )) 
			{
				//line 211 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, unexpected " + _Xml.XmlType_Impl_.toString(xml.nodeType) ))) );
			}
			
			//line 211 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			xml.nodeValue = data;
		}
		
		//line 212 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return xml;
	}
	
	
	public static haxe.root.Xml createDocType(java.lang.String data)
	{
		//line 219 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml xml = new haxe.root.Xml(((int) (haxe.root.Xml.DocType) ));
		//line 220 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 220 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( ( xml.nodeType == haxe.root.Xml.Document ) || ( xml.nodeType == haxe.root.Xml.Element ) )) 
			{
				//line 220 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, unexpected " + _Xml.XmlType_Impl_.toString(xml.nodeType) ))) );
			}
			
			//line 220 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			xml.nodeValue = data;
		}
		
		//line 221 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return xml;
	}
	
	
	public static haxe.root.Xml createProcessingInstruction(java.lang.String data)
	{
		//line 228 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Xml xml = new haxe.root.Xml(((int) (haxe.root.Xml.ProcessingInstruction) ));
		//line 229 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 229 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( ( xml.nodeType == haxe.root.Xml.Document ) || ( xml.nodeType == haxe.root.Xml.Element ) )) 
			{
				//line 229 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, unexpected " + _Xml.XmlType_Impl_.toString(xml.nodeType) ))) );
			}
			
			//line 229 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			xml.nodeValue = data;
		}
		
		//line 230 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return xml;
	}
	
	
	public static haxe.root.Xml createDocument()
	{
		//line 237 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return new haxe.root.Xml(((int) (haxe.root.Xml.Document) ));
	}
	
	
	public int nodeType;
	
	public java.lang.String nodeName;
	
	public java.lang.String nodeValue;
	
	public haxe.root.Xml parent;
	
	public haxe.root.Array<haxe.root.Xml> children;
	
	public haxe.ds.StringMap<java.lang.String> attributeMap;
	
	public final java.lang.String get_nodeName()
	{
		//line 152 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( this.nodeType != haxe.root.Xml.Element )) 
		{
			//line 153 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 155 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return this.nodeName;
	}
	
	
	public final java.lang.String set_nodeName(java.lang.String v)
	{
		//line 159 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( this.nodeType != haxe.root.Xml.Element )) 
		{
			//line 160 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 162 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return this.nodeName = v;
	}
	
	
	public final java.lang.String get_nodeValue()
	{
		//line 166 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType == haxe.root.Xml.Document ) || ( this.nodeType == haxe.root.Xml.Element ) )) 
		{
			//line 167 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, unexpected " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 169 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return this.nodeValue;
	}
	
	
	public final java.lang.String set_nodeValue(java.lang.String v)
	{
		//line 173 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType == haxe.root.Xml.Document ) || ( this.nodeType == haxe.root.Xml.Element ) )) 
		{
			//line 174 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, unexpected " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 176 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return this.nodeValue = v;
	}
	
	
	public java.lang.String get(java.lang.String att)
	{
		//line 245 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( this.nodeType != haxe.root.Xml.Element )) 
		{
			//line 246 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 248 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return haxe.lang.Runtime.toString(((haxe.ds.StringMap<java.lang.String>) (((haxe.IMap<java.lang.String, java.lang.String>) (this.attributeMap) )) ).get(att));
	}
	
	
	public void set(java.lang.String att, java.lang.String value)
	{
		//line 256 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( this.nodeType != haxe.root.Xml.Element )) 
		{
			//line 257 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 259 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		((haxe.ds.StringMap<java.lang.String>) (((haxe.IMap<java.lang.String, java.lang.String>) (this.attributeMap) )) ).set(att, value);
	}
	
	
	public void remove(java.lang.String att)
	{
		//line 267 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( this.nodeType != haxe.root.Xml.Element )) 
		{
			//line 268 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 270 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		((haxe.ds.StringMap<java.lang.String>) (((haxe.IMap<java.lang.String, java.lang.String>) (this.attributeMap) )) ).remove(att);
	}
	
	
	public boolean exists(java.lang.String att)
	{
		//line 278 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( this.nodeType != haxe.root.Xml.Element )) 
		{
			//line 279 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 281 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return ((haxe.ds.StringMap<java.lang.String>) (((haxe.IMap<java.lang.String, java.lang.String>) (this.attributeMap) )) ).exists(att);
	}
	
	
	public java.lang.Object attributes()
	{
		//line 288 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( this.nodeType != haxe.root.Xml.Element )) 
		{
			//line 289 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 291 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return ((java.lang.Object) (new haxe.ds._StringMap.StringMapKeyIterator<java.lang.String>(((haxe.ds.StringMap<java.lang.String>) (((haxe.IMap<java.lang.String, java.lang.String>) (this.attributeMap) )) ))) );
	}
	
	
	public final java.lang.Object iterator()
	{
		//line 299 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 299 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 300 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return new haxe.iterators.ArrayIterator<haxe.root.Xml>(((haxe.root.Array<haxe.root.Xml>) (this.children) ));
	}
	
	
	public java.lang.Object elements()
	{
		//line 308 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 308 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Array<haxe.root.Xml> _g = new haxe.root.Array<haxe.root.Xml>(new haxe.root.Xml[]{});
		//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			int _g1 = 0;
			//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			haxe.root.Array<haxe.root.Xml> _g2 = this.children;
			//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			while (( _g1 < _g2.length ))
			{
				//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				haxe.root.Xml child = _g2.__get(_g1);
				//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				 ++ _g1;
				//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				if (( child.nodeType == haxe.root.Xml.Element )) 
				{
					//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
					_g.push(child);
				}
				
			}
			
		}
		
		//line 309 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Array<haxe.root.Xml> ret = _g;
		//line 310 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return new haxe.iterators.ArrayIterator<haxe.root.Xml>(((haxe.root.Array<haxe.root.Xml>) (ret) ));
	}
	
	
	public java.lang.Object elementsNamed(java.lang.String name)
	{
		//line 318 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 318 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 319 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Array<haxe.root.Xml> _g = new haxe.root.Array<haxe.root.Xml>(new haxe.root.Xml[]{});
		//line 320 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 320 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			int _g1 = 0;
			//line 320 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			haxe.root.Array<haxe.root.Xml> _g2 = this.children;
			//line 320 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			while (( _g1 < _g2.length ))
			{
				//line 320 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				haxe.root.Xml child = _g2.__get(_g1);
				//line 320 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				 ++ _g1;
				//line 321 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				boolean tmp = false;
				//line 321 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				if (( child.nodeType == haxe.root.Xml.Element )) 
				{
					//line 321 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
					if (( child.nodeType != haxe.root.Xml.Element )) 
					{
						//line 321 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element but found " + _Xml.XmlType_Impl_.toString(child.nodeType) ))) );
					}
					
					//line 321 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
					tmp = haxe.lang.Runtime.valEq(child.nodeName, name);
				}
				else
				{
					//line 321 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
					tmp = false;
				}
				
				//line 321 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				if (tmp) 
				{
					//line 321 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
					_g.push(child);
				}
				
			}
			
		}
		
		//line 319 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		haxe.root.Array<haxe.root.Xml> ret = _g;
		//line 323 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return new haxe.iterators.ArrayIterator<haxe.root.Xml>(((haxe.root.Array<haxe.root.Xml>) (ret) ));
	}
	
	
	public final haxe.root.Xml firstChild()
	{
		//line 330 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 330 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 331 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return this.children.__get(0);
	}
	
	
	public haxe.root.Xml firstElement()
	{
		//line 338 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 338 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 339 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 339 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			int _g = 0;
			//line 339 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			haxe.root.Array<haxe.root.Xml> _g1 = this.children;
			//line 339 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			while (( _g < _g1.length ))
			{
				//line 339 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				haxe.root.Xml child = _g1.__get(_g);
				//line 339 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				 ++ _g;
				//line 340 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				if (( child.nodeType == haxe.root.Xml.Element )) 
				{
					//line 341 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
					return child;
				}
				
			}
			
		}
		
		//line 344 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return null;
	}
	
	
	public void addChild(haxe.root.Xml x)
	{
		//line 354 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 354 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 355 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( x.parent != null )) 
		{
			//line 356 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			x.parent.removeChild(x);
		}
		
		//line 358 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		this.children.push(x);
		//line 359 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		x.parent = this;
	}
	
	
	public boolean removeChild(haxe.root.Xml x)
	{
		//line 367 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 367 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 368 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (this.children.remove(x)) 
		{
			//line 369 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			x.parent = null;
			//line 370 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			return true;
		}
		
		//line 372 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return false;
	}
	
	
	public void insertChild(haxe.root.Xml x, int pos)
	{
		//line 382 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 382 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
		//line 383 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( x.parent != null )) 
		{
			//line 384 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			x.parent.children.remove(x);
		}
		
		//line 386 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		this.children.insert(pos, x);
		//line 387 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		x.parent = this;
	}
	
	
	@Override public java.lang.String toString()
	{
		//line 394 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return haxe.xml.Printer.print(this, null);
	}
	
	
	public final void ensureElementType()
	{
		//line 404 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		if (( ( this.nodeType != haxe.root.Xml.Document ) && ( this.nodeType != haxe.root.Xml.Element ) )) 
		{
			//line 405 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( "Bad node type, expected Element or Document but found " + _Xml.XmlType_Impl_.toString(this.nodeType) ))) );
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			boolean __temp_executeDef1 = true;
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( field != null )) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				switch (field.hashCode())
				{
					case 1123082332:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("nodeType")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.nodeType = ((int) (value) );
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return value;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (__temp_executeDef1) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			boolean __temp_executeDef1 = true;
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( field != null )) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				switch (field.hashCode())
				{
					case -1016582880:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("attributeMap")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.attributeMap = ((haxe.ds.StringMap<java.lang.String>) (value) );
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return value;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1123082332:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("nodeType")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.nodeType = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return value;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1659526655:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("children")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.children = ((haxe.root.Array<haxe.root.Xml>) (value) );
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return value;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1122880429:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("nodeName")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							if (handleProperties) 
							{
								//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
								this.set_nodeName(haxe.lang.Runtime.toString(value));
								//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
								return value;
							}
							else
							{
								//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
								this.nodeName = haxe.lang.Runtime.toString(value);
								//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
								return value;
							}
							
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -995424086:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("parent")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.parent = ((haxe.root.Xml) (value) );
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return value;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 456942735:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("nodeValue")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							if (handleProperties) 
							{
								//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
								this.set_nodeValue(haxe.lang.Runtime.toString(value));
								//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
								return value;
							}
							else
							{
								//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
								this.nodeValue = haxe.lang.Runtime.toString(value);
								//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
								return value;
							}
							
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (__temp_executeDef1) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			boolean __temp_executeDef1 = true;
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( field != null )) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				switch (field.hashCode())
				{
					case 581164344:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("ensureElementType")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "ensureElementType")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1123082332:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("nodeType")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.nodeType;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1776922004:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("toString")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toString")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1122880429:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("nodeName")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ( (handleProperties) ? (this.get_nodeName()) : (this.nodeName) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -129364509:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("insertChild")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "insertChild")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 456942735:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("nodeValue")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ( (handleProperties) ? (this.get_nodeValue()) : (this.nodeValue) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -319766792:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("removeChild")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "removeChild")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -995424086:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("parent")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.parent;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1262040837:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("addChild")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addChild")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1659526655:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("children")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.children;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1741980116:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("firstElement")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "firstElement")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1016582880:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("attributeMap")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.attributeMap;
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -187015092:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("firstChild")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "firstChild")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -800174474:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("get_nodeName")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_nodeName")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -51566462:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("elementsNamed")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "elementsNamed")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 748818154:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("set_nodeName")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_nodeName")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -8339209:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("elements")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "elements")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 971782886:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("get_nodeValue")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_nodeValue")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1182533742:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("iterator")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "iterator")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1745914098:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("set_nodeValue")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_nodeValue")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 405645655:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("attributes")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "attributes")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 102230:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("get")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1289358244:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("exists")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "exists")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 113762:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("set")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -934610812:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("remove")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "remove")) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (__temp_executeDef1) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			boolean __temp_executeDef1 = true;
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( field != null )) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				switch (field.hashCode())
				{
					case 1123082332:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("nodeType")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return ((double) (this.nodeType) );
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (__temp_executeDef1) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		{
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			boolean __temp_executeDef1 = true;
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (( field != null )) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				switch (field.hashCode())
				{
					case 581164344:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("ensureElementType")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.ensureElementType();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -800174474:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("get_nodeName")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.get_nodeName();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1776922004:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("toString")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.toString();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 748818154:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("set_nodeName")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.set_nodeName(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -129364509:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("insertChild")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.insertChild(((haxe.root.Xml) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 971782886:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("get_nodeValue")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.get_nodeValue();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -319766792:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("removeChild")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.removeChild(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1745914098:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("set_nodeValue")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.set_nodeValue(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1262040837:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("addChild")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.addChild(((haxe.root.Xml) (dynargs[0]) ));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 102230:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("get")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.get(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1741980116:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("firstElement")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.firstElement();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 113762:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("set")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.set(haxe.lang.Runtime.toString(dynargs[0]), haxe.lang.Runtime.toString(dynargs[1]));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -187015092:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("firstChild")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.firstChild();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -934610812:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("remove")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							this.remove(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -51566462:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("elementsNamed")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.elementsNamed(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -1289358244:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("exists")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.exists(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case -8339209:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("elements")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.elements();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 405645655:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("attributes")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.attributes();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
					case 1182533742:
					{
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						if (field.equals("iterator")) 
						{
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							__temp_executeDef1 = false;
							//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
							return this.iterator();
						}
						
						//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
			if (__temp_executeDef1) 
			{
				//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		baseArr.push("attributeMap");
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		baseArr.push("children");
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		baseArr.push("parent");
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		baseArr.push("nodeValue");
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		baseArr.push("nodeName");
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		baseArr.push("nodeType");
		//line 82 "C:\\HaxeToolkit\\haxe\\std\\Xml.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


