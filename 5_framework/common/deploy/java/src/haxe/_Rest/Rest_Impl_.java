// Generated by Haxe 4.2.2
package haxe._Rest;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Rest_Impl_
{
	
	
	public static <T> int get_length(java.lang.Object[] this1)
	{
		//line 16 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return this1.length;
	}
	
	
	public static <T> java.lang.Object[] of(haxe.root.Array<T> array)
	{
		//line 19 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		T[] _native = array.__a;
		//line 20 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.Object[] result = new java.lang.Object[_native.length];
		//line 25 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		{
			//line 25 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
			int _g = 0;
			//line 25 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
			int _g1 = _native.length;
			//line 25 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
			while (( _g < _g1 ))
			{
				//line 25 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
				int i = _g++;
				//line 26 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
				result[i] = ((java.lang.Object) (((java.lang.Object) (_native[i]) )) );
			}
			
		}
		
		//line 28 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.Object[] this1 = result;
		//line 28 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return ((java.lang.Object[]) (this1) );
	}
	
	
	public static <T> java.lang.Object[] _new(java.lang.Object[] a)
	{
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.Object[] this1 = a;
		//line 31 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return ((java.lang.Object[]) (this1) );
	}
	
	
	public static <T> T get(java.lang.Object[] this1, int index)
	{
		//line 35 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return ((T) (((java.lang.Object) (this1[index]) )) );
	}
	
	
	public static <T> haxe.root.Array<T> toArray(java.lang.Object[] this1)
	{
		//line 38 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		haxe.root.Array<T> _g = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 38 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		{
			//line 38 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
			int _g1 = 0;
			//line 38 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
			int _g2 = this1.length;
			//line 38 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
			while (( _g1 < _g2 ))
			{
				//line 38 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
				int i = _g1++;
				//line 38 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
				_g.push(((T) (((java.lang.Object) (this1[i]) )) ));
			}
			
		}
		
		//line 38 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return _g;
	}
	
	
	public static <T> haxe.iterators.RestIterator<T> iterator(java.lang.Object[] this1)
	{
		//line 42 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return new haxe.iterators.RestIterator<T>(((java.lang.Object) (this1) ));
	}
	
	
	public static <T> haxe.iterators.RestKeyValueIterator<T> keyValueIterator(java.lang.Object[] this1)
	{
		//line 45 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return new haxe.iterators.RestKeyValueIterator<T>(((java.lang.Object) (this1) ));
	}
	
	
	public static <T> java.lang.Object[] append(java.lang.Object[] this1, T item)
	{
		//line 48 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.Object[] result = new java.lang.Object[( this1.length + 1 )];
		//line 49 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.System.arraycopy(((java.lang.Object) (this1) ), ((int) (0) ), ((java.lang.Object) (result) ), ((int) (0) ), ((int) (this1.length) ));
		//line 50 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		result[this1.length] = ((java.lang.Object) (((java.lang.Object) (item) )) );
		//line 51 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.Object[] this2 = result;
		//line 51 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return ((java.lang.Object[]) (this2) );
	}
	
	
	public static <T> java.lang.Object[] prepend(java.lang.Object[] this1, T item)
	{
		//line 55 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.Object[] result = new java.lang.Object[( this1.length + 1 )];
		//line 56 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.System.arraycopy(((java.lang.Object) (this1) ), ((int) (0) ), ((java.lang.Object) (result) ), ((int) (1) ), ((int) (this1.length) ));
		//line 57 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		result[0] = ((java.lang.Object) (((java.lang.Object) (item) )) );
		//line 58 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		java.lang.Object[] this2 = result;
		//line 58 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return ((java.lang.Object[]) (this2) );
	}
	
	
	public static <T> java.lang.String toString(java.lang.Object[] this1)
	{
		//line 62 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\Rest.hx"
		return ((haxe.root.Array<T>) (((haxe.root.Array) (haxe._Rest.Rest_Impl_.toArray(((java.lang.Object[]) (this1) ))) )) ).toString();
	}
	
	
}


