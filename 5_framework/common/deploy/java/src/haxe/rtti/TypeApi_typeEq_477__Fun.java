// Generated by Haxe 4.2.2
package haxe.rtti;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TypeApi_typeEq_477__Fun extends haxe.lang.Function
{
	public TypeApi_typeEq_477__Fun()
	{
		//line 478 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\CType.hx"
		super(2, 0);
	}
	
	
	public static haxe.rtti.TypeApi_typeEq_477__Fun __hx_current;
	
	@Override public java.lang.Object __hx_invoke2_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2)
	{
		//line 477 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\CType.hx"
		java.lang.Object b = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((java.lang.Object) (__fn_float2) )) : (((java.lang.Object) (__fn_dyn2) )) );
		//line 477 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\CType.hx"
		java.lang.Object a = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((java.lang.Object) (__fn_float1) )) : (((java.lang.Object) (__fn_dyn1) )) );
		//line 478 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\CType.hx"
		if (( haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(a, "name", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(b, "name", true))) && ( haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(a, "opt", true)) )) == haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(b, "opt", true)) )) ) )) 
		{
			//line 478 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\CType.hx"
			return haxe.rtti.TypeApi.typeEq(((haxe.rtti.CType) (haxe.lang.Runtime.getField(a, "t", true)) ), ((haxe.rtti.CType) (haxe.lang.Runtime.getField(b, "t", true)) ));
		}
		else
		{
			//line 478 "C:\\HaxeToolkit\\haxe\\std\\haxe\\rtti\\CType.hx"
			return false;
		}
		
	}
	
	
}


