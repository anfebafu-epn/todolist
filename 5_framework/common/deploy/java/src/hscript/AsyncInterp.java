// Generated by Haxe 4.2.2
package hscript;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class AsyncInterp extends hscript.Interp
{
	public AsyncInterp(haxe.lang.EmptyObject empty)
	{
		//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		super(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public AsyncInterp()
	{
		//line 54 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		super(haxe.lang.EmptyObject.EMPTY);
		//line 54 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.AsyncInterp.__hx_ctor_hscript_AsyncInterp(this);
	}
	
	
	protected static void __hx_ctor_hscript_AsyncInterp(hscript.AsyncInterp __hx_this)
	{
		//line 54 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.Interp.__hx_ctor_hscript_Interp(__hx_this);
	}
	
	
	public void setContext(java.lang.Object api)
	{
		//line 439 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		haxe.root.Array<java.lang.Object> funs = new haxe.root.Array<java.lang.Object>();
		//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		{
			//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			java.lang.Object v = ((java.lang.Object) (new haxe.ds._StringMap.StringMapKeyIterator(((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ))) );
			//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(v, "hasNext", null)) )))
			{
				//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				java.lang.String v1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.callField(v, "next", null));
				//line 441 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				if (haxe.root.Reflect.isFunction(((java.lang.Object) (((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).get(v1)) ))) 
				{
					//line 442 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					funs.push(new haxe.lang.DynamicObject(new java.lang.String[]{"obj", "v"}, new java.lang.Object[]{null, v1}, new java.lang.String[]{}, new double[]{}));
				}
				
			}
			
		}
		
		//line 444 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set("split", ((java.lang.Object) (new haxe.lang.Closure(this, "split")) ));
		//line 445 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set("makeIterator", ((java.lang.Object) (new haxe.lang.Closure(this, "makeIterator")) ));
		//line 447 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		java.lang.Class c = ((java.lang.Class) (haxe.root.Type.getClass(((java.lang.Object) (api) ))) );
		//line 448 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		{
			//line 448 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			int _g = 0;
			//line 448 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			haxe.root.Array<java.lang.String> _g1 = ( (( ((java.lang.Object) (c) ) == ((java.lang.Object) (null) ) )) ? (haxe.root.Reflect.fields(api)) : (haxe.root.Type.getInstanceFields(c)) );
			//line 448 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			while (( _g < _g1.length ))
			{
				//line 448 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				java.lang.String f = _g1.__get(_g);
				//line 448 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				 ++ _g;
				//line 449 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				java.lang.Object fv = haxe.root.Reflect.field(api, f);
				//line 450 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				if ( ! (haxe.root.Reflect.isFunction(fv)) ) 
				{
					//line 450 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					continue;
				}
				
				//line 451 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				if (haxe.lang.Runtime.eq(haxe.lang.StringExt.charCodeAt(f, 0), 95)) 
				{
					//line 451 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					f = haxe.lang.StringExt.substr(f, 1, null);
				}
				
				//line 452 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set(f, fv);
				//line 454 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				if ( ! (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substr(f, 0, 2), "a_")) ) 
				{
					//line 455 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					funs.push(new haxe.lang.DynamicObject(new java.lang.String[]{"obj", "v"}, new java.lang.Object[]{api, f}, new java.lang.String[]{}, new double[]{}));
				}
				
			}
			
		}
		
		//line 458 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		{
			//line 458 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			int _g2 = 0;
			//line 458 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			while (( _g2 < funs.length ))
			{
				//line 458 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				java.lang.Object v2 = funs.__get(_g2);
				//line 458 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				 ++ _g2;
				//line 459 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				if (((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).exists(( "a_" + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(v2, "v", true)) ))) 
				{
					//line 459 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					continue;
				}
				
				//line 460 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				java.lang.Object fv1 = ((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).get(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(v2, "v", true)));
				//line 461 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				java.lang.Object obj = haxe.lang.Runtime.getField(v2, "obj", true);
				//line 462 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set(( "a_" + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(v2, "v", true)) ), haxe.root.Reflect.makeVarArgs(((haxe.lang.Function) (new hscript.AsyncInterp_setContext_462__Fun(obj, fv1)) )));
			}
			
		}
		
	}
	
	
	public boolean hasMethod(java.lang.String name)
	{
		//line 470 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		java.lang.Object v = ((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).get(name);
		//line 471 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		if (( ! (( v == null )) )) 
		{
			//line 471 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			return haxe.root.Reflect.isFunction(v);
		}
		else
		{
			//line 471 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			return false;
		}
		
	}
	
	
	public void callValue(java.lang.Object value, haxe.root.Array args, haxe.lang.Function onResult, java.lang.Object vthis)
	{
		//line 475 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		java.lang.Object oldThis = ((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).get("this");
		//line 476 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		if (( ! (( vthis == null )) )) 
		{
			//line 477 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set("this", ((java.lang.Object) (vthis) ));
		}
		
		//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		if (( onResult == null )) 
		{
			//line 479 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			onResult = ( (( hscript.AsyncInterp_callValue_479__Fun.__hx_current != null )) ? (hscript.AsyncInterp_callValue_479__Fun.__hx_current) : (hscript.AsyncInterp_callValue_479__Fun.__hx_current = ((hscript.AsyncInterp_callValue_479__Fun) (new hscript.AsyncInterp_callValue_479__Fun()) )) );
		}
		
		//line 480 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		args.unshift(onResult);
		//line 481 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		haxe.root.Reflect.callMethod(null, value, args);
		//line 482 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set("this", ((java.lang.Object) (oldThis) ));
	}
	
	
	public void callAsync(java.lang.String id, haxe.root.Array args, haxe.lang.Function onResult, java.lang.Object vthis)
	{
		//line 486 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		java.lang.Object v = ((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).get(id);
		//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		if (( v == null )) 
		{
			//line 488 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( ( "Missing function " + id ) + "()" ))) );
		}
		
		//line 489 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		this.callValue(v, args, onResult, vthis);
	}
	
	
	public void split(haxe.lang.Function rest, haxe.root.Array args)
	{
		//line 493 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		if (( args.length == 0 )) 
		{
			//line 494 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			rest.__hx_invoke1_o(0.0, null);
		}
		else
		{
			//line 496 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			int[] count = new int[]{args.length};
			//line 497 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			haxe.lang.Function next = new hscript.AsyncInterp_split_497__Fun(rest, count);
			//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			{
				//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				int _g = 0;
				//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				while (( _g < args.length ))
				{
					//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					java.lang.Object a = args.__get(_g);
					//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					 ++ _g;
					//line 501 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					java.lang.Object __temp_expr1 = ((java.lang.Object) (((haxe.lang.Function) (a) ).__hx_invoke1_o(0.0, next)) );
				}
				
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object fcall(java.lang.Object o, java.lang.String f, haxe.root.Array args)
	{
		//line 506 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		java.lang.Object m = haxe.root.Reflect.field(o, f);
		//line 507 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		if (( m == null )) 
		{
			//line 508 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substr(f, 0, 2), "a_")) 
			{
				//line 509 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				m = haxe.root.Reflect.field(o, haxe.lang.StringExt.substr(f, 2, null));
				//line 511 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				if (( ! (( m == null )) )) 
				{
					//line 512 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					java.lang.Object onEnd = args.shift();
					//line 513 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					java.lang.Object __temp_expr1 = ((java.lang.Object) (((haxe.lang.Function) (onEnd) ).__hx_invoke1_o(0.0, this.call(o, m, args))) );
					//line 514 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					return null;
				}
				
				//line 517 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				m = haxe.lang.Runtime.getField(o, "scriptCall", false);
				//line 518 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				if (( ! (( m == null )) )) 
				{
					//line 519 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					this.call(o, m, new haxe.root.Array(new java.lang.Object[]{args.shift(), haxe.lang.StringExt.substr(f, 2, null), args}));
					//line 520 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					return null;
				}
				
			}
			else
			{
				//line 524 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				m = haxe.lang.Runtime.getField(o, "scriptCall", false);
				//line 525 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				if (( ! (( m == null )) )) 
				{
					//line 526 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					java.lang.Object[] result = new java.lang.Object[]{null};
					//line 527 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					this.call(o, m, new haxe.root.Array(new java.lang.Object[]{new hscript.AsyncInterp_fcall_527__Fun(result), f, args}));
					//line 528 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
					return result[0];
				}
				
			}
			
			//line 531 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			hscript.Error e = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.ECustom(( ( haxe.root.Std.string(o) + " has no method " ) + f ))) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
			//line 531 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e)) );
		}
		
		//line 533 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		return this.call(o, m, args);
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		{
			//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			boolean __temp_executeDef1 = true;
			//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			if (( field != null )) 
			{
				//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				switch (field.hashCode())
				{
					case 97245124:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("fcall")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "fcall")) );
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case -369770771:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("setContext")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setContext")) );
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case 109648666:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("split")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "split")) );
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case -457804773:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("hasMethod")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hasMethod")) );
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case -1073782082:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("callAsync")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "callAsync")) );
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case -1054936653:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("callValue")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "callValue")) );
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			if (__temp_executeDef1) 
			{
				//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		{
			//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			boolean __temp_executeDef1 = true;
			//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			if (( field != null )) 
			{
				//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				switch (field.hashCode())
				{
					case 97245124:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("fcall")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							return haxe.lang.Runtime.slowCallField(this, field, dynargs);
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case -369770771:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("setContext")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							this.setContext(dynargs[0]);
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case 109648666:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("split")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							this.split(((haxe.lang.Function) (dynargs[0]) ), ((haxe.root.Array) (dynargs[1]) ));
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case -457804773:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("hasMethod")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							return this.hasMethod(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case -1073782082:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("callAsync")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							this.callAsync(haxe.lang.Runtime.toString(dynargs[0]), ((haxe.root.Array) (dynargs[1]) ), ((haxe.lang.Function) (( (( dynargs.length > 2 )) ? (dynargs[2]) : (null) )) ), ( (( dynargs.length > 3 )) ? (dynargs[3]) : (null) ));
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
					case -1054936653:
					{
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						if (field.equals("callValue")) 
						{
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							__temp_executeDef1 = false;
							//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
							this.callValue(dynargs[0], ((haxe.root.Array) (dynargs[1]) ), ((haxe.lang.Function) (( (( dynargs.length > 2 )) ? (dynargs[2]) : (null) )) ), ( (( dynargs.length > 3 )) ? (dynargs[3]) : (null) ));
						}
						
						//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
			if (__temp_executeDef1) 
			{
				//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Async.hx"
		return null;
	}
	
	
}


