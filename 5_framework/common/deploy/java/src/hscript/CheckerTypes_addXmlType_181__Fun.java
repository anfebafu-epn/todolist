// Generated by Haxe 4.2.2
package hscript;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class CheckerTypes_addXmlType_181__Fun extends haxe.lang.Function
{
	public CheckerTypes_addXmlType_181__Fun(java.lang.Object en, java.lang.Object e, hscript.CheckerTypes _gthis)
	{
		//line 181 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		super(0, 0);
		//line 181 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		this.en = en;
		//line 181 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		this.e = e;
		//line 181 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		this._gthis = _gthis;
	}
	
	
	@Override public java.lang.Object __hx_invoke0_o()
	{
		//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		haxe.ds.StringMap<hscript.TType> _g = new haxe.ds.StringMap<hscript.TType>();
		//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		{
			//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			int _g1 = 0;
			//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			haxe.root.Array<hscript.TType> _g2 = ((haxe.root.Array<hscript.TType>) (haxe.lang.Runtime.getField(this.en, "params", true)) );
			//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			while (( _g1 < _g2.length ))
			{
				//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				hscript.TType t = _g2.__get(_g1);
				//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				 ++ _g1;
				//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				_g.set(( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.e, "path", true)) + "." ) + hscript.Checker.typeStr(t) ), t);
			}
			
		}
		
		//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		this._gthis.localParams = _g;
		//line 183 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		{
			//line 183 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			int _g3 = 0;
			//line 183 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			haxe.root.Array<java.lang.Object> _g4 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(this.e, "constructors", true)) );
			//line 183 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			while (( _g3 < _g4.length ))
			{
				//line 183 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				java.lang.Object c = _g4.__get(_g3);
				//line 183 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				 ++ _g3;
				//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				haxe.root.Array<java.lang.Object> en1 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(this.en, "constructors", true)) );
				//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				java.lang.String c1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(c, "name", true));
				//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				haxe.root.Array<java.lang.Object> tmp = null;
				//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				if (( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c, "args", true)) ) == null )) 
				{
					//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
					tmp = null;
				}
				else
				{
					//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
					haxe.root.Array<java.lang.Object> _g5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
					//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
					{
						//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						int _g6 = 0;
						//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						haxe.root.Array<java.lang.Object> _g7 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c, "args", true)) );
						//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						while (( _g6 < _g7.length ))
						{
							//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							java.lang.Object a = _g7.__get(_g6);
							//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							 ++ _g6;
							//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							java.lang.Object __temp_stmt4 = null;
							//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							{
								//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
								java.lang.String __temp_odecl1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(a, "name", true));
								//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
								boolean __temp_odecl2 = haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(a, "opt", true)) ));
								//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
								hscript.TType __temp_odecl3 = this._gthis.makeXmlType(((haxe.rtti.CType) (haxe.lang.Runtime.getField(a, "t", true)) ));
								//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
								__temp_stmt4 = new haxe.lang.DynamicObject(new java.lang.String[]{"name", "opt", "t"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3}, new java.lang.String[]{}, new double[]{});
							}
							
							//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							_g5.push(__temp_stmt4);
						}
						
					}
					
					//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
					tmp = _g5;
				}
				
				//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				en1.push(new haxe.lang.DynamicObject(new java.lang.String[]{"args", "name"}, new java.lang.Object[]{tmp, c1}, new java.lang.String[]{}, new double[]{}));
			}
			
		}
		
		//line 185 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		this._gthis.localParams = null;
		//line 181 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return null;
	}
	
	
	public java.lang.Object en;
	
	public java.lang.Object e;
	
	public hscript.CheckerTypes _gthis;
	
}


