// Generated by Haxe 4.2.2
package hscript;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Interp_expr_415__Fun extends haxe.lang.Function
{
	public Interp_expr_415__Fun(haxe.root.Array<java.lang.Object> params1, java.lang.String name, int[] minParams, hscript.Interp me, java.lang.Object fexpr, haxe.ds.StringMap<java.lang.Object> capturedLocals, hscript.Interp _gthis)
	{
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		super(1, 0);
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.params1 = params1;
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.name = name;
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.minParams = minParams;
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.me = me;
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.fexpr = fexpr;
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.capturedLocals = capturedLocals;
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this._gthis = _gthis;
	}
	
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		haxe.root.Array args = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array) (((java.lang.Object) (__fn_float1) )) )) : (((haxe.root.Array) (__fn_dyn1) )) );
		//line 416 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (( (( (( args == null )) ? (0) : (args.length) )) != this.params1.length )) 
		{
			//line 417 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (( args.length < this.minParams[0] )) 
			{
				//line 418 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String str = ( ( ( "Invalid number of parameters. Got " + args.length ) + ", required " ) + this.minParams[0] );
				//line 419 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (( this.name != null )) 
				{
					//line 419 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					str += ( ( " for function \'" + this.name ) + "\'" );
				}
				
				//line 420 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.Error e = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.ECustom(str)) ), ((int) (haxe.lang.Runtime.getField_f(this._gthis.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this._gthis.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this._gthis.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this._gthis.curExpr, "line", true)) ));
				//line 420 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e)) );
			}
			
			//line 423 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			haxe.root.Array args2 = new haxe.root.Array(new java.lang.Object[]{});
			//line 424 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			int extraParams = ( args.length - this.minParams[0] );
			//line 425 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			int pos = 0;
			//line 426 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			{
				//line 426 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				int _g = 0;
				//line 426 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				while (( _g < this.params1.length ))
				{
					//line 426 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object p = this.params1.__get(_g);
					//line 426 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					 ++ _g;
					//line 427 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (haxe.lang.Runtime.toBool(((java.lang.Boolean) ((haxe.lang.Runtime.getField(p, "opt", true))) ))) 
					{
						//line 428 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (( extraParams > 0 )) 
						{
							//line 429 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							args2.push(args.__get(pos++));
							//line 430 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							 -- extraParams;
						}
						else
						{
							//line 432 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							args2.push(null);
						}
						
					}
					else
					{
						//line 434 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						args2.push(args.__get(pos++));
					}
					
				}
				
			}
			
			//line 435 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			args = args2;
		}
		
		//line 437 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		haxe.ds.StringMap<java.lang.Object> old = this.me.locals;
		//line 437 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		int depth = this.me.depth;
		//line 438 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.me.depth++;
		//line 439 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.me.locals = ((haxe.ds.StringMap<java.lang.Object>) (this.me.duplicate(((haxe.ds.StringMap<java.lang.Object>) (this.capturedLocals) ))) );
		//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			int _g1 = 0;
			//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			int _g2 = this.params1.length;
			//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			while (( _g1 < _g2 ))
			{
				//line 440 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				int i = _g1++;
				//line 441 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String __temp_stmt2 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.params1.__get(i), "name", true));
				//line 441 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object __temp_stmt3 = null;
				//line 441 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 441 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object __temp_odecl1 = args.__get(i);
					//line 441 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					__temp_stmt3 = new haxe.lang.DynamicObject(new java.lang.String[]{"r"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 441 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.me.locals) )) ).set(__temp_stmt2, __temp_stmt3);
			}
			
		}
		
		//line 442 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		java.lang.Object r = null;
		//line 443 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		int oldDecl = this._gthis.declared.length;
		//line 444 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (this._gthis.inTry) 
		{
			//line 446 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			try 
			{
				//line 446 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				r = this.me.exprReturn(this.fexpr);
			}
			catch (java.lang.Throwable _g3)
			{
				//line 447 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 447 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					haxe.NativeStackTrace.exception.set(((java.lang.Throwable) (_g3) ));
				}
				
				//line 447 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e1 = ((java.lang.Object) (haxe.Exception.caught(_g3).unwrap()) );
				//line 448 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				this.me.locals = old;
				//line 449 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				this.me.depth = depth;
				//line 453 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e1)) );
			}
			
			
		}
		else
		{
			//line 457 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			r = this.me.exprReturn(this.fexpr);
		}
		
		//line 458 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this._gthis.restore(oldDecl);
		//line 459 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.me.locals = old;
		//line 460 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.me.depth = depth;
		//line 461 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return r;
	}
	
	
	public haxe.root.Array<java.lang.Object> params1;
	
	public java.lang.String name;
	
	public int[] minParams;
	
	public hscript.Interp me;
	
	public java.lang.Object fexpr;
	
	public haxe.ds.StringMap<java.lang.Object> capturedLocals;
	
	public hscript.Interp _gthis;
	
}


