// Generated by Haxe 4.2.2
package hscript;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Completion extends haxe.lang.HxObject
{
	public Completion(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Completion(java.lang.Object expr, hscript.TType t)
	{
		//line 81 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		hscript.Completion.__hx_ctor_hscript_Completion(this, expr, t);
	}
	
	
	protected static void __hx_ctor_hscript_Completion(hscript.Completion __hx_this, java.lang.Object expr, hscript.TType t)
	{
		//line 82 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		__hx_this.expr = expr;
		//line 83 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		__hx_this.t = t;
	}
	
	
	public java.lang.Object expr;
	
	public hscript.TType t;
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		{
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			boolean __temp_executeDef1 = true;
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			if (( field != null )) 
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				switch (field.hashCode())
				{
					case 3127797:
					{
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						if (field.equals("expr")) 
						{
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							__temp_executeDef1 = false;
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							this.expr = ((java.lang.Object) (value) );
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							return value;
						}
						
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			if (__temp_executeDef1) 
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		{
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			boolean __temp_executeDef1 = true;
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			if (( field != null )) 
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				switch (field.hashCode())
				{
					case 116:
					{
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						if (field.equals("t")) 
						{
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							__temp_executeDef1 = false;
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							this.t = ((hscript.TType) (value) );
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							return value;
						}
						
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						break;
					}
					
					
					case 3127797:
					{
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						if (field.equals("expr")) 
						{
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							__temp_executeDef1 = false;
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							this.expr = ((java.lang.Object) (value) );
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							return value;
						}
						
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			if (__temp_executeDef1) 
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		{
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			boolean __temp_executeDef1 = true;
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			if (( field != null )) 
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				switch (field.hashCode())
				{
					case 116:
					{
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						if (field.equals("t")) 
						{
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							__temp_executeDef1 = false;
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							return this.t;
						}
						
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						break;
					}
					
					
					case 3127797:
					{
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						if (field.equals("expr")) 
						{
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							__temp_executeDef1 = false;
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							return this.expr;
						}
						
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			if (__temp_executeDef1) 
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		{
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			boolean __temp_executeDef1 = true;
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			if (( field != null )) 
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				switch (field.hashCode())
				{
					case 3127797:
					{
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						if (field.equals("expr")) 
						{
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							__temp_executeDef1 = false;
							//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
							return ((double) (haxe.lang.Runtime.toDouble(this.expr)) );
						}
						
						//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
			if (__temp_executeDef1) 
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		baseArr.push("t");
		//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		baseArr.push("expr");
		//line 78 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


