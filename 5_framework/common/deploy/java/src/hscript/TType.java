// Generated by Haxe 4.2.2
package hscript;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TType extends haxe.lang.ParamEnum
{
	public TType(int index, java.lang.Object[] params)
	{
		//line 240 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		super(index, params);
	}
	
	
	public static final java.lang.String[] __hx_constructs = new java.lang.String[]{"TMono", "TVoid", "TInt", "TFloat", "TBool", "TDynamic", "TParam", "TUnresolved", "TNull", "TInst", "TEnum", "TType", "TAbstract", "TFun", "TAnon", "TLazy"};
	
	public static hscript.TType TMono(java.lang.Object r)
	{
		//line 11 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(0, new java.lang.Object[]{r});
	}
	
	
	public static final hscript.TType TVoid = new hscript.TType(1, null);
	
	public static final hscript.TType TInt = new hscript.TType(2, null);
	
	public static final hscript.TType TFloat = new hscript.TType(3, null);
	
	public static final hscript.TType TBool = new hscript.TType(4, null);
	
	public static final hscript.TType TDynamic = new hscript.TType(5, null);
	
	public static hscript.TType TParam(java.lang.String name)
	{
		//line 17 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(6, new java.lang.Object[]{name});
	}
	
	
	public static hscript.TType TUnresolved(java.lang.String name)
	{
		//line 18 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(7, new java.lang.Object[]{name});
	}
	
	
	public static hscript.TType TNull(hscript.TType t)
	{
		//line 19 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(8, new java.lang.Object[]{t});
	}
	
	
	public static hscript.TType TInst(java.lang.Object c, haxe.root.Array<hscript.TType> args)
	{
		//line 20 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(9, new java.lang.Object[]{c, args});
	}
	
	
	public static hscript.TType TEnum(java.lang.Object e, haxe.root.Array<hscript.TType> args)
	{
		//line 21 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(10, new java.lang.Object[]{e, args});
	}
	
	
	public static hscript.TType TType(java.lang.Object t, haxe.root.Array<hscript.TType> args)
	{
		//line 22 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(11, new java.lang.Object[]{t, args});
	}
	
	
	public static hscript.TType TAbstract(java.lang.Object a, haxe.root.Array<hscript.TType> args)
	{
		//line 23 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(12, new java.lang.Object[]{a, args});
	}
	
	
	public static hscript.TType TFun(haxe.root.Array<java.lang.Object> args, hscript.TType ret)
	{
		//line 24 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(13, new java.lang.Object[]{args, ret});
	}
	
	
	public static hscript.TType TAnon(haxe.root.Array<java.lang.Object> fields)
	{
		//line 25 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(14, new java.lang.Object[]{fields});
	}
	
	
	public static hscript.TType TLazy(haxe.lang.Function f)
	{
		//line 26 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return new hscript.TType(15, new java.lang.Object[]{f});
	}
	
	
	@Override public java.lang.String getTag()
	{
		//line 10 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Checker.hx"
		return hscript.TType.__hx_constructs[this.index];
	}
	
	
}


