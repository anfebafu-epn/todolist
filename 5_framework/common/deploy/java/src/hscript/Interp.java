// Generated by Haxe 4.2.2
package hscript;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Interp extends haxe.lang.HxObject
{
	public Interp(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Interp()
	{
		//line 54 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.Interp.__hx_ctor_hscript_Interp(this);
	}
	
	
	protected static void __hx_ctor_hscript_Interp(hscript.Interp __hx_this)
	{
		//line 56 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		__hx_this.locals = new haxe.ds.StringMap<java.lang.Object>();
		//line 60 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		__hx_this.declared = new haxe.root.Array<java.lang.Object>();
		//line 61 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		__hx_this.resetVariables();
		//line 62 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		__hx_this.initOps();
	}
	
	
	public haxe.ds.StringMap variables;
	
	public haxe.ds.StringMap<java.lang.Object> locals;
	
	public haxe.ds.StringMap<haxe.lang.Function> binops;
	
	public int depth;
	
	public boolean inTry;
	
	public haxe.root.Array<java.lang.Object> declared;
	
	public java.lang.Object returnValue;
	
	public java.lang.Object curExpr;
	
	public void resetVariables()
	{
		//line 67 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.variables = new haxe.ds.StringMap();
		//line 72 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 72 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			java.lang.Object value = null;
			//line 72 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set("null", value);
		}
		
		//line 73 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set("true", ((java.lang.Object) (true) ));
		//line 74 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set("false", ((java.lang.Object) (false) ));
		//line 65 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.Interp _gthis = this;
		//line 75 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set("trace", haxe.root.Reflect.makeVarArgs(((haxe.lang.Function) (new hscript.Interp_resetVariables_75__Fun(_gthis)) )));
	}
	
	
	public java.lang.Object posInfos()
	{
		//line 85 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (( ! (( this.curExpr == null )) )) 
		{
			//line 86 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			java.lang.Object __temp_stmt3 = null;
			//line 86 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			{
				//line 86 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String __temp_odecl1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true));
				//line 86 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				int __temp_odecl2 = ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) );
				//line 86 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				__temp_stmt3 = new haxe.lang.DynamicObject(new java.lang.String[]{"fileName"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (__temp_odecl2) )) )});
			}
			
			//line 86 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			return ((java.lang.Object) (__temp_stmt3) );
		}
		
		//line 88 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"fileName"}, new java.lang.Object[]{"hscript"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (0) )) )})) );
	}
	
	
	public void initOps()
	{
		//line 92 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.Interp me = this;
		//line 94 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.binops = new haxe.ds.StringMap<haxe.lang.Function>();
		//line 98 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("+", new hscript.Interp_initOps_98__Fun(me));
		//line 99 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("-", ((haxe.lang.Function) (new hscript.Interp_initOps_99__Fun(me)) ));
		//line 100 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("*", ((haxe.lang.Function) (new hscript.Interp_initOps_100__Fun(me)) ));
		//line 101 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("/", ((haxe.lang.Function) (new hscript.Interp_initOps_101__Fun(me)) ));
		//line 102 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("%", ((haxe.lang.Function) (new hscript.Interp_initOps_102__Fun(me)) ));
		//line 103 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("&", ((haxe.lang.Function) (new hscript.Interp_initOps_103__Fun(me)) ));
		//line 104 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("|", ((haxe.lang.Function) (new hscript.Interp_initOps_104__Fun(me)) ));
		//line 105 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("^", ((haxe.lang.Function) (new hscript.Interp_initOps_105__Fun(me)) ));
		//line 106 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("<<", ((haxe.lang.Function) (new hscript.Interp_initOps_106__Fun(me)) ));
		//line 107 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set(">>", ((haxe.lang.Function) (new hscript.Interp_initOps_107__Fun(me)) ));
		//line 108 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set(">>>", ((haxe.lang.Function) (new hscript.Interp_initOps_108__Fun(me)) ));
		//line 109 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("==", ((haxe.lang.Function) (new hscript.Interp_initOps_109__Fun(me)) ));
		//line 110 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("!=", ((haxe.lang.Function) (new hscript.Interp_initOps_110__Fun(me)) ));
		//line 111 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set(">=", ((haxe.lang.Function) (new hscript.Interp_initOps_111__Fun(me)) ));
		//line 112 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("<=", ((haxe.lang.Function) (new hscript.Interp_initOps_112__Fun(me)) ));
		//line 113 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set(">", ((haxe.lang.Function) (new hscript.Interp_initOps_113__Fun(me)) ));
		//line 114 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("<", ((haxe.lang.Function) (new hscript.Interp_initOps_114__Fun(me)) ));
		//line 115 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("||", ((haxe.lang.Function) (new hscript.Interp_initOps_115__Fun(me)) ));
		//line 116 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("&&", ((haxe.lang.Function) (new hscript.Interp_initOps_116__Fun(me)) ));
		//line 117 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("=", ((haxe.lang.Function) (new haxe.lang.Closure(this, "assign")) ));
		//line 118 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set("...", ((haxe.lang.Function) (new hscript.Interp_initOps_118__Fun(me)) ));
		//line 119 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("+=", ( (( hscript.Interp_initOps_119__Fun.__hx_current != null )) ? (hscript.Interp_initOps_119__Fun.__hx_current) : (hscript.Interp_initOps_119__Fun.__hx_current = ((hscript.Interp_initOps_119__Fun) (new hscript.Interp_initOps_119__Fun()) )) ));
		//line 120 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("-=", ( (( hscript.Interp_initOps_120__Fun.__hx_current != null )) ? (hscript.Interp_initOps_120__Fun.__hx_current) : (hscript.Interp_initOps_120__Fun.__hx_current = ((hscript.Interp_initOps_120__Fun) (new hscript.Interp_initOps_120__Fun()) )) ));
		//line 121 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("*=", ( (( hscript.Interp_initOps_121__Fun.__hx_current != null )) ? (hscript.Interp_initOps_121__Fun.__hx_current) : (hscript.Interp_initOps_121__Fun.__hx_current = ((hscript.Interp_initOps_121__Fun) (new hscript.Interp_initOps_121__Fun()) )) ));
		//line 122 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("/=", ( (( hscript.Interp_initOps_122__Fun.__hx_current != null )) ? (hscript.Interp_initOps_122__Fun.__hx_current) : (hscript.Interp_initOps_122__Fun.__hx_current = ((hscript.Interp_initOps_122__Fun) (new hscript.Interp_initOps_122__Fun()) )) ));
		//line 123 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("%=", ( (( hscript.Interp_initOps_123__Fun.__hx_current != null )) ? (hscript.Interp_initOps_123__Fun.__hx_current) : (hscript.Interp_initOps_123__Fun.__hx_current = ((hscript.Interp_initOps_123__Fun) (new hscript.Interp_initOps_123__Fun()) )) ));
		//line 124 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("&=", ( (( hscript.Interp_initOps_124__Fun.__hx_current != null )) ? (hscript.Interp_initOps_124__Fun.__hx_current) : (hscript.Interp_initOps_124__Fun.__hx_current = ((hscript.Interp_initOps_124__Fun) (new hscript.Interp_initOps_124__Fun()) )) ));
		//line 125 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("|=", ( (( hscript.Interp_initOps_125__Fun.__hx_current != null )) ? (hscript.Interp_initOps_125__Fun.__hx_current) : (hscript.Interp_initOps_125__Fun.__hx_current = ((hscript.Interp_initOps_125__Fun) (new hscript.Interp_initOps_125__Fun()) )) ));
		//line 126 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("^=", ( (( hscript.Interp_initOps_126__Fun.__hx_current != null )) ? (hscript.Interp_initOps_126__Fun.__hx_current) : (hscript.Interp_initOps_126__Fun.__hx_current = ((hscript.Interp_initOps_126__Fun) (new hscript.Interp_initOps_126__Fun()) )) ));
		//line 127 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp("<<=", ( (( hscript.Interp_initOps_127__Fun.__hx_current != null )) ? (hscript.Interp_initOps_127__Fun.__hx_current) : (hscript.Interp_initOps_127__Fun.__hx_current = ((hscript.Interp_initOps_127__Fun) (new hscript.Interp_initOps_127__Fun()) )) ));
		//line 128 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp(">>=", ( (( hscript.Interp_initOps_128__Fun.__hx_current != null )) ? (hscript.Interp_initOps_128__Fun.__hx_current) : (hscript.Interp_initOps_128__Fun.__hx_current = ((hscript.Interp_initOps_128__Fun) (new hscript.Interp_initOps_128__Fun()) )) ));
		//line 129 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.assignOp(">>>=", ( (( hscript.Interp_initOps_129__Fun.__hx_current != null )) ? (hscript.Interp_initOps_129__Fun.__hx_current) : (hscript.Interp_initOps_129__Fun.__hx_current = ((hscript.Interp_initOps_129__Fun) (new hscript.Interp_initOps_129__Fun()) )) ));
	}
	
	
	public void setVar(java.lang.String name, java.lang.Object v)
	{
		//line 133 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set(name, v);
	}
	
	
	public java.lang.Object assign(java.lang.Object e1, java.lang.Object e2)
	{
		//line 137 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		java.lang.Object v = this.expr(e2);
		//line 138 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 138 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			hscript.ExprDef _g = ((hscript.ExprDef) (haxe.lang.Runtime.getField(e1, "e", true)) );
			//line 138 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			switch (_g.index)
			{
				case 1:
				{
					//line 139 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.String id = haxe.lang.Runtime.toString(_g.params[0]);
					//line 139 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 140 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object l = ((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).get(id);
						//line 141 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (( l == null )) 
						{
							//line 142 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.setVar(id, v);
						}
						else
						{
							//line 144 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							haxe.lang.Runtime.setField(l, "r", v);
						}
						
					}
					
					//line 139 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					break;
				}
				
				
				case 5:
				{
					//line 145 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object e = _g.params[0];
					//line 145 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.String f = haxe.lang.Runtime.toString(_g.params[1]);
					//line 146 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					v = this.set(this.expr(e), f, v);
					//line 145 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					break;
				}
				
				
				case 16:
				{
					//line 147 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object e3 = _g.params[0];
					//line 147 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object index = _g.params[1];
					//line 147 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 148 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object arr = this.expr(e3);
						//line 149 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object index1 = this.expr(index);
						//line 150 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (( arr instanceof haxe.IMap )) 
						{
							//line 151 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							(((haxe.IMap) (arr) )).set(index1, ((java.lang.Object) (v) ));
						}
						else
						{
							//line 154 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object __temp_expr1 = ((java.lang.Object) (haxe.lang.Runtime.callField(arr, "__set", new java.lang.Object[]{index1, v})) );
						}
						
					}
					
					//line 147 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					break;
				}
				
				
				default:
				{
					//line 158 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					hscript.Error e4 = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidOp("=")) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
					//line 158 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e4)) );
				}
				
			}
			
		}
		
		//line 160 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return v;
	}
	
	
	public void assignOp(java.lang.String op, haxe.lang.Function fop)
	{
		//line 164 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.Interp me = this;
		//line 165 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).set(op, new hscript.Interp_assignOp_165__Fun(op, me, fop));
	}
	
	
	public java.lang.Object evalAssignOp(java.lang.String op, haxe.lang.Function fop, java.lang.Object e1, java.lang.Object e2)
	{
		//line 169 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		java.lang.Object v = null;
		//line 170 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 170 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			hscript.ExprDef _g = ((hscript.ExprDef) (haxe.lang.Runtime.getField(e1, "e", true)) );
			//line 170 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			switch (_g.index)
			{
				case 1:
				{
					//line 171 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.String id = haxe.lang.Runtime.toString(_g.params[0]);
					//line 171 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 172 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object l = ((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).get(id);
						//line 173 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						v = ((java.lang.Object) (fop.__hx_invoke2_o(0.0, this.expr(e1), 0.0, this.expr(e2))) );
						//line 174 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (( l == null )) 
						{
							//line 175 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.setVar(id, v);
						}
						else
						{
							//line 177 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							haxe.lang.Runtime.setField(l, "r", v);
						}
						
					}
					
					//line 171 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					break;
				}
				
				
				case 5:
				{
					//line 178 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object e = _g.params[0];
					//line 178 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.String f = haxe.lang.Runtime.toString(_g.params[1]);
					//line 178 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 179 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object obj = this.expr(e);
						//line 180 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						v = ((java.lang.Object) (fop.__hx_invoke2_o(0.0, this.get(obj, f), 0.0, this.expr(e2))) );
						//line 181 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						v = this.set(obj, f, v);
					}
					
					//line 178 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					break;
				}
				
				
				case 16:
				{
					//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object e3 = _g.params[0];
					//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object index = _g.params[1];
					//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 183 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object arr = this.expr(e3);
						//line 184 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object index1 = this.expr(index);
						//line 185 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (( arr instanceof haxe.IMap )) 
						{
							//line 186 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							v = ((java.lang.Object) (fop.__hx_invoke2_o(0.0, ((java.lang.Object) ((((haxe.IMap) (arr) )).get(index1)) ), 0.0, this.expr(e2))) );
							//line 187 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							(((haxe.IMap) (arr) )).set(index1, ((java.lang.Object) (v) ));
						}
						else
						{
							//line 190 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							v = ((java.lang.Object) (fop.__hx_invoke2_o(0.0, ((java.lang.Object) (haxe.lang.Runtime.callField(arr, "__get", new java.lang.Object[]{index1})) ), 0.0, this.expr(e2))) );
							//line 191 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object __temp_expr1 = ((java.lang.Object) (haxe.lang.Runtime.callField(arr, "__set", new java.lang.Object[]{index1, v})) );
						}
						
					}
					
					//line 182 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					break;
				}
				
				
				default:
				{
					//line 194 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					hscript.Error e4 = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidOp(op)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
					//line 194 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e4)) );
				}
				
			}
			
		}
		
		//line 196 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return v;
	}
	
	
	public java.lang.Object increment(java.lang.Object e, boolean prefix, int delta)
	{
		//line 201 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.curExpr = e;
		//line 202 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.ExprDef e1 = ((hscript.ExprDef) (haxe.lang.Runtime.getField(e, "e", true)) );
		//line 204 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		switch (e1.index)
		{
			case 1:
			{
				//line 205 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String id = haxe.lang.Runtime.toString(e1.params[0]);
				//line 206 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object l = ((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).get(id);
				//line 207 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object v = ( (( l == null )) ? (this.resolve(id)) : (haxe.lang.Runtime.getField(l, "r", true)) );
				//line 208 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (prefix) 
				{
					//line 209 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					v = ((java.lang.Object) (haxe.lang.Runtime.plus(v, delta)) );
					//line 210 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( l == null )) 
					{
						//line 210 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.setVar(id, v);
					}
					else
					{
						//line 210 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						haxe.lang.Runtime.setField(l, "r", v);
					}
					
				}
				else
				{
					//line 212 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( l == null )) 
					{
						//line 212 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.setVar(id, ((java.lang.Object) (haxe.lang.Runtime.plus(v, delta)) ));
					}
					else
					{
						//line 212 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						haxe.lang.Runtime.setField(l, "r", ((java.lang.Object) (haxe.lang.Runtime.plus(v, delta)) ));
					}
					
				}
				
				//line 213 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return v;
			}
			
			
			case 5:
			{
				//line 214 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e2 = e1.params[0];
				//line 214 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String f = haxe.lang.Runtime.toString(e1.params[1]);
				//line 215 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object obj = this.expr(e2);
				//line 216 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object v1 = this.get(obj, f);
				//line 217 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (prefix) 
				{
					//line 218 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					v1 = ((java.lang.Object) (haxe.lang.Runtime.plus(v1, delta)) );
					//line 219 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					this.set(obj, f, v1);
				}
				else
				{
					//line 221 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					this.set(obj, f, ((java.lang.Object) (haxe.lang.Runtime.plus(v1, delta)) ));
				}
				
				//line 222 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return v1;
			}
			
			
			case 16:
			{
				//line 223 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e3 = e1.params[0];
				//line 223 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object index = e1.params[1];
				//line 224 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object arr = this.expr(e3);
				//line 225 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object index1 = this.expr(index);
				//line 226 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (( arr instanceof haxe.IMap )) 
				{
					//line 227 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					int v2 = ((int) (haxe.lang.Runtime.toInt(((java.lang.Object) ((((haxe.IMap) (arr) )).get(index1)) ))) );
					//line 228 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (prefix) 
					{
						//line 229 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						v2 += delta;
						//line 230 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						(((haxe.IMap) (arr) )).set(index1, ((java.lang.Object) (v2) ));
					}
					else
					{
						//line 233 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						(((haxe.IMap) (arr) )).set(index1, ((java.lang.Object) (( v2 + delta )) ));
					}
					
					//line 235 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return v2;
				}
				else
				{
					//line 238 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					int v3 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.callField(arr, "__get", new java.lang.Object[]{index1}))) );
					//line 239 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (prefix) 
					{
						//line 240 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						v3 += delta;
						//line 241 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						int __temp_expr2 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.callField(arr, "__set", new java.lang.Object[]{index1, v3}))) );
					}
					else
					{
						//line 243 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						int __temp_expr1 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.callField(arr, "__set", new java.lang.Object[]{index1, ( v3 + delta )}))) );
					}
					
					//line 244 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return v3;
				}
				
			}
			
			
			default:
			{
				//line 247 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.Error e4 = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidOp(( (( delta > 0 )) ? ("++") : ("--") ))) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
				//line 247 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e4)) );
			}
			
		}
		
	}
	
	
	public java.lang.Object execute(java.lang.Object expr)
	{
		//line 252 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.depth = 0;
		//line 254 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.locals = new haxe.ds.StringMap<java.lang.Object>();
		//line 258 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.declared = new haxe.root.Array<java.lang.Object>();
		//line 259 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return this.exprReturn(expr);
	}
	
	
	public java.lang.Object exprReturn(java.lang.Object e)
	{
		//line 262 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		try 
		{
			//line 264 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			try 
			{
				//line 264 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return this.expr(e);
			}
			catch (java.lang.Throwable _g)
			{
				//line 265 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 265 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					haxe.NativeStackTrace.exception.set(((java.lang.Throwable) (_g) ));
				}
				
				//line 265 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object _g1 = haxe.Exception.caught(_g).unwrap();
				//line 263 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (( _g1 instanceof hscript._Interp.Stop )) 
				{
					//line 265 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					hscript._Interp.Stop e1 = ((hscript._Interp.Stop) (_g1) );
					//line 266 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					switch (e1)
					{
						case SBreak:
						{
							//line 267 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown("Invalid break")) );
						}
						
						
						case SContinue:
						{
							//line 268 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown("Invalid continue")) );
						}
						
						
						case SReturn:
						{
							//line 270 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object v = this.returnValue;
							//line 271 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.returnValue = null;
							//line 272 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return v;
						}
						
						
					}
					
				}
				else
				{
					//line 263 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					throw _g;
				}
				
			}
			
			
			//line 262 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			return null;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 262 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public <T> haxe.ds.StringMap<java.lang.Object> duplicate(haxe.ds.StringMap<T> h)
	{
		//line 280 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		haxe.ds.StringMap<java.lang.Object> h2 = new haxe.ds.StringMap<java.lang.Object>();
		//line 284 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 284 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			java.lang.Object k = ((java.lang.Object) (new haxe.ds._StringMap.StringMapKeyIterator<T>(((haxe.ds.StringMap<T>) (h) ))) );
			//line 284 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(k, "hasNext", null)) )))
			{
				//line 284 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String k1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.callField(k, "next", null));
				//line 285 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				h2.set(k1, h.get(k1));
			}
			
		}
		
		//line 286 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return h2;
	}
	
	
	public void restore(int old)
	{
		//line 290 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		while (( this.declared.length > old ))
		{
			//line 291 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			java.lang.Object d = this.declared.pop();
			//line 292 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).set(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(d, "n", true)), haxe.lang.Runtime.getField(d, "old", true));
		}
		
	}
	
	
	public final java.lang.Object error(hscript.ErrorDef e, java.lang.Object rethrow)
	{
		//line 296 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		boolean rethrow1 = ( (haxe.lang.Runtime.eq(rethrow, null)) ? (false) : (haxe.lang.Runtime.toBool(((java.lang.Boolean) (rethrow) ))) );
		//line 297 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.Error e1 = new hscript.Error(((hscript.ErrorDef) (e) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
		//line 298 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (rethrow1) 
		{
			//line 298 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(((java.lang.Object) (e1) ))) );
		}
		else
		{
			//line 298 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e1)) );
		}
		
	}
	
	
	public final void rethrow(java.lang.Object e)
	{
		//line 306 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e)) );
	}
	
	
	public java.lang.Object resolve(java.lang.String id)
	{
		//line 311 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		java.lang.Object l = ((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).get(id);
		//line 312 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (( ! (( l == null )) )) 
		{
			//line 313 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			return haxe.lang.Runtime.getField(l, "r", true);
		}
		
		//line 314 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		java.lang.Object v = ((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).get(id);
		//line 315 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (( ( v == null ) &&  ! (((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).exists(id))  )) 
		{
			//line 316 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			hscript.Error e = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EUnknownVariable(id)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
			//line 316 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e)) );
		}
		
		//line 317 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return v;
	}
	
	
	public java.lang.Object expr(java.lang.Object e)
	{
		//line 322 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		this.curExpr = e;
		//line 323 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.ExprDef e1 = ((hscript.ExprDef) (haxe.lang.Runtime.getField(e, "e", true)) );
		//line 320 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		hscript.Interp _gthis = this;
		//line 325 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		switch (e1.index)
		{
			case 0:
			{
				//line 326 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.Const c = ((hscript.Const) (e1.params[0]) );
				//line 327 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				switch (c.index)
				{
					case 0:
					{
						//line 328 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						int v = ((int) (haxe.lang.Runtime.toInt(c.params[0])) );
						//line 328 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						return v;
					}
					
					
					case 1:
					{
						//line 329 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						double f = ((double) (haxe.lang.Runtime.toDouble(c.params[0])) );
						//line 329 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						return f;
					}
					
					
					case 2:
					{
						//line 330 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.String s = haxe.lang.Runtime.toString(c.params[0]);
						//line 330 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						return s;
					}
					
					
				}
				
				//line 326 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				break;
			}
			
			
			case 1:
			{
				//line 335 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String id = haxe.lang.Runtime.toString(e1.params[0]);
				//line 336 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return this.resolve(id);
			}
			
			
			case 2:
			{
				//line 337 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.CType _g = ((hscript.CType) (e1.params[1]) );
				//line 337 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String n = haxe.lang.Runtime.toString(e1.params[0]);
				//line 337 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e2 = e1.params[2];
				//line 338 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object __temp_stmt5 = null;
				//line 338 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 338 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object __temp_odecl1 = ((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).get(n);
					//line 338 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					__temp_stmt5 = new haxe.lang.DynamicObject(new java.lang.String[]{"n", "old"}, new java.lang.Object[]{n, __temp_odecl1}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 338 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				this.declared.push(__temp_stmt5);
				//line 339 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object __temp_stmt6 = null;
				//line 339 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 339 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object __temp_odecl2 = ( (( e2 == null )) ? (null) : (this.expr(e2)) );
					//line 339 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					__temp_stmt6 = new haxe.lang.DynamicObject(new java.lang.String[]{"r"}, new java.lang.Object[]{__temp_odecl2}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 339 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).set(n, __temp_stmt6);
				//line 340 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return null;
			}
			
			
			case 3:
			{
				//line 341 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e3 = e1.params[0];
				//line 342 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return this.expr(e3);
			}
			
			
			case 4:
			{
				//line 343 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array<java.lang.Object> exprs = ((haxe.root.Array<java.lang.Object>) (e1.params[0]) );
				//line 344 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				int old = this.declared.length;
				//line 345 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object v1 = null;
				//line 346 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 346 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					int _g1 = 0;
					//line 346 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					while (( _g1 < exprs.length ))
					{
						//line 346 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object e4 = exprs.__get(_g1);
						//line 346 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						 ++ _g1;
						//line 347 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						v1 = this.expr(e4);
					}
					
				}
				
				//line 348 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				this.restore(old);
				//line 349 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return v1;
			}
			
			
			case 5:
			{
				//line 350 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e5 = e1.params[0];
				//line 350 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String f1 = haxe.lang.Runtime.toString(e1.params[1]);
				//line 351 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return this.get(this.expr(e5), f1);
			}
			
			
			case 6:
			{
				//line 352 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String op = haxe.lang.Runtime.toString(e1.params[0]);
				//line 352 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e11 = e1.params[1];
				//line 352 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e21 = e1.params[2];
				//line 353 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.lang.Function fop = ((haxe.lang.Function) (((haxe.ds.StringMap<haxe.lang.Function>) (((haxe.IMap<java.lang.String, haxe.lang.Function>) (this.binops) )) ).get(op)) );
				//line 354 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (( fop == null )) 
				{
					//line 354 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					hscript.Error e6 = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidOp(op)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
					//line 354 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e6)) );
				}
				
				//line 355 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return ((java.lang.Object) (((haxe.lang.Function) (fop) ).__hx_invoke2_o(0.0, e11, 0.0, e21)) );
			}
			
			
			case 7:
			{
				//line 356 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String op1 = haxe.lang.Runtime.toString(e1.params[0]);
				//line 356 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				boolean prefix = haxe.lang.Runtime.toBool(((java.lang.Boolean) (e1.params[1]) ));
				//line 356 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e7 = e1.params[2];
				//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.String __temp_svar9 = (op1);
					//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					boolean __temp_executeDef10 = true;
					//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( __temp_svar9 != null )) 
					{
						//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						switch (__temp_svar9.hashCode())
						{
							case 33:
							{
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (__temp_svar9.equals("!")) 
								{
									//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									__temp_executeDef10 = false;
									//line 359 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									return ( ! (haxe.lang.Runtime.eq(this.expr(e7), true)) );
								}
								
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break;
							}
							
							
							case 126:
							{
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (__temp_svar9.equals("~")) 
								{
									//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									__temp_executeDef10 = false;
									//line 370 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									return ( ~ (((int) (haxe.lang.Runtime.toInt(this.expr(e7))) )) );
								}
								
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break;
							}
							
							
							case 1376:
							{
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (__temp_svar9.equals("++")) 
								{
									//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									__temp_executeDef10 = false;
									//line 363 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									return this.increment(e7, prefix, 1);
								}
								
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break;
							}
							
							
							case 1440:
							{
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (__temp_svar9.equals("--")) 
								{
									//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									__temp_executeDef10 = false;
									//line 365 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									return this.increment(e7, prefix, -1);
								}
								
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break;
							}
							
							
							case 45:
							{
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (__temp_svar9.equals("-")) 
								{
									//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									__temp_executeDef10 = false;
									//line 361 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									return ( - (((double) (haxe.lang.Runtime.toDouble(this.expr(e7))) )) );
								}
								
								//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break;
							}
							
							
						}
						
					}
					
					//line 373 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (__temp_executeDef10) 
					{
						//line 373 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						hscript.Error e8 = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidOp(op1)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
						//line 373 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e8)) );
					}
					else
					{
						//line 373 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						throw null;
					}
					
				}
				
			}
			
			
			case 8:
			{
				//line 375 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e9 = e1.params[0];
				//line 375 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array<java.lang.Object> params = ((haxe.root.Array<java.lang.Object>) (e1.params[1]) );
				//line 376 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array args = new haxe.root.Array();
				//line 377 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 377 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					int _g2 = 0;
					//line 377 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					while (( _g2 < params.length ))
					{
						//line 377 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object p = params.__get(_g2);
						//line 377 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						 ++ _g2;
						//line 378 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						args.push(this.expr(p));
					}
					
				}
				
				//line 380 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.ExprDef _g3 = ((hscript.ExprDef) (haxe.lang.Runtime.getField(e9, "e", true)) );
				//line 380 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				switch (_g3.index)
				{
					case 5:
					{
						//line 381 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object e10 = _g3.params[0];
						//line 381 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.String f2 = haxe.lang.Runtime.toString(_g3.params[1]);
						//line 382 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object obj = this.expr(e10);
						//line 383 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (( obj == null )) 
						{
							//line 383 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							hscript.Error e12 = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidAccess(f2)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
							//line 383 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e12)) );
						}
						
						//line 384 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						return this.fcall(obj, f2, args);
					}
					
					
					default:
					{
						//line 386 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						return this.call(null, this.expr(e9), args);
					}
					
				}
				
			}
			
			
			case 9:
			{
				//line 388 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object econd = e1.params[0];
				//line 388 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e13 = e1.params[1];
				//line 388 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e22 = e1.params[2];
				//line 389 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (haxe.lang.Runtime.eq(this.expr(econd), true)) 
				{
					//line 389 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return this.expr(e13);
				}
				else
				{
					//line 389 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( e22 == null )) 
					{
						//line 389 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						return null;
					}
					else
					{
						//line 389 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						return this.expr(e22);
					}
					
				}
				
			}
			
			
			case 10:
			{
				//line 390 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object econd1 = e1.params[0];
				//line 390 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e14 = e1.params[1];
				//line 391 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				this.whileLoop(econd1, e14);
				//line 392 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return null;
			}
			
			
			case 11:
			{
				//line 396 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String v2 = haxe.lang.Runtime.toString(e1.params[0]);
				//line 396 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object it = e1.params[1];
				//line 396 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e15 = e1.params[2];
				//line 397 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				this.forLoop(v2, it, e15);
				//line 398 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return null;
			}
			
			
			case 12:
			{
				//line 400 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(hscript._Interp.Stop.SBreak)) );
			}
			
			
			case 13:
			{
				//line 402 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(hscript._Interp.Stop.SContinue)) );
			}
			
			
			case 14:
			{
				//line 406 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.CType _g4 = ((hscript.CType) (e1.params[3]) );
				//line 406 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array<java.lang.Object> params1 = ((haxe.root.Array<java.lang.Object>) (e1.params[0]) );
				//line 406 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object fexpr = e1.params[1];
				//line 406 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String name = haxe.lang.Runtime.toString(e1.params[2]);
				//line 407 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.ds.StringMap<java.lang.Object> capturedLocals = ((haxe.ds.StringMap<java.lang.Object>) (this.duplicate(((haxe.ds.StringMap<java.lang.Object>) (this.locals) ))) );
				//line 408 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.Interp me = this;
				//line 409 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				boolean hasOpt = false;
				//line 409 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				int[] minParams = new int[]{0};
				//line 410 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 410 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					int _g5 = 0;
					//line 410 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					while (( _g5 < params1.length ))
					{
						//line 410 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object p1 = params1.__get(_g5);
						//line 410 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						 ++ _g5;
						//line 411 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (haxe.lang.Runtime.toBool(((java.lang.Boolean) ((haxe.lang.Runtime.getField(p1, "opt", true))) ))) 
						{
							//line 412 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							hasOpt = true;
						}
						else
						{
							//line 414 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							minParams[0]++;
						}
						
					}
					
				}
				
				//line 415 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.lang.Function f3 = new hscript.Interp_expr_415__Fun(params1, name, minParams, me, fexpr, capturedLocals, _gthis);
				//line 463 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object f4 = haxe.root.Reflect.makeVarArgs(((haxe.lang.Function) (f3) ));
				//line 464 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (( name != null )) 
				{
					//line 465 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( this.depth == 0 )) 
					{
						//line 467 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						((haxe.ds.StringMap) (((haxe.IMap) (this.variables) )) ).set(name, f4);
					}
					else
					{
						//line 470 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object __temp_stmt7 = null;
						//line 470 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						{
							//line 470 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object __temp_odecl3 = ((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).get(name);
							//line 470 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_stmt7 = new haxe.lang.DynamicObject(new java.lang.String[]{"n", "old"}, new java.lang.Object[]{name, __temp_odecl3}, new java.lang.String[]{}, new double[]{});
						}
						
						//line 470 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.declared.push(__temp_stmt7);
						//line 471 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object ref = new haxe.lang.DynamicObject(new java.lang.String[]{"r"}, new java.lang.Object[]{f4}, new java.lang.String[]{}, new double[]{});
						//line 472 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).set(name, ref);
						//line 473 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						capturedLocals.set(name, ref);
					}
					
				}
				
				//line 476 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return f4;
			}
			
			
			case 15:
			{
				//line 403 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e16 = e1.params[0];
				//line 404 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				this.returnValue = ( (( e16 == null )) ? (null) : (this.expr(e16)) );
				//line 405 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(hscript._Interp.Stop.SReturn)) );
			}
			
			
			case 16:
			{
				//line 519 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e17 = e1.params[0];
				//line 519 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object index = e1.params[1];
				//line 520 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object arr = this.expr(e17);
				//line 521 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object index1 = this.expr(index);
				//line 522 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (( arr instanceof haxe.IMap )) 
				{
					//line 523 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return ((java.lang.Object) ((((haxe.IMap) (arr) )).get(index1)) );
				}
				else
				{
					//line 526 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return ((java.lang.Object) (haxe.lang.Runtime.callField(arr, "__get", new java.lang.Object[]{index1})) );
				}
				
			}
			
			
			case 17:
			{
				//line 477 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array<java.lang.Object> arr1 = ((haxe.root.Array<java.lang.Object>) (e1.params[0]) );
				//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				boolean tmp = false;
				//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (( arr1.length > 0 )) 
				{
					//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					hscript.ExprDef _g6 = ((hscript.ExprDef) (haxe.lang.Runtime.getField(arr1.__get(0), "e", true)) );
					//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					switch (_g6.index)
					{
						case 6:
						{
							//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object _g7 = _g6.params[1];
							//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object _g8 = _g6.params[2];
							//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							{
								//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								java.lang.String __temp_svar11 = (haxe.lang.Runtime.toString(_g6.params[0]));
								//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								boolean __temp_executeDef12 = true;
								//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (( __temp_svar11 != null )) 
								{
									//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									switch (__temp_svar11.hashCode())
									{
										case 1953:
										{
											//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
											if (__temp_svar11.equals("=>")) 
											{
												//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
												__temp_executeDef12 = false;
												//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
												tmp = true;
											}
											
											//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
											break;
										}
										
										
									}
									
								}
								
								//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (__temp_executeDef12) 
								{
									//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									tmp = false;
								}
								
							}
							
							//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							break;
						}
						
						
						default:
						{
							//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							tmp = false;
							//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							break;
						}
						
					}
					
				}
				else
				{
					//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					tmp = false;
				}
				
				//line 478 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (tmp) 
				{
					//line 479 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					boolean isAllString = true;
					//line 480 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					boolean isAllInt = true;
					//line 481 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					boolean isAllObject = true;
					//line 482 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					boolean isAllEnum = true;
					//line 483 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					haxe.root.Array keys = new haxe.root.Array(new java.lang.Object[]{});
					//line 484 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					haxe.root.Array values = new haxe.root.Array(new java.lang.Object[]{});
					//line 485 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 485 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						int _g9 = 0;
						//line 485 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						while (( _g9 < arr1.length ))
						{
							//line 485 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object e18 = arr1.__get(_g9);
							//line 485 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							 ++ _g9;
							//line 486 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							{
								//line 486 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								hscript.ExprDef _g10 = ((hscript.ExprDef) (haxe.lang.Runtime.getField(e18, "e", true)) );
								//line 486 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								switch (_g10.index)
								{
									case 6:
									{
										//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
										java.lang.Object _g11 = _g10.params[1];
										//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
										java.lang.Object _g12 = _g10.params[2];
										//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
										{
											//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
											java.lang.String __temp_svar13 = (haxe.lang.Runtime.toString(_g10.params[0]));
											//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
											boolean __temp_executeDef14 = true;
											//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
											if (( __temp_svar13 != null )) 
											{
												//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
												switch (__temp_svar13.hashCode())
												{
													case 1953:
													{
														//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
														if (__temp_svar13.equals("=>")) 
														{
															//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
															__temp_executeDef14 = false;
															//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
															java.lang.Object eKey = _g11;
															//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
															java.lang.Object eValue = _g12;
															//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
															{
																//line 488 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
																java.lang.Object key = this.expr(eKey);
																//line 489 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
																java.lang.Object value = this.expr(eValue);
																//line 490 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
																isAllString = ( isAllString && ( key instanceof java.lang.String ) );
																//line 491 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
																isAllInt = ( isAllInt && haxe.lang.Runtime.isInt(key) );
																//line 492 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
																isAllObject = ( isAllObject && haxe.root.Reflect.isObject(key) );
																//line 493 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
																isAllEnum = ( isAllEnum && haxe.root.Reflect.isEnumValue(key) );
																//line 494 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
																keys.push(key);
																//line 495 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
																values.push(value);
															}
															
														}
														
														//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
														break;
													}
													
													
												}
												
											}
											
											//line 497 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
											if (__temp_executeDef14) 
											{
												//line 497 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
												throw ((java.lang.RuntimeException) (haxe.Exception.thrown("=> expected")) );
											}
											
										}
										
										//line 487 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
										break;
									}
									
									
									default:
									{
										//line 497 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
										throw ((java.lang.RuntimeException) (haxe.Exception.thrown("=> expected")) );
									}
									
								}
								
							}
							
						}
						
					}
					
					//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object map = null;
					//line 501 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (isAllInt) 
					{
						//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						map = new haxe.ds.IntMap();
					}
					else
					{
						//line 502 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (isAllString) 
						{
							//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							map = new haxe.ds.StringMap();
						}
						else
						{
							//line 503 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							if (isAllEnum) 
							{
								//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								map = new haxe.ds.EnumValueMap();
							}
							else
							{
								//line 504 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (isAllObject) 
								{
									//line 500 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									map = new haxe.ds.ObjectMap();
								}
								else
								{
									//line 505 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									throw ((java.lang.RuntimeException) (haxe.Exception.thrown("Inconsistent key types")) );
								}
								
							}
							
						}
						
					}
					
					//line 507 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 507 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						int _g13 = 0;
						//line 507 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						int _g14 = keys.length;
						//line 507 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						while (( _g13 < _g14 ))
						{
							//line 507 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							int n1 = _g13++;
							//line 508 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							(((haxe.IMap) (map) )).set(keys.__get(n1), values.__get(n1));
						}
						
					}
					
					//line 510 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return map;
				}
				else
				{
					//line 513 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					haxe.root.Array a = new haxe.root.Array();
					//line 514 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 514 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						int _g15 = 0;
						//line 514 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						while (( _g15 < arr1.length ))
						{
							//line 514 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object e19 = arr1.__get(_g15);
							//line 514 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							 ++ _g15;
							//line 515 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							a.push(this.expr(e19));
						}
						
					}
					
					//line 517 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return a;
				}
				
			}
			
			
			case 18:
			{
				//line 528 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String cl = haxe.lang.Runtime.toString(e1.params[0]);
				//line 528 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array<java.lang.Object> params2 = ((haxe.root.Array<java.lang.Object>) (e1.params[1]) );
				//line 529 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array a1 = new haxe.root.Array();
				//line 530 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 530 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					int _g16 = 0;
					//line 530 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					while (( _g16 < params2.length ))
					{
						//line 530 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object e20 = params2.__get(_g16);
						//line 530 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						 ++ _g16;
						//line 531 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						a1.push(this.expr(e20));
					}
					
				}
				
				//line 532 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return this.cnew(cl, a1);
			}
			
			
			case 19:
			{
				//line 533 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e23 = e1.params[0];
				//line 534 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(this.expr(e23))) );
			}
			
			
			case 20:
			{
				//line 535 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.CType _g17 = ((hscript.CType) (e1.params[2]) );
				//line 535 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e24 = e1.params[0];
				//line 535 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String n2 = haxe.lang.Runtime.toString(e1.params[1]);
				//line 535 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object ecatch = e1.params[3];
				//line 536 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				int old1 = this.declared.length;
				//line 537 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				boolean oldTry = this.inTry;
				//line 538 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				try 
				{
					//line 539 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					this.inTry = true;
					//line 540 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object v3 = this.expr(e24);
					//line 541 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					this.restore(old1);
					//line 542 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					this.inTry = oldTry;
					//line 543 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return v3;
				}
				catch (java.lang.Throwable _g18)
				{
					//line 544 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 544 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						haxe.NativeStackTrace.exception.set(((java.lang.Throwable) (_g18) ));
					}
					
					//line 544 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object _g19 = haxe.Exception.caught(_g18).unwrap();
					//line 538 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( _g19 instanceof hscript._Interp.Stop )) 
					{
						//line 544 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						hscript._Interp.Stop err = ((hscript._Interp.Stop) (_g19) );
						//line 545 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.inTry = oldTry;
						//line 546 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						throw ((java.lang.RuntimeException) (haxe.Exception.thrown(err)) );
					}
					else
					{
						//line 547 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object err1 = _g19;
						//line 549 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.restore(old1);
						//line 550 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.inTry = oldTry;
						//line 552 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object __temp_stmt8 = null;
						//line 552 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						{
							//line 552 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							java.lang.Object __temp_odecl4 = ((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).get(n2);
							//line 552 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_stmt8 = new haxe.lang.DynamicObject(new java.lang.String[]{"n", "old"}, new java.lang.Object[]{n2, __temp_odecl4}, new java.lang.String[]{}, new double[]{});
						}
						
						//line 552 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.declared.push(__temp_stmt8);
						//line 553 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).set(n2, new haxe.lang.DynamicObject(new java.lang.String[]{"r"}, new java.lang.Object[]{err1}, new java.lang.String[]{}, new double[]{}));
						//line 554 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object v4 = this.expr(ecatch);
						//line 555 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.restore(old1);
						//line 556 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						return v4;
					}
					
				}
				
				
			}
			
			
			case 21:
			{
				//line 558 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array<java.lang.Object> fl = ((haxe.root.Array<java.lang.Object>) (e1.params[0]) );
				//line 559 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object o = new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{});
				//line 560 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 560 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					int _g20 = 0;
					//line 560 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					while (( _g20 < fl.length ))
					{
						//line 560 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object f5 = fl.__get(_g20);
						//line 560 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						 ++ _g20;
						//line 561 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						this.set(o, haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(f5, "name", true)), this.expr(haxe.lang.Runtime.getField(f5, "e", true)));
					}
					
				}
				
				//line 562 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return o;
			}
			
			
			case 22:
			{
				//line 563 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object econd2 = e1.params[0];
				//line 563 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e110 = e1.params[1];
				//line 563 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e25 = e1.params[2];
				//line 564 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if (haxe.lang.Runtime.eq(this.expr(econd2), true)) 
				{
					//line 564 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return this.expr(e110);
				}
				else
				{
					//line 564 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					return this.expr(e25);
				}
				
			}
			
			
			case 23:
			{
				//line 565 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e26 = e1.params[0];
				//line 565 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array<java.lang.Object> cases = ((haxe.root.Array<java.lang.Object>) (e1.params[1]) );
				//line 565 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object def = e1.params[2];
				//line 566 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object val = this.expr(e26);
				//line 567 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				boolean match = false;
				//line 568 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 568 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					int _g21 = 0;
					//line 568 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					while (( _g21 < cases.length ))
					{
						//line 568 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						java.lang.Object c1 = cases.__get(_g21);
						//line 568 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						 ++ _g21;
						//line 569 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						{
							//line 569 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							int _g22 = 0;
							//line 569 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							haxe.root.Array<java.lang.Object> _g23 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(c1, "values", true)) );
							//line 569 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							while (( _g22 < _g23.length ))
							{
								//line 569 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								java.lang.Object v5 = _g23.__get(_g22);
								//line 569 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								 ++ _g22;
								//line 570 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								if (haxe.lang.Runtime.eq(this.expr(v5), val)) 
								{
									//line 571 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									match = true;
									//line 572 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
									break;
								}
								
							}
							
						}
						
						//line 574 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (match) 
						{
							//line 575 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							val = this.expr(haxe.lang.Runtime.getField(c1, "expr", true));
							//line 576 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							break;
						}
						
					}
					
				}
				
				//line 579 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if ( ! (match) ) 
				{
					//line 580 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					val = ( (( def == null )) ? (null) : (this.expr(def)) );
				}
				
				//line 581 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return val;
			}
			
			
			case 24:
			{
				//line 393 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object econd3 = e1.params[0];
				//line 393 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e27 = e1.params[1];
				//line 394 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				this.doWhileLoop(econd3, e27);
				//line 395 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return null;
			}
			
			
			case 25:
			{
				//line 582 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.String _g24 = haxe.lang.Runtime.toString(e1.params[0]);
				//line 582 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.root.Array<java.lang.Object> _g25 = ((haxe.root.Array<java.lang.Object>) (e1.params[1]) );
				//line 582 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e28 = e1.params[2];
				//line 583 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return this.expr(e28);
			}
			
			
			case 26:
			{
				//line 584 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				hscript.CType _g26 = ((hscript.CType) (e1.params[1]) );
				//line 584 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object e29 = e1.params[0];
				//line 585 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return this.expr(e29);
			}
			
			
		}
		
		//line 320 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return null;
	}
	
	
	public void doWhileLoop(java.lang.Object econd, java.lang.Object e)
	{
		//line 590 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		try 
		{
			//line 591 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			int old = this.declared.length;
			//line 592 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			label1:
			while (true)
			{
				//line 594 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				try 
				{
					//line 594 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					this.expr(e);
				}
				catch (java.lang.Throwable _g)
				{
					//line 595 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 595 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						haxe.NativeStackTrace.exception.set(((java.lang.Throwable) (_g) ));
					}
					
					//line 595 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object _g1 = haxe.Exception.caught(_g).unwrap();
					//line 593 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( _g1 instanceof hscript._Interp.Stop )) 
					{
						//line 595 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						hscript._Interp.Stop err = ((hscript._Interp.Stop) (_g1) );
						//line 596 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						switch (err)
						{
							case SBreak:
							{
								//line 598 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break label1;
							}
							
							
							case SContinue:
							{
								//line 597 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break;
							}
							
							
							case SReturn:
							{
								//line 599 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								throw ((java.lang.RuntimeException) (haxe.Exception.thrown(err)) );
							}
							
							
						}
						
					}
					else
					{
						//line 593 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						throw _g;
					}
					
				}
				
				
				//line 592 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				if ( ! ((haxe.lang.Runtime.eq(this.expr(econd), true))) ) 
				{
					//line 592 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					break;
				}
				
			}
			;
			//line 604 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			this.restore(old);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 590 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public void whileLoop(java.lang.Object econd, java.lang.Object e)
	{
		//line 607 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		try 
		{
			//line 608 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			int old = this.declared.length;
			//line 609 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			label1:
			while (haxe.lang.Runtime.eq(this.expr(econd), true))
			{
				//line 611 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				try 
				{
					//line 611 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					this.expr(e);
				}
				catch (java.lang.Throwable _g)
				{
					//line 612 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 612 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						haxe.NativeStackTrace.exception.set(((java.lang.Throwable) (_g) ));
					}
					
					//line 612 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object _g1 = haxe.Exception.caught(_g).unwrap();
					//line 610 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( _g1 instanceof hscript._Interp.Stop )) 
					{
						//line 612 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						hscript._Interp.Stop err = ((hscript._Interp.Stop) (_g1) );
						//line 613 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						switch (err)
						{
							case SBreak:
							{
								//line 615 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break label1;
							}
							
							
							case SContinue:
							{
								//line 614 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break;
							}
							
							
							case SReturn:
							{
								//line 616 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								throw ((java.lang.RuntimeException) (haxe.Exception.thrown(err)) );
							}
							
							
						}
						
					}
					else
					{
						//line 610 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						throw _g;
					}
					
				}
				
				
			}
			;
			//line 620 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			this.restore(old);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 607 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public java.lang.Object makeIterator(java.lang.Object v)
	{
		//line 627 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		try 
		{
			//line 627 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			v = ((java.lang.Object) (haxe.lang.Runtime.callField(v, "iterator", null)) );
		}
		catch (java.lang.Throwable _g)
		{
			//line 627 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			{
				//line 627 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				haxe.NativeStackTrace.exception.set(((java.lang.Throwable) (_g) ));
			}
			
		}
		
		
		//line 629 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (( ( haxe.lang.Runtime.getField(v, "hasNext", true) == null ) || ( haxe.lang.Runtime.getField(v, "next", true) == null ) )) 
		{
			//line 629 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			hscript.Error e = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidIterator(haxe.lang.Runtime.toString(v))) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
			//line 629 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e)) );
		}
		
		//line 630 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return v;
	}
	
	
	public void forLoop(java.lang.String n, java.lang.Object it, java.lang.Object e)
	{
		//line 633 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		try 
		{
			//line 634 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			int old = this.declared.length;
			//line 635 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			java.lang.Object __temp_stmt3 = null;
			//line 635 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			{
				//line 635 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object __temp_odecl1 = ((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).get(n);
				//line 635 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				__temp_stmt3 = new haxe.lang.DynamicObject(new java.lang.String[]{"n", "old"}, new java.lang.Object[]{n, __temp_odecl1}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 635 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			this.declared.push(__temp_stmt3);
			//line 636 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			java.lang.Object it1 = this.makeIterator(this.expr(it));
			//line 637 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			label1:
			while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(it1, "hasNext", null)) )))
			{
				//line 638 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				java.lang.Object __temp_stmt4 = null;
				//line 638 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				{
					//line 638 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object __temp_odecl2 = ((java.lang.Object) (haxe.lang.Runtime.callField(it1, "next", null)) );
					//line 638 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					__temp_stmt4 = new haxe.lang.DynamicObject(new java.lang.String[]{"r"}, new java.lang.Object[]{__temp_odecl2}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 638 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				((haxe.ds.StringMap<java.lang.Object>) (((haxe.IMap<java.lang.String, java.lang.Object>) (this.locals) )) ).set(n, __temp_stmt4);
				//line 640 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				try 
				{
					//line 640 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					this.expr(e);
				}
				catch (java.lang.Throwable _g)
				{
					//line 641 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					{
						//line 641 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						haxe.NativeStackTrace.exception.set(((java.lang.Throwable) (_g) ));
					}
					
					//line 641 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					java.lang.Object _g1 = haxe.Exception.caught(_g).unwrap();
					//line 639 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
					if (( _g1 instanceof hscript._Interp.Stop )) 
					{
						//line 641 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						hscript._Interp.Stop err = ((hscript._Interp.Stop) (_g1) );
						//line 642 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						switch (err)
						{
							case SBreak:
							{
								//line 644 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break label1;
							}
							
							
							case SContinue:
							{
								//line 643 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								break;
							}
							
							
							case SReturn:
							{
								//line 645 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
								throw ((java.lang.RuntimeException) (haxe.Exception.thrown(err)) );
							}
							
							
						}
						
					}
					else
					{
						//line 639 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						throw _g;
					}
					
				}
				
				
			}
			;
			//line 649 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			this.restore(old);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 633 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public final boolean isMap(java.lang.Object o)
	{
		//line 653 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return ( o instanceof haxe.IMap );
	}
	
	
	public final java.lang.Object getMapValue(java.lang.Object map, java.lang.Object key)
	{
		//line 657 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return (((haxe.IMap) (map) )).get(key);
	}
	
	
	public final void setMapValue(java.lang.Object map, java.lang.Object key, java.lang.Object value)
	{
		//line 661 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		(((haxe.IMap) (map) )).set(key, value);
	}
	
	
	public java.lang.Object get(java.lang.Object o, java.lang.String f)
	{
		//line 665 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (( o == null )) 
		{
			//line 665 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			hscript.Error e = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidAccess(f)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
			//line 665 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e)) );
		}
		
		//line 675 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return haxe.root.Reflect.getProperty(o, f);
	}
	
	
	public java.lang.Object set(java.lang.Object o, java.lang.String f, java.lang.Object v)
	{
		//line 681 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (( o == null )) 
		{
			//line 681 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			hscript.Error e = new hscript.Error(((hscript.ErrorDef) (hscript.ErrorDef.EInvalidAccess(f)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmin", true)) ), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "pmax", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.curExpr, "origin", true)), ((int) (haxe.lang.Runtime.getField_f(this.curExpr, "line", true)) ));
			//line 681 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(e)) );
		}
		
		//line 682 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		haxe.root.Reflect.setProperty(o, f, v);
		//line 683 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return v;
	}
	
	
	public java.lang.Object fcall(java.lang.Object o, java.lang.String f, haxe.root.Array args)
	{
		//line 687 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return this.call(o, this.get(o, f), args);
	}
	
	
	public java.lang.Object call(java.lang.Object o, java.lang.Object f, haxe.root.Array args)
	{
		//line 691 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return haxe.root.Reflect.callMethod(o, f, args);
	}
	
	
	public java.lang.Object cnew(java.lang.String cl, haxe.root.Array args)
	{
		//line 695 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		java.lang.Class c = haxe.root.Type.resolveClass(cl);
		//line 696 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		if (( ((java.lang.Object) (c) ) == ((java.lang.Object) (null) ) )) 
		{
			//line 696 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			c = ((java.lang.Class) (this.resolve(cl)) );
		}
		
		//line 697 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return ((java.lang.Object) (haxe.root.Type.createInstance(((java.lang.Class) (c) ), ((haxe.root.Array) (args) ))) );
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			boolean __temp_executeDef1 = true;
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (( field != null )) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				switch (field.hashCode())
				{
					case 1125617749:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("curExpr")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.curExpr = ((java.lang.Object) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 95472323:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("depth")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.depth = ((int) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1495129567:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("returnValue")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.returnValue = ((java.lang.Object) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (__temp_executeDef1) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			boolean __temp_executeDef1 = true;
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (( field != null )) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				switch (field.hashCode())
				{
					case 1125617749:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("curExpr")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.curExpr = ((java.lang.Object) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -82477705:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("variables")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.variables = ((haxe.ds.StringMap) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1495129567:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("returnValue")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.returnValue = ((java.lang.Object) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1097462168:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("locals")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.locals = ((haxe.ds.StringMap<java.lang.Object>) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 567961658:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("declared")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.declared = ((haxe.root.Array<java.lang.Object>) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1388953525:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("binops")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.binops = ((haxe.ds.StringMap<haxe.lang.Function>) (value) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 100331094:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("inTry")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.inTry = haxe.lang.Runtime.toBool(((java.lang.Boolean) (value) ));
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 95472323:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("depth")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.depth = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return value;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (__temp_executeDef1) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			boolean __temp_executeDef1 = true;
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (( field != null )) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				switch (field.hashCode())
				{
					case 3058269:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("cnew")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "cnew")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -82477705:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("variables")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.variables;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 3045982:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("call")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "call")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1097462168:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("locals")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.locals;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 97245124:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("fcall")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "fcall")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1388953525:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("binops")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.binops;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 113762:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("set")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 95472323:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("depth")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.depth;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 102230:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("get")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 100331094:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("inTry")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.inTry;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -2135452681:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("setMapValue")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setMapValue")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 567961658:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("declared")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.declared;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -2046872853:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("getMapValue")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getMapValue")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1495129567:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("returnValue")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.returnValue;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 100472786:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("isMap")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isMap")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1125617749:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("curExpr")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.curExpr;
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -678413555:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("forLoop")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "forLoop")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 88869096:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("resetVariables")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "resetVariables")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1789680516:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("makeIterator")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "makeIterator")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 718070673:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("posInfos")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "posInfos")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1883830923:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("whileLoop")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "whileLoop")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1948317570:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("initOps")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "initOps")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 475465002:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("doWhileLoop")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "doWhileLoop")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -905797787:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("setVar")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setVar")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 3127797:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("expr")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "expr")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1408204561:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("assign")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "assign")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1097368044:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("resolve")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "resolve")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -369882320:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("assignOp")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "assignOp")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1098088595:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("rethrow")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "rethrow")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1258175508:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("evalAssignOp")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "evalAssignOp")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 96784904:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("error")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "error")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1339651217:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("increment")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "increment")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1097519758:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("restore")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "restore")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1319569547:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("execute")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "execute")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1201687819:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("duplicate")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "duplicate")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1942673285:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("exprReturn")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "exprReturn")) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (__temp_executeDef1) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			boolean __temp_executeDef1 = true;
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (( field != null )) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				switch (field.hashCode())
				{
					case 1125617749:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("curExpr")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((double) (haxe.lang.Runtime.toDouble(this.curExpr)) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 95472323:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("depth")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((double) (this.depth) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1495129567:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("returnValue")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((double) (haxe.lang.Runtime.toDouble(this.returnValue)) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (__temp_executeDef1) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		{
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			boolean __temp_executeDef1 = true;
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (( field != null )) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				switch (field.hashCode())
				{
					case 3058269:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("cnew")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.cnew(haxe.lang.Runtime.toString(dynargs[0]), ((haxe.root.Array) (dynargs[1]) ));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 88869096:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("resetVariables")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.resetVariables();
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 3045982:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("call")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.call(dynargs[0], dynargs[1], ((haxe.root.Array) (dynargs[2]) ));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 718070673:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("posInfos")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.posInfos();
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 97245124:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("fcall")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.fcall(dynargs[0], haxe.lang.Runtime.toString(dynargs[1]), ((haxe.root.Array) (dynargs[2]) ));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1948317570:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("initOps")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.initOps();
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 113762:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("set")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.set(dynargs[0], haxe.lang.Runtime.toString(dynargs[1]), dynargs[2]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -905797787:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("setVar")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.setVar(haxe.lang.Runtime.toString(dynargs[0]), dynargs[1]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 102230:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("get")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.get(dynargs[0], haxe.lang.Runtime.toString(dynargs[1]));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1408204561:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("assign")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.assign(dynargs[0], dynargs[1]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -2135452681:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("setMapValue")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.setMapValue(dynargs[0], dynargs[1], dynargs[2]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -369882320:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("assignOp")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.assignOp(haxe.lang.Runtime.toString(dynargs[0]), ((haxe.lang.Function) (dynargs[1]) ));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -2046872853:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("getMapValue")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.getMapValue(dynargs[0], dynargs[1]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1258175508:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("evalAssignOp")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.evalAssignOp(haxe.lang.Runtime.toString(dynargs[0]), ((haxe.lang.Function) (dynargs[1]) ), dynargs[2], dynargs[3]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 100472786:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("isMap")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.isMap(dynargs[0]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1339651217:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("increment")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.increment(dynargs[0], haxe.lang.Runtime.toBool(((java.lang.Boolean) (dynargs[1]) )), ((int) (haxe.lang.Runtime.toInt(dynargs[2])) ));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -678413555:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("forLoop")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.forLoop(haxe.lang.Runtime.toString(dynargs[0]), dynargs[1], dynargs[2]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1319569547:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("execute")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.execute(dynargs[0]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1789680516:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("makeIterator")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.makeIterator(dynargs[0]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1942673285:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("exprReturn")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.exprReturn(dynargs[0]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case -1883830923:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("whileLoop")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.whileLoop(dynargs[0], dynargs[1]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1201687819:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("duplicate")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return ((haxe.ds.StringMap<java.lang.Object>) (this.duplicate(((haxe.ds.StringMap<java.lang.Object>) (dynargs[0]) ))) );
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 475465002:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("doWhileLoop")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.doWhileLoop(dynargs[0], dynargs[1]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1097519758:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("restore")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.restore(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 3127797:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("expr")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.expr(dynargs[0]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 96784904:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("error")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.error(((hscript.ErrorDef) (dynargs[0]) ), ( (( dynargs.length > 1 )) ? (dynargs[1]) : (null) ));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1097368044:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("resolve")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							return this.resolve(haxe.lang.Runtime.toString(dynargs[0]));
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
					case 1098088595:
					{
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						if (field.equals("rethrow")) 
						{
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							__temp_executeDef1 = false;
							//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
							this.rethrow(dynargs[0]);
						}
						
						//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
			if (__temp_executeDef1) 
			{
				//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		baseArr.push("curExpr");
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		baseArr.push("returnValue");
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		baseArr.push("declared");
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		baseArr.push("inTry");
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		baseArr.push("depth");
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		baseArr.push("binops");
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		baseArr.push("locals");
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		baseArr.push("variables");
		//line 33 "C:\\HaxeToolkit\\haxe\\lib\\hscript\\2,5,0\\hscript\\Interp.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


