// Generated by Haxe 4.2.2
package sys.net;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Address extends haxe.lang.HxObject
{
	public Address(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Address()
	{
		//line 33 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		sys.net.Address.__hx_ctor_sys_net_Address(this);
	}
	
	
	protected static void __hx_ctor_sys_net_Address(sys.net.Address __hx_this)
	{
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		__hx_this.host = 0;
		//line 35 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		__hx_this.port = 0;
	}
	
	
	public int host;
	
	public int port;
	
	public sys.net.Host getHost()
	{
		//line 39 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		sys.net.Host h = new sys.net.Host(haxe.lang.Runtime.toString("127.0.0.1"));
		//line 40 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		h.ip = this.host;
		//line 41 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		return h;
	}
	
	
	public int compare(sys.net.Address a)
	{
		//line 45 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		int dh = ( a.host - this.host );
		//line 46 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		if (( dh != 0 )) 
		{
			//line 47 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			return dh;
		}
		
		//line 48 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		int dp = ( a.port - this.port );
		//line 49 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		if (( dp != 0 )) 
		{
			//line 50 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			return dp;
		}
		
		//line 51 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		return 0;
	}
	
	
	public sys.net.Address clone()
	{
		//line 55 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		sys.net.Address c = new sys.net.Address();
		//line 56 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		c.host = this.host;
		//line 57 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		c.port = this.port;
		//line 58 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		return c;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				switch (field.hashCode())
				{
					case 3446913:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("port")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							this.port = ((int) (value) );
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return value;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case 3208616:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("host")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							this.host = ((int) (value) );
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return value;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				switch (field.hashCode())
				{
					case 3446913:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("port")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							this.port = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return value;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case 3208616:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("host")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							this.host = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return value;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				switch (field.hashCode())
				{
					case 94756189:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("clone")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "clone")) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case 3208616:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("host")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return this.host;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case 950484197:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("compare")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "compare")) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case 3446913:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("port")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return this.port;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case -75473378:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("getHost")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getHost")) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				switch (field.hashCode())
				{
					case 3446913:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("port")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return ((double) (this.port) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case 3208616:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("host")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return ((double) (this.host) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				switch (field.hashCode())
				{
					case 94756189:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("clone")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return this.clone();
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case -75473378:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("getHost")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return this.getHost();
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
					case 950484197:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						if (field.equals("compare")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
							return this.compare(((sys.net.Address) (dynargs[0]) ));
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		baseArr.push("port");
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		baseArr.push("host");
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\sys\\net\\Address.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


