// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.ddl {
	public class CreateViewClause : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.IClause {
		
		static CreateViewClause() {
			global::nMorph.framework.orm.common.ddl.CreateViewClause.__rtti = "<class path=\"nMorph.framework.orm.common.ddl.CreateViewClause\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.IClause\"/>\n\t<CurrentDDL><c path=\"nMorph.framework.orm.lang.DDL\"/></CurrentDDL>\n\t<ViewName><c path=\"String\"/></ViewName>\n\t<InnerSQL><c path=\"nMorph.framework.orm.lang.SQL\"/></InnerSQL>\n\t<SELECT public=\"1\" set=\"method\" line=\"28\"><f a=\"Sentences\">\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.interfaces.ISentence\"/></c>\n\t<c path=\"nMorph.framework.orm.common.clauses.SelectClause\"/>\n</f></SELECT>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"35\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<SCRIPT public=\"1\" set=\"method\" line=\"56\"><f a=\"\"><c path=\"String\"/></f></SCRIPT>\n\t<Execute public=\"1\" set=\"method\" line=\"60\"><f a=\"\"><d/></f></Execute>\n\t<Register public=\"1\" set=\"method\" line=\"64\"><f a=\"context\">\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<x path=\"Void\"/>\n</f></Register>\n\t<Queue public=\"1\" set=\"method\" line=\"68\"><f a=\"queue\">\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n</f></Queue>\n\t<Bulk public=\"1\" set=\"method\" line=\"73\"><f a=\"bulk\">\n\t<c path=\"nMorph.framework.orm.tools.BulkRun\"/>\n\t<c path=\"nMorph.framework.orm.tools.BulkRun\"/>\n</f></Bulk>\n\t<ReadValue public=\"1\" set=\"method\" line=\"78\"><f a=\"\"><d/></f></ReadValue>\n\t<ReadTable public=\"1\" set=\"method\" line=\"83\"><f a=\"\"><c path=\"nMorph.framework.orm.client.QueryTable\"/></f></ReadTable>\n\t<Read public=\"1\" params=\"T\" set=\"method\" line=\"88\"><f a=\"cl:?context\">\n\t<x path=\"Class\"><c path=\"Read.T\"/></x>\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<c path=\"Array\"><c path=\"Read.T\"/></c>\n</f></Read>\n\t<ReadOne public=\"1\" params=\"T\" set=\"method\" line=\"93\"><f a=\"cl:?context\">\n\t<x path=\"Class\"><c path=\"ReadOne.T\"/></x>\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<c path=\"ReadOne.T\"/>\n</f></ReadOne>\n\t<new public=\"1\" set=\"method\" line=\"23\"><f a=\"CurrentDDL:ViewName\">\n\t<c path=\"nMorph.framework.orm.lang.DDL\"/>\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public CreateViewClause(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public CreateViewClause(global::nMorph.framework.orm.lang.DDL CurrentDDL, string ViewName) {
			global::nMorph.framework.orm.common.ddl.CreateViewClause.__hx_ctor_nMorph_framework_orm_common_ddl_CreateViewClause(this, CurrentDDL, ViewName);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_ddl_CreateViewClause(global::nMorph.framework.orm.common.ddl.CreateViewClause __hx_this, global::nMorph.framework.orm.lang.DDL CurrentDDL, string ViewName) {
			__hx_this.CurrentDDL = CurrentDDL;
			__hx_this.ViewName = ViewName;
		}
		
		
		public static string __rtti;
		
		public global::nMorph.framework.orm.lang.DDL CurrentDDL;
		
		public string ViewName;
		
		public global::nMorph.framework.orm.lang.SQL InnerSQL;
		
		public virtual global::nMorph.framework.orm.common.clauses.SelectClause SELECT(global::Array<object> Sentences) {
			this.InnerSQL = new global::nMorph.framework.orm.lang.SQL();
			global::nMorph.framework.orm.common.clauses.SelectClause df = new global::nMorph.framework.orm.common.clauses.SelectClause(((global::nMorph.framework.orm.lang.SQL) (this.InnerSQL) ), ((global::Array<object>) (Sentences) ));
			this.CurrentDDL.AddClause(df);
			return df;
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			unchecked {
				switch (this.CurrentDDL.getCurrentEngine()._hx_index) {
					case 0:
					{
						this.CurrentDDL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CREATE VIEW \"", this.ViewName), "\" AS "));
						this.CurrentDDL.AddBlock(this.InnerSQL.GenerateAll());
						break;
					}
					
					
					case 1:
					{
						this.CurrentDDL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CREATE VIEW \"", this.ViewName), "\" AS "));
						this.CurrentDDL.AddBlock(this.InnerSQL.GenerateAll());
						break;
					}
					
					
					case 2:
					{
						this.CurrentDDL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CREATE VIEW \"", this.ViewName), "\" AS "));
						this.CurrentDDL.AddBlock(this.InnerSQL.GenerateAll());
						break;
					}
					
					
					case 3:
					{
						this.CurrentDDL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CREATE VIEW \"", this.ViewName), "\" AS "));
						this.CurrentDDL.AddBlock(this.InnerSQL.GenerateAll());
						break;
					}
					
					
					case 4:
					{
						this.CurrentDDL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CREATE VIEW \"", this.ViewName), "\" AS "));
						this.CurrentDDL.AddBlock(this.InnerSQL.GenerateAll());
						break;
					}
					
					
				}
				
			}
		}
		
		
		public virtual string SCRIPT() {
			return this.CurrentDDL.GenerateAll();
		}
		
		
		public virtual object Execute() {
			return this.CurrentDDL.Execute();
		}
		
		
		public virtual void Register(global::nMorph.framework.orm.tools.Context context) {
			unchecked {
				global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Not Valid Method");
			}
		}
		
		
		public virtual global::Array<object> Queue(global::Array<object> queue) {
			unchecked {
				global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Not Valid Method");
				return null;
			}
		}
		
		
		public virtual global::nMorph.framework.orm.tools.BulkRun Bulk(global::nMorph.framework.orm.tools.BulkRun bulk) {
			unchecked {
				global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Not Valid Method");
				return null;
			}
		}
		
		
		public virtual object ReadValue() {
			unchecked {
				global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Not Valid Method");
				return null;
			}
		}
		
		
		public virtual global::nMorph.framework.orm.client.QueryTable ReadTable() {
			unchecked {
				global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Not Valid Method");
				return null;
			}
		}
		
		
		public virtual global::Array<T> Read<T>(global::System.Type cl, global::nMorph.framework.orm.tools.Context context) {
			unchecked {
				global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Not Valid Method");
				return null;
			}
		}
		
		
		public virtual T ReadOne<T>(global::System.Type cl, global::nMorph.framework.orm.tools.Context context) {
			unchecked {
				global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Not Valid Method");
				return default(T);
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 468676152:
					{
						this.InnerSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					case 1607672688:
					{
						this.ViewName = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1037559379:
					{
						this.CurrentDDL = ((global::nMorph.framework.orm.lang.DDL) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1344235664:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadOne", 1344235664)) );
					}
					
					
					case 914388854:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Read", 914388854)) );
					}
					
					
					case 2107499704:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadTable", 2107499704)) );
					}
					
					
					case 611494939:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadValue", 611494939)) );
					}
					
					
					case 737753906:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Bulk", 737753906)) );
					}
					
					
					case 1897397617:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Queue", 1897397617)) );
					}
					
					
					case 709976707:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Register", 709976707)) );
					}
					
					
					case 425603605:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Execute", 425603605)) );
					}
					
					
					case 2044918283:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT", 2044918283)) );
					}
					
					
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 481675004:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SELECT", 481675004)) );
					}
					
					
					case 468676152:
					{
						return this.InnerSQL;
					}
					
					
					case 1607672688:
					{
						return this.ViewName;
					}
					
					
					case 1037559379:
					{
						return this.CurrentDDL;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1344235664:
					{
						return this.ReadOne<object>(((global::System.Type) (dynargs[0]) ), ((global::nMorph.framework.orm.tools.Context) (( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )) ));
					}
					
					
					case 914388854:
					{
						return this.Read<object>(((global::System.Type) (dynargs[0]) ), ((global::nMorph.framework.orm.tools.Context) (( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )) ));
					}
					
					
					case 2107499704:
					{
						return this.ReadTable();
					}
					
					
					case 611494939:
					{
						return this.ReadValue();
					}
					
					
					case 737753906:
					{
						return this.Bulk(((global::nMorph.framework.orm.tools.BulkRun) (dynargs[0]) ));
					}
					
					
					case 1897397617:
					{
						return this.Queue(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					case 709976707:
					{
						this.Register(((global::nMorph.framework.orm.tools.Context) (dynargs[0]) ));
						break;
					}
					
					
					case 425603605:
					{
						return this.Execute();
					}
					
					
					case 2044918283:
					{
						return this.SCRIPT();
					}
					
					
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 481675004:
					{
						return this.SELECT(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("InnerSQL");
			baseArr.push("ViewName");
			baseArr.push("CurrentDDL");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


