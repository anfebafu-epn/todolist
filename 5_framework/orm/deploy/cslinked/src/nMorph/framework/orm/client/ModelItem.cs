// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.client {
	public class ModelItem<T> : global::haxe.lang.HxObject, global::nMorph.framework.orm.client.ModelItem {
		
		static bool __hx_init_called = false;
		static ModelItem() {
			if(global::nMorph.framework.orm.client.ModelItem<object>.__hx_init_called) return;
			global::nMorph.framework.orm.client.ModelItem<object>.__hx_init_called = true;
			{
				global::nMorph.framework.orm.client.ModelItem<object>.__rtti = "<class path=\"nMorph.framework.orm.client.ModelItem\" params=\"T\">\n\t<it public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"nMorph.framework.orm.client.ModelItem.T\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</it>\n\t<set_it set=\"method\" line=\"17\"><f a=\"value\">\n\t<c path=\"nMorph.framework.orm.client.ModelItem.T\"/>\n\t<c path=\"nMorph.framework.orm.client.ModelItem.T\"/>\n</f></set_it>\n\t<get_it set=\"method\" line=\"21\"><f a=\"\"><c path=\"nMorph.framework.orm.client.ModelItem.T\"/></f></get_it>\n\t<Include public=\"1\" set=\"method\" line=\"26\"><f a=\"clause:laClase:context\">\n\t<c path=\"nMorph.framework.orm.interfaces.IClause\"/>\n\t<d/>\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<x path=\"Void\"/>\n</f></Include>\n\t<Save public=\"1\" set=\"method\" line=\"49\"><f a=\"queue\">\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n</f></Save>\n\t<Clear public=\"1\" set=\"method\" line=\"58\"><f a=\"\"><x path=\"Void\"/></f></Clear>\n\t<new public=\"1\" set=\"method\" line=\"66\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
			}
			
		}
		
		
		public ModelItem(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ModelItem() {
			global::nMorph.framework.orm.client.ModelItem<object>.__hx_ctor_nMorph_framework_orm_client_ModelItem<T>(((global::nMorph.framework.orm.client.ModelItem<T>) (this) ));
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_client_ModelItem<T_c>(global::nMorph.framework.orm.client.ModelItem<T_c> __hx_this) {
		}
		
		
		public static object __hx_cast<T_c_c>(global::nMorph.framework.orm.client.ModelItem me) {
			return ( (( me != null )) ? (me.nMorph_framework_orm_client_ModelItem_cast<T_c_c>()) : default(object) );
		}
		
		
		public static string __rtti;
		
		public virtual object nMorph_framework_orm_client_ModelItem_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::nMorph.framework.orm.client.ModelItem<T_c> new_me = new global::nMorph.framework.orm.client.ModelItem<T_c>(global::haxe.lang.EmptyObject.EMPTY);
			global::Array<string> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = fields[i++];
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public T it;
		
		public virtual T set_it(T @value) {
			return this.it = @value;
		}
		
		
		public virtual T get_it() {
			return this.it;
		}
		
		
		public virtual void Include(global::nMorph.framework.orm.interfaces.IClause clause, object laClase, global::nMorph.framework.orm.tools.Context context) {
			unchecked {
				global::System.Type clase = global::Type.getClass<object>(((object) (laClase) ));
				string name = global::Type.getClassName(clase);
				global::System.Type type = global::Type.resolveClass(name);
				T item = clause.ReadOne<T>(((global::System.Type) (type) ), ((global::nMorph.framework.orm.tools.Context) (context) ));
				this.set_it(item);
				if (( this.get_it() is global::nMorph.framework.orm.client.ModelObject )) {
					global::nMorph.framework.orm.client.ModelObject mo = ((global::nMorph.framework.orm.client.ModelObject) (((object) (this.get_it()) )) );
					mo.set_TrackChanges(true);
					mo.set_ObjectEditType(global::nMorph.framework.orm.common.enums.ObjectEditTypeEnum.NOCHANGE);
					mo.set_ObjectSource(global::nMorph.framework.orm.common.enums.ObjectSourceTypeEnum.DB);
				}
				else {
					global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Objects should be ModelObjects");
				}
				
			}
		}
		
		
		public virtual global::Array<object> Save(global::Array<object> queue) {
			if (global::haxe.lang.Runtime.eq(this.get_it(), default(T))) {
				return queue;
			}
			
			if (( this.get_it() is global::nMorph.framework.orm.client.ModelObject )) {
				global::nMorph.framework.orm.client.ModelObject mo = ((global::nMorph.framework.orm.client.ModelObject) (((object) (this.get_it()) )) );
				queue = mo.Save(queue);
			}
			
			return queue;
		}
		
		
		public virtual void Clear() {
			if (global::haxe.lang.Runtime.eq(this.get_it(), default(T))) {
				return;
			}
			
			if (( this.get_it() is global::nMorph.framework.orm.client.ModelObject )) {
				global::nMorph.framework.orm.client.ModelObject mo = ((global::nMorph.framework.orm.client.ModelObject) (((object) (this.get_it()) )) );
				mo.Clear();
			}
			
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 23531:
					{
						if (handleProperties) {
							this.set_it(global::haxe.lang.Runtime.genericCast<T>(((object) (@value) )));
							return ((double) (global::haxe.lang.Runtime.toDouble(((object) (@value) ))) );
						}
						else {
							this.it = global::haxe.lang.Runtime.genericCast<T>(((object) (@value) ));
							return ((double) (global::haxe.lang.Runtime.toDouble(((object) (@value) ))) );
						}
						
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 23531:
					{
						if (handleProperties) {
							this.set_it(global::haxe.lang.Runtime.genericCast<T>(@value));
							return @value;
						}
						else {
							this.it = global::haxe.lang.Runtime.genericCast<T>(@value);
							return @value;
						}
						
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1535697261:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Clear", 1535697261)) );
					}
					
					
					case 925284189:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Save", 925284189)) );
					}
					
					
					case 524822024:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Include", 524822024)) );
					}
					
					
					case 590345012:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_it", 590345012)) );
					}
					
					
					case 1870153640:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_it", 1870153640)) );
					}
					
					
					case 23531:
					{
						return ( (handleProperties) ? (this.get_it()) : (this.it) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 23531:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(((object) (( (handleProperties) ? (this.get_it()) : (this.it) )) ))) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1535697261:
					{
						this.Clear();
						break;
					}
					
					
					case 925284189:
					{
						return this.Save(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					case 524822024:
					{
						this.Include(((global::nMorph.framework.orm.interfaces.IClause) (dynargs[0]) ), dynargs[1], ((global::nMorph.framework.orm.tools.Context) (dynargs[2]) ));
						break;
					}
					
					
					case 590345012:
					{
						return this.get_it();
					}
					
					
					case 1870153640:
					{
						return this.set_it(global::haxe.lang.Runtime.genericCast<T>(dynargs[0]));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("it");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.client {
	[global::haxe.lang.GenericInterface(typeof(global::nMorph.framework.orm.client.ModelItem<object>))]
	public interface ModelItem : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object nMorph_framework_orm_client_ModelItem_cast<T_c>();
		
		void Include(global::nMorph.framework.orm.interfaces.IClause clause, object laClase, global::nMorph.framework.orm.tools.Context context);
		
		global::Array<object> Save(global::Array<object> queue);
		
		void Clear();
		
	}
}


