// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.ddl {
	public class DefaultClause : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.IColumnDefinition {
		
		public DefaultClause(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public DefaultClause(string ColumnConstraint, global::nMorph.framework.orm.common.enums.DefaultTypeEnum DefaultTypeEnum, string Value, global::haxe.lang.Null<int> ValueInt, global::haxe.lang.Null<double> ValueDouble, global::haxe.lang.Null<bool> ValueBool) {
			global::nMorph.framework.orm.common.ddl.DefaultClause.__hx_ctor_nMorph_framework_orm_common_ddl_DefaultClause(this, ColumnConstraint, DefaultTypeEnum, Value, ValueInt, ValueDouble, ValueBool);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_ddl_DefaultClause(global::nMorph.framework.orm.common.ddl.DefaultClause __hx_this, string ColumnConstraint, global::nMorph.framework.orm.common.enums.DefaultTypeEnum DefaultTypeEnum, string Value, global::haxe.lang.Null<int> ValueInt, global::haxe.lang.Null<double> ValueDouble, global::haxe.lang.Null<bool> ValueBool) {
			__hx_this.DefaultTypeEnum = DefaultTypeEnum;
			__hx_this.ColumnConstraint = ColumnConstraint;
			__hx_this.Value = Value;
			__hx_this.ValueInt = ValueInt;
			__hx_this.ValueDouble = ValueDouble;
			__hx_this.ValueBool = (ValueBool).@value;
			__hx_this.DatabaseEngineEnum = global::nMorph.framework.orm.configuration.Configuration.Data.get_CurrentDatabaseConnection().get_DatabaseEngine();
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.DefaultClause DefaulVarChar(string ColumnConstraint, string Value) {
			global::nMorph.framework.orm.common.ddl.DefaultClause DefaultClause = new global::nMorph.framework.orm.common.ddl.DefaultClause(((string) (ColumnConstraint) ), ((global::nMorph.framework.orm.common.enums.DefaultTypeEnum) (global::nMorph.framework.orm.common.enums.DefaultTypeEnum.DEFVARCHAR) ), ((string) (Value) ), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<double>), default(global::haxe.lang.Null<bool>));
			return DefaultClause;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.DefaultClause DefaulInt(string ColumnConstraint, int Value) {
			global::nMorph.framework.orm.common.ddl.DefaultClause DefaultClause = new global::nMorph.framework.orm.common.ddl.DefaultClause(((string) (ColumnConstraint) ), ((global::nMorph.framework.orm.common.enums.DefaultTypeEnum) (global::nMorph.framework.orm.common.enums.DefaultTypeEnum.DEFINT) ), default(string), new global::haxe.lang.Null<int>(Value, true), default(global::haxe.lang.Null<double>), default(global::haxe.lang.Null<bool>));
			return DefaultClause;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.DefaultClause DefaulDouble(string ColumnConstraint, double Value) {
			global::nMorph.framework.orm.common.ddl.DefaultClause DefaultClause = new global::nMorph.framework.orm.common.ddl.DefaultClause(((string) (ColumnConstraint) ), ((global::nMorph.framework.orm.common.enums.DefaultTypeEnum) (global::nMorph.framework.orm.common.enums.DefaultTypeEnum.DEFDOUBLE) ), default(string), default(global::haxe.lang.Null<int>), new global::haxe.lang.Null<double>(Value, true), default(global::haxe.lang.Null<bool>));
			return DefaultClause;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.DefaultClause DefaulDate(string ColumnConstraint) {
			global::nMorph.framework.orm.common.ddl.DefaultClause DefaultClause = new global::nMorph.framework.orm.common.ddl.DefaultClause(((string) (ColumnConstraint) ), ((global::nMorph.framework.orm.common.enums.DefaultTypeEnum) (global::nMorph.framework.orm.common.enums.DefaultTypeEnum.DEFDATE) ), default(string), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<double>), default(global::haxe.lang.Null<bool>));
			return DefaultClause;
		}
		
		
		public static global::nMorph.framework.orm.common.ddl.DefaultClause DefaulBool(string ColumnConstraint, bool Value) {
			global::nMorph.framework.orm.common.ddl.DefaultClause DefaultClause = new global::nMorph.framework.orm.common.ddl.DefaultClause(((string) (ColumnConstraint) ), ((global::nMorph.framework.orm.common.enums.DefaultTypeEnum) (global::nMorph.framework.orm.common.enums.DefaultTypeEnum.DEFBOOL) ), default(string), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<double>), new global::haxe.lang.Null<bool>(Value, true));
			return DefaultClause;
		}
		
		
		public global::nMorph.framework.orm.common.enums.DefaultTypeEnum DefaultTypeEnum;
		
		public string Value;
		
		public global::nMorph.framework.orm.configuration.DatabaseEngineEnum DatabaseEngineEnum;
		
		public global::haxe.lang.Null<int> ValueInt;
		
		public global::haxe.lang.Null<double> ValueDouble;
		
		public bool ValueBool;
		
		public string ColumnConstraint;
		
		public virtual void RegisterQuery(global::nMorph.framework.orm.interfaces.ILang CurrentDDL) {
			this.DatabaseEngineEnum = global::nMorph.framework.orm.configuration.Configuration.Data.get_CurrentDatabaseConnection().get_DatabaseEngine();
		}
		
		
		public virtual string SCRIPT_PART(string args) {
			unchecked {
				switch (this.DatabaseEngineEnum._hx_index) {
					case 0:
					{
						switch (this.DefaultTypeEnum._hx_index) {
							case 0:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" CONSTRAINT \"", this.ColumnConstraint), "\" DEFAULT \'"), this.Value), "\'  ");
							}
							
							
							case 1:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" CONSTRAINT \"", this.ColumnConstraint), "\" DEFAULT "), global::haxe.lang.Runtime.toString((this.ValueInt).toDynamic())), " ");
							}
							
							
							case 2:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" CONSTRAINT \"", this.ColumnConstraint), "\" DEFAULT "), global::haxe.lang.Runtime.toString((this.ValueDouble).toDynamic())), " ");
							}
							
							
							case 3:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" CONSTRAINT \"", this.ColumnConstraint), "\" DEFAULT CURRENT_TIMESTAMP");
							}
							
							
							case 4:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" CONSTRAINT \"", this.ColumnConstraint), "\" DEFAULT \'"), global::Std.@string(this.ValueBool)), "\' ");
							}
							
							
						}
						
						break;
					}
					
					
					case 1:
					{
						switch (this.DefaultTypeEnum._hx_index) {
							case 0:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT \'", this.Value), "\'  ");
							}
							
							
							case 1:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::haxe.lang.Runtime.toString((this.ValueInt).toDynamic())), " ");
							}
							
							
							case 2:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::haxe.lang.Runtime.toString((this.ValueDouble).toDynamic())), " ");
							}
							
							
							case 3:
							{
								return " DEFAULT CURRENT_TIMESTAMP ";
							}
							
							
							case 4:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::Std.@string(this.ValueBool)), " ");
							}
							
							
						}
						
						break;
					}
					
					
					case 2:
					{
						switch (this.DefaultTypeEnum._hx_index) {
							case 0:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT \'", this.Value), "\'  ");
							}
							
							
							case 1:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::haxe.lang.Runtime.toString((this.ValueInt).toDynamic())), " ");
							}
							
							
							case 2:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::haxe.lang.Runtime.toString((this.ValueDouble).toDynamic())), " ");
							}
							
							
							case 3:
							{
								return " DEFAULT CURRENT_TIMESTAMP";
							}
							
							
							case 4:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::Std.@string(this.ValueBool)), " ");
							}
							
							
						}
						
						break;
					}
					
					
					case 3:
					{
						switch (this.DefaultTypeEnum._hx_index) {
							case 0:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT \'", this.Value), "\'  ");
							}
							
							
							case 1:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::haxe.lang.Runtime.toString((this.ValueInt).toDynamic())), " ");
							}
							
							
							case 2:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::haxe.lang.Runtime.toString((this.ValueDouble).toDynamic())), " ");
							}
							
							
							case 3:
							{
								return " default (now() at time zone \'utc\') ";
							}
							
							
							case 4:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" DEFAULT ", global::Std.@string(this.ValueBool)), " ");
							}
							
							
						}
						
						break;
					}
					
					
					case 4:
					{
						switch (this.DefaultTypeEnum._hx_index) {
							case 0:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" SET DEFAULT \'", this.Value), "\'  ");
							}
							
							
							case 1:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" SET DEFAULT ", global::haxe.lang.Runtime.toString((this.ValueInt).toDynamic())), " ");
							}
							
							
							case 2:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" SET DEFAULT ", global::haxe.lang.Runtime.toString((this.ValueDouble).toDynamic())), " ");
							}
							
							
							case 3:
							{
								return " SET DEFAULT CURRENT_TIMESTAMP";
							}
							
							
							case 4:
							{
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" SET DEFAULT \'", global::Std.@string(this.ValueBool)), "\' ");
							}
							
							
						}
						
						break;
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1818121971:
					{
						this.ColumnConstraint = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 796072987:
					{
						this.ValueBool = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 405627202:
					{
						this.ValueDouble = global::haxe.lang.Null<object>.ofDynamic<double>(@value);
						return @value;
					}
					
					
					case 1207664158:
					{
						this.ValueInt = global::haxe.lang.Null<object>.ofDynamic<int>(@value);
						return @value;
					}
					
					
					case 1697719070:
					{
						this.DatabaseEngineEnum = ((global::nMorph.framework.orm.configuration.DatabaseEngineEnum) (@value) );
						return @value;
					}
					
					
					case 1155919697:
					{
						this.Value = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 964375708:
					{
						this.DefaultTypeEnum = ((global::nMorph.framework.orm.common.enums.DefaultTypeEnum) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 457416069:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "RegisterQuery", 457416069)) );
					}
					
					
					case 1818121971:
					{
						return this.ColumnConstraint;
					}
					
					
					case 796072987:
					{
						return this.ValueBool;
					}
					
					
					case 405627202:
					{
						return (this.ValueDouble).toDynamic();
					}
					
					
					case 1207664158:
					{
						return (this.ValueInt).toDynamic();
					}
					
					
					case 1697719070:
					{
						return this.DatabaseEngineEnum;
					}
					
					
					case 1155919697:
					{
						return this.Value;
					}
					
					
					case 964375708:
					{
						return this.DefaultTypeEnum;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						return this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
					}
					
					
					case 457416069:
					{
						this.RegisterQuery(((global::nMorph.framework.orm.interfaces.ILang) (dynargs[0]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("ColumnConstraint");
			baseArr.push("ValueBool");
			baseArr.push("ValueDouble");
			baseArr.push("ValueInt");
			baseArr.push("DatabaseEngineEnum");
			baseArr.push("Value");
			baseArr.push("DefaultTypeEnum");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


