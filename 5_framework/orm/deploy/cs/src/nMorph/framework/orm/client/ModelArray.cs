// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.client {
	public class ModelArray<T> : global::haxe.lang.HxObject, global::nMorph.framework.orm.client.ModelArray {
		
		static bool __hx_init_called = false;
		static ModelArray() {
			if(global::nMorph.framework.orm.client.ModelArray<object>.__hx_init_called) return;
			global::nMorph.framework.orm.client.ModelArray<object>.__hx_init_called = true;
			{
				global::nMorph.framework.orm.client.ModelArray<object>.__rtti = "<class path=\"nMorph.framework.orm.client.ModelArray\" params=\"T\">\n\t<arr public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</arr>\n\t<set_arr set=\"method\" line=\"18\"><f a=\"value\">\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c>\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c>\n</f></set_arr>\n\t<get_arr set=\"method\" line=\"23\"><f a=\"\"><c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c></f></get_arr>\n\t<Include public=\"1\" set=\"method\" line=\"38\"><f a=\"clause:laClase:context\">\n\t<c path=\"nMorph.framework.orm.interfaces.IClause\"/>\n\t<d/>\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<x path=\"Void\"/>\n</f></Include>\n\t<Add public=\"1\" set=\"method\" line=\"65\"><f a=\"x\">\n\t<c path=\"nMorph.framework.orm.client.ModelArray.T\"/>\n\t<x path=\"Int\"/>\n</f></Add>\n\t<Remove public=\"1\" set=\"method\" line=\"74\"><f a=\"x\">\n\t<c path=\"nMorph.framework.orm.client.ModelArray.T\"/>\n\t<x path=\"Bool\"/>\n</f></Remove>\n\t<Insert public=\"1\" set=\"method\" line=\"88\"><f a=\"pos:x\">\n\t<x path=\"Int\"/>\n\t<c path=\"nMorph.framework.orm.client.ModelArray.T\"/>\n\t<x path=\"Void\"/>\n</f></Insert>\n\t<Filter public=\"1\" set=\"method\" line=\"93\"><f a=\"f\">\n\t<f a=\"\">\n\t\t<c path=\"nMorph.framework.orm.client.ModelArray.T\"/>\n\t\t<x path=\"Bool\"/>\n\t</f>\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></c>\n</f></Filter>\n\t<iterator public=\"1\" set=\"method\" line=\"98\"><f a=\"\"><t path=\"Iterator\"><c path=\"nMorph.framework.orm.client.ModelArray.T\"/></t></f></iterator>\n\t<Save public=\"1\" set=\"method\" line=\"103\"><f a=\"queue\">\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n</f></Save>\n\t<Clear public=\"1\" set=\"method\" line=\"116\"><f a=\"\"><x path=\"Void\"/></f></Clear>\n\t<new public=\"1\" set=\"method\" line=\"138\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
			}
			
		}
		
		
		public ModelArray(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ModelArray() {
			global::nMorph.framework.orm.client.ModelArray<object>.__hx_ctor_nMorph_framework_orm_client_ModelArray<T>(((global::nMorph.framework.orm.client.ModelArray<T>) (this) ));
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_client_ModelArray<T_c>(global::nMorph.framework.orm.client.ModelArray<T_c> __hx_this) {
			__hx_this.set_arr(new global::Array<T_c>());
		}
		
		
		public static object __hx_cast<T_c_c>(global::nMorph.framework.orm.client.ModelArray me) {
			return ( (( me != null )) ? (me.nMorph_framework_orm_client_ModelArray_cast<T_c_c>()) : default(object) );
		}
		
		
		public static string __rtti;
		
		public virtual object nMorph_framework_orm_client_ModelArray_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::nMorph.framework.orm.client.ModelArray<T_c> new_me = new global::nMorph.framework.orm.client.ModelArray<T_c>(global::haxe.lang.EmptyObject.EMPTY);
			global::Array<string> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = fields[i++];
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public global::Array<T> arr;
		
		public virtual global::Array<T> set_arr(global::Array<T> @value) {
			return this.arr = @value;
		}
		
		
		public virtual global::Array<T> get_arr() {
			return this.arr;
		}
		
		
		public virtual void Include(global::nMorph.framework.orm.interfaces.IClause clause, object laClase, global::nMorph.framework.orm.tools.Context context) {
			unchecked {
				global::System.Type clase = global::Type.getClass<object>(((object) (laClase) ));
				string name = global::Type.getClassName(clase);
				global::System.Type type = global::Type.resolveClass(name);
				global::Array<T> DBresult = clause.Read<T>(((global::System.Type) (type) ), ((global::nMorph.framework.orm.tools.Context) (context) ));
				{
					int _g = 0;
					while (( _g < DBresult.length )) {
						T item = DBresult[_g];
						 ++ _g;
						if (( item is global::nMorph.framework.orm.client.ModelObject )) {
							global::nMorph.framework.orm.client.ModelObject mo = ((global::nMorph.framework.orm.client.ModelObject) (((object) (item) )) );
							mo.set_TrackChanges(true);
							mo.set_ObjectEditType(global::nMorph.framework.orm.common.enums.ObjectEditTypeEnum.NOCHANGE);
							mo.set_ObjectSource(global::nMorph.framework.orm.common.enums.ObjectSourceTypeEnum.DB);
							this.Add(item);
						}
						else {
							global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Objects should be ModelObjects");
						}
						
					}
					
				}
				
			}
		}
		
		
		public virtual int Add(T x) {
			unchecked {
				if ( ! (( x is global::nMorph.framework.orm.client.ModelObject )) ) {
					global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Objects should be ModelObjects");
				}
				
				return this.get_arr().push(x);
			}
		}
		
		
		public virtual bool Remove(T x) {
			unchecked {
				if ( ! (( x is global::nMorph.framework.orm.client.ModelObject )) ) {
					global::nMorph.framework.common.exceptions.ExceptionHelper.LogicException(1, "Objects should be ModelObjects");
				}
				
				global::nMorph.framework.orm.client.ModelObject mo = ((global::nMorph.framework.orm.client.ModelObject) (((object) (x) )) );
				mo.set_ObjectEditType(global::nMorph.framework.orm.common.enums.ObjectEditTypeEnum.DELETE);
				return true;
			}
		}
		
		
		public virtual void Insert(int pos, T x) {
			this.get_arr().insert(pos, x);
		}
		
		
		public virtual global::Array<T> Filter(global::haxe.lang.Function f) {
			global::Array<T> _this = this.get_arr();
			global::Array<T> ret = new global::Array<T>(new T[]{});
			{
				int _g = 0;
				int _g1 = _this.length;
				while (( _g < _g1 )) {
					int i = _g++;
					T elt = global::haxe.lang.Runtime.genericCast<T>(_this.__a[i]);
					if (global::haxe.lang.Runtime.toBool(f.__hx_invoke1_o(default(double), elt))) {
						ret.push(elt);
					}
					
				}
				
			}
			
			return ret;
		}
		
		
		public virtual object iterator() {
			return new global::haxe.iterators.ArrayIterator<T>(((global::Array<T>) (this.get_arr()) ));
		}
		
		
		public virtual global::Array<object> Save(global::Array<object> queue) {
			{
				int _g = 0;
				global::Array<T> _g1 = this.get_arr();
				while (( _g < _g1.length )) {
					T item = _g1[_g];
					 ++ _g;
					if (( item is global::nMorph.framework.orm.client.ModelObject )) {
						global::nMorph.framework.orm.client.ModelObject mo = ((global::nMorph.framework.orm.client.ModelObject) (((object) (item) )) );
						queue = mo.Save(queue);
					}
					
				}
				
			}
			
			return queue;
		}
		
		
		public virtual void Clear() {
			int _g = 0;
			global::Array<T> _g1 = this.get_arr();
			while (( _g < _g1.length )) {
				T item = _g1[_g];
				 ++ _g;
				if (( item is global::nMorph.framework.orm.client.ModelObject )) {
					global::nMorph.framework.orm.client.ModelObject mo = ((global::nMorph.framework.orm.client.ModelObject) (((object) (item) )) );
					if (( mo.get_ObjectEditType() == global::nMorph.framework.orm.common.enums.ObjectEditTypeEnum.DELETE )) {
						this.get_arr().@remove(item);
					}
					else {
						mo.Clear();
					}
					
				}
				
			}
			
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 4849249:
					{
						if (handleProperties) {
							this.set_arr(((global::Array<T>) (global::Array<object>.__hx_cast<T>(((global::Array) (@value) ))) ));
							return @value;
						}
						else {
							this.arr = ((global::Array<T>) (global::Array<object>.__hx_cast<T>(((global::Array) (@value) ))) );
							return @value;
						}
						
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1535697261:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Clear", 1535697261)) );
					}
					
					
					case 925284189:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Save", 925284189)) );
					}
					
					
					case 328878574:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "iterator", 328878574)) );
					}
					
					
					case 969511896:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Filter", 969511896)) );
					}
					
					
					case 1383184217:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Insert", 1383184217)) );
					}
					
					
					case 958206052:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Remove", 958206052)) );
					}
					
					
					case 3254785:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Add", 3254785)) );
					}
					
					
					case 524822024:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Include", 524822024)) );
					}
					
					
					case 650036984:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_arr", 650036984)) );
					}
					
					
					case 432035844:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_arr", 432035844)) );
					}
					
					
					case 4849249:
					{
						return ( (handleProperties) ? (this.get_arr()) : (this.arr) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1535697261:
					{
						this.Clear();
						break;
					}
					
					
					case 925284189:
					{
						return this.Save(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					case 328878574:
					{
						return this.iterator();
					}
					
					
					case 969511896:
					{
						return this.Filter(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1383184217:
					{
						this.Insert(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), global::haxe.lang.Runtime.genericCast<T>(dynargs[1]));
						break;
					}
					
					
					case 958206052:
					{
						return this.Remove(global::haxe.lang.Runtime.genericCast<T>(dynargs[0]));
					}
					
					
					case 3254785:
					{
						return this.Add(global::haxe.lang.Runtime.genericCast<T>(dynargs[0]));
					}
					
					
					case 524822024:
					{
						this.Include(((global::nMorph.framework.orm.interfaces.IClause) (dynargs[0]) ), dynargs[1], ((global::nMorph.framework.orm.tools.Context) (dynargs[2]) ));
						break;
					}
					
					
					case 650036984:
					{
						return this.get_arr();
					}
					
					
					case 432035844:
					{
						return this.set_arr(((global::Array<T>) (global::Array<object>.__hx_cast<T>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("arr");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.client {
	[global::haxe.lang.GenericInterface(typeof(global::nMorph.framework.orm.client.ModelArray<object>))]
	public interface ModelArray : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object nMorph_framework_orm_client_ModelArray_cast<T_c>();
		
		void Include(global::nMorph.framework.orm.interfaces.IClause clause, object laClase, global::nMorph.framework.orm.tools.Context context);
		
		object iterator();
		
		global::Array<object> Save(global::Array<object> queue);
		
		void Clear();
		
	}
}


