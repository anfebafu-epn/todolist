// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.sentences {
	public class Assign : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.ISet {
		
		static Assign() {
			global::nMorph.framework.orm.common.sentences.Assign.__rtti = "<class path=\"nMorph.framework.orm.common.sentences.Assign\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.ISet\"/>\n\t<SET public=\"1\" set=\"method\" line=\"22\" static=\"1\"><f a=\"UpdateField:SetExpression\">\n\t<c path=\"nMorph.framework.orm.common.sentences.FieldSentence\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISet\"/>\n</f></SET>\n\t<UpdateField><c path=\"nMorph.framework.orm.common.sentences.FieldSentence\"/></UpdateField>\n\t<SetExpression><c path=\"nMorph.framework.orm.interfaces.ISentence\"/></SetExpression>\n\t<CurrentSQL><c path=\"nMorph.framework.orm.lang.SQL\"/></CurrentSQL>\n\t<RegisterQuery public=\"1\" set=\"method\" line=\"28\"><f a=\"CurrentSQL\">\n\t<c path=\"nMorph.framework.orm.interfaces.ILang\"/>\n\t<x path=\"Void\"/>\n</f></RegisterQuery>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"35\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<new public=\"1\" set=\"method\" line=\"16\"><f a=\"UpdateField:SetExpression\">\n\t<c path=\"nMorph.framework.orm.common.sentences.FieldSentence\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public Assign(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Assign(global::nMorph.framework.orm.common.sentences.FieldSentence UpdateField, global::nMorph.framework.orm.interfaces.ISentence SetExpression) {
			global::nMorph.framework.orm.common.sentences.Assign.__hx_ctor_nMorph_framework_orm_common_sentences_Assign(this, UpdateField, SetExpression);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_sentences_Assign(global::nMorph.framework.orm.common.sentences.Assign __hx_this, global::nMorph.framework.orm.common.sentences.FieldSentence UpdateField, global::nMorph.framework.orm.interfaces.ISentence SetExpression) {
			__hx_this.UpdateField = UpdateField;
			__hx_this.SetExpression = SetExpression;
		}
		
		
		public static string __rtti;
		
		public static global::nMorph.framework.orm.interfaces.ISet SET(global::nMorph.framework.orm.common.sentences.FieldSentence UpdateField, global::nMorph.framework.orm.interfaces.ISentence SetExpression) {
			global::nMorph.framework.orm.common.sentences.Assign @as = new global::nMorph.framework.orm.common.sentences.Assign(((global::nMorph.framework.orm.common.sentences.FieldSentence) (UpdateField) ), ((global::nMorph.framework.orm.interfaces.ISentence) (SetExpression) ));
			return @as;
		}
		
		
		public global::nMorph.framework.orm.common.sentences.FieldSentence UpdateField;
		
		public global::nMorph.framework.orm.interfaces.ISentence SetExpression;
		
		public global::nMorph.framework.orm.lang.SQL CurrentSQL;
		
		public virtual void RegisterQuery(global::nMorph.framework.orm.interfaces.ILang CurrentSQL) {
			this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (CurrentSQL) );
			this.UpdateField.RegisterQuery(CurrentSQL);
			this.SetExpression.RegisterQuery(CurrentSQL);
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			unchecked {
				switch (this.CurrentSQL.getCurrentEngine()._hx_index) {
					case 0:
					{
						if (( args == "ONLYFIELD" )) {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
						}
						else if (( args == "ONLYVALUE" )) {
							this.SetExpression.SCRIPT_PART(null);
						}
						else {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
							this.CurrentSQL.AddBlock(" = ");
							this.SetExpression.SCRIPT_PART(null);
						}
						
						break;
					}
					
					
					case 1:
					{
						if (( args == "ONLYFIELD" )) {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
						}
						else if (( args == "ONLYVALUE" )) {
							this.SetExpression.SCRIPT_PART(null);
						}
						else {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
							this.CurrentSQL.AddBlock(" = ");
							this.SetExpression.SCRIPT_PART(null);
						}
						
						break;
					}
					
					
					case 2:
					{
						if (( args == "ONLYFIELD" )) {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
						}
						else if (( args == "ONLYVALUE" )) {
							this.SetExpression.SCRIPT_PART(null);
						}
						else {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
							this.CurrentSQL.AddBlock(" = ");
							this.SetExpression.SCRIPT_PART(null);
						}
						
						break;
					}
					
					
					case 3:
					{
						if (( args == "ONLYFIELD" )) {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
						}
						else if (( args == "ONLYVALUE" )) {
							this.SetExpression.SCRIPT_PART(null);
						}
						else {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
							this.CurrentSQL.AddBlock(" = ");
							this.SetExpression.SCRIPT_PART(null);
						}
						
						break;
					}
					
					
					case 4:
					{
						if (( args == "ONLYFIELD" )) {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
						}
						else if (( args == "ONLYVALUE" )) {
							this.SetExpression.SCRIPT_PART(null);
						}
						else {
							this.UpdateField.SCRIPT_PART("ONLYNAME");
							this.CurrentSQL.AddBlock(" = ");
							this.SetExpression.SCRIPT_PART(null);
						}
						
						break;
					}
					
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1038308213:
					{
						this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					case 403152826:
					{
						this.SetExpression = ((global::nMorph.framework.orm.interfaces.ISentence) (@value) );
						return @value;
					}
					
					
					case 1247712721:
					{
						this.UpdateField = ((global::nMorph.framework.orm.common.sentences.FieldSentence) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 457416069:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "RegisterQuery", 457416069)) );
					}
					
					
					case 1038308213:
					{
						return this.CurrentSQL;
					}
					
					
					case 403152826:
					{
						return this.SetExpression;
					}
					
					
					case 1247712721:
					{
						return this.UpdateField;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 457416069:
					{
						this.RegisterQuery(((global::nMorph.framework.orm.interfaces.ILang) (dynargs[0]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("CurrentSQL");
			baseArr.push("SetExpression");
			baseArr.push("UpdateField");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


