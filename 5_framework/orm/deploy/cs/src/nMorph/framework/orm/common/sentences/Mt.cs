// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.sentences {
	public class Mt : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.ISentence {
		
		static Mt() {
			global::nMorph.framework.orm.common.sentences.Mt.__rtti = "<class path=\"nMorph.framework.orm.common.sentences.Mt\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<ABS public=\"1\" set=\"method\" line=\"35\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></ABS>\n\t<EXP public=\"1\" set=\"method\" line=\"40\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></EXP>\n\t<FLOOR public=\"1\" set=\"method\" line=\"45\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></FLOOR>\n\t<MOD public=\"1\" set=\"method\" line=\"50\" static=\"1\"><f a=\"Sentence:Divider:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></MOD>\n\t<POWER public=\"1\" set=\"method\" line=\"55\" static=\"1\"><f a=\"Sentence:Exponent:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></POWER>\n\t<ROUND public=\"1\" set=\"method\" line=\"60\" static=\"1\"><f a=\"Sentence:decimals:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></ROUND>\n\t<SQRT public=\"1\" set=\"method\" line=\"65\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></SQRT>\n\t<SUM public=\"1\" set=\"method\" line=\"70\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></SUM>\n\t<mtTypeEnum><e path=\"nMorph.framework.orm.common.enums.MtTypeEnum\"/></mtTypeEnum>\n\t<Sentence><c path=\"nMorph.framework.orm.interfaces.ISentence\"/></Sentence>\n\t<CurrentSQL><c path=\"nMorph.framework.orm.lang.SQL\"/></CurrentSQL>\n\t<Alias><c path=\"String\"/></Alias>\n\t<Parameter2><x path=\"Float\"/></Parameter2>\n\t<IsNullValue public=\"1\" set=\"method\" line=\"24\"><f a=\"\"><x path=\"Bool\"/></f></IsNullValue>\n\t<RegisterQuery public=\"1\" set=\"method\" line=\"28\"><f a=\"CurrentSQL\">\n\t<c path=\"nMorph.framework.orm.interfaces.ILang\"/>\n\t<x path=\"Void\"/>\n</f></RegisterQuery>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"75\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<new public=\"1\" set=\"method\" line=\"17\"><f a=\"mtTypeEnum:Sentence:?Parameter2:?Alias\">\n\t<e path=\"nMorph.framework.orm.common.enums.MtTypeEnum\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public Mt(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Mt(global::nMorph.framework.orm.common.enums.MtTypeEnum mtTypeEnum, global::nMorph.framework.orm.interfaces.ISentence Sentence, global::haxe.lang.Null<double> Parameter2, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt.__hx_ctor_nMorph_framework_orm_common_sentences_Mt(this, mtTypeEnum, Sentence, Parameter2, Alias);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_sentences_Mt(global::nMorph.framework.orm.common.sentences.Mt __hx_this, global::nMorph.framework.orm.common.enums.MtTypeEnum mtTypeEnum, global::nMorph.framework.orm.interfaces.ISentence Sentence, global::haxe.lang.Null<double> Parameter2, string Alias) {
			__hx_this.mtTypeEnum = mtTypeEnum;
			__hx_this.Sentence = Sentence;
			__hx_this.Alias = Alias;
			__hx_this.Parameter2 = (Parameter2).@value;
		}
		
		
		public static string __rtti;
		
		public static global::nMorph.framework.orm.interfaces.ISentence ABS(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt mt = new global::nMorph.framework.orm.common.sentences.Mt(((global::nMorph.framework.orm.common.enums.MtTypeEnum) (global::nMorph.framework.orm.common.enums.MtTypeEnum.ABS) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(global::haxe.lang.Null<double>), ((string) (Alias) ));
			return mt;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence EXP(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt mt = new global::nMorph.framework.orm.common.sentences.Mt(((global::nMorph.framework.orm.common.enums.MtTypeEnum) (global::nMorph.framework.orm.common.enums.MtTypeEnum.EXP) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(global::haxe.lang.Null<double>), ((string) (Alias) ));
			return mt;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence FLOOR(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt mt = new global::nMorph.framework.orm.common.sentences.Mt(((global::nMorph.framework.orm.common.enums.MtTypeEnum) (global::nMorph.framework.orm.common.enums.MtTypeEnum.FLOOR) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(global::haxe.lang.Null<double>), ((string) (Alias) ));
			return mt;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence MOD(global::nMorph.framework.orm.interfaces.ISentence Sentence, double Divider, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt mt = new global::nMorph.framework.orm.common.sentences.Mt(((global::nMorph.framework.orm.common.enums.MtTypeEnum) (global::nMorph.framework.orm.common.enums.MtTypeEnum.MOD) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), new global::haxe.lang.Null<double>(Divider, true), ((string) (Alias) ));
			return mt;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence POWER(global::nMorph.framework.orm.interfaces.ISentence Sentence, double Exponent, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt mt = new global::nMorph.framework.orm.common.sentences.Mt(((global::nMorph.framework.orm.common.enums.MtTypeEnum) (global::nMorph.framework.orm.common.enums.MtTypeEnum.POWER) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), new global::haxe.lang.Null<double>(Exponent, true), ((string) (Alias) ));
			return mt;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence ROUND(global::nMorph.framework.orm.interfaces.ISentence Sentence, double decimals, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt mt = new global::nMorph.framework.orm.common.sentences.Mt(((global::nMorph.framework.orm.common.enums.MtTypeEnum) (global::nMorph.framework.orm.common.enums.MtTypeEnum.ROUND) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), new global::haxe.lang.Null<double>(decimals, true), ((string) (Alias) ));
			return mt;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence SQRT(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt mt = new global::nMorph.framework.orm.common.sentences.Mt(((global::nMorph.framework.orm.common.enums.MtTypeEnum) (global::nMorph.framework.orm.common.enums.MtTypeEnum.SQRT) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(global::haxe.lang.Null<double>), ((string) (Alias) ));
			return mt;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence SUM(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.Mt mt = new global::nMorph.framework.orm.common.sentences.Mt(((global::nMorph.framework.orm.common.enums.MtTypeEnum) (global::nMorph.framework.orm.common.enums.MtTypeEnum.SUM) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(global::haxe.lang.Null<double>), ((string) (Alias) ));
			return mt;
		}
		
		
		public global::nMorph.framework.orm.common.enums.MtTypeEnum mtTypeEnum;
		
		public global::nMorph.framework.orm.interfaces.ISentence Sentence;
		
		public global::nMorph.framework.orm.lang.SQL CurrentSQL;
		
		public string Alias;
		
		public double Parameter2;
		
		public virtual bool IsNullValue() {
			return false;
		}
		
		
		public virtual void RegisterQuery(global::nMorph.framework.orm.interfaces.ILang CurrentSQL) {
			this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (CurrentSQL) );
			if (( this.Sentence != null )) {
				this.Sentence.RegisterQuery(CurrentSQL);
			}
			
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			unchecked {
				switch (this.CurrentSQL.getCurrentEngine()._hx_index) {
					case 0:
					{
						switch (this.mtTypeEnum._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 1:
					{
						switch (this.mtTypeEnum._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 2:
					{
						switch (this.mtTypeEnum._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 3:
					{
						switch (this.mtTypeEnum._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 4:
					{
						switch (this.mtTypeEnum._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ABS(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("EXP(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("FLOOR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("MOD(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("POWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("ROUND(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString(this.Parameter2)), ") "));
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SQRT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SUM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
				}
				
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1211089545:
					{
						this.Parameter2 = ((double) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1211089545:
					{
						this.Parameter2 = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 884916592:
					{
						this.Alias = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1038308213:
					{
						this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					case 2082877635:
					{
						this.Sentence = ((global::nMorph.framework.orm.interfaces.ISentence) (@value) );
						return @value;
					}
					
					
					case 2125187426:
					{
						this.mtTypeEnum = ((global::nMorph.framework.orm.common.enums.MtTypeEnum) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 457416069:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "RegisterQuery", 457416069)) );
					}
					
					
					case 150705664:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "IsNullValue", 150705664)) );
					}
					
					
					case 1211089545:
					{
						return this.Parameter2;
					}
					
					
					case 884916592:
					{
						return this.Alias;
					}
					
					
					case 1038308213:
					{
						return this.CurrentSQL;
					}
					
					
					case 2082877635:
					{
						return this.Sentence;
					}
					
					
					case 2125187426:
					{
						return this.mtTypeEnum;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1211089545:
					{
						return this.Parameter2;
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 457416069:
					{
						this.RegisterQuery(((global::nMorph.framework.orm.interfaces.ILang) (dynargs[0]) ));
						break;
					}
					
					
					case 150705664:
					{
						return this.IsNullValue();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("Parameter2");
			baseArr.push("Alias");
			baseArr.push("CurrentSQL");
			baseArr.push("Sentence");
			baseArr.push("mtTypeEnum");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


