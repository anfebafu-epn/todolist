// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.sentences {
	public class Val : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.ISentence {
		
		static Val() {
			global::nMorph.framework.orm.common.sentences.Val.__rtti = "<class path=\"nMorph.framework.orm.common.sentences.Val\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<str public=\"1\" set=\"method\" line=\"116\" static=\"1\"><f a=\"sValue\">\n\t<x path=\"Null\"><c path=\"String\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></str>\n\t<string public=\"1\" set=\"method\" line=\"122\" static=\"1\"><f a=\"sValue\">\n\t<x path=\"Null\"><c path=\"String\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></string>\n\t<int public=\"1\" set=\"method\" line=\"128\" static=\"1\"><f a=\"iValue\">\n\t<x path=\"Null\"><x path=\"Int\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></int>\n\t<int64 public=\"1\" set=\"method\" line=\"134\" static=\"1\"><f a=\"iValue\">\n\t<x path=\"Null\"><x path=\"haxe.Int64\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></int64>\n\t<float public=\"1\" set=\"method\" line=\"140\" static=\"1\"><f a=\"fValue\">\n\t<x path=\"Null\"><x path=\"Float\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></float>\n\t<bytes public=\"1\" set=\"method\" line=\"146\" static=\"1\"><f a=\"bValue\">\n\t<x path=\"Null\"><c path=\"haxe.io.Bytes\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></bytes>\n\t<date public=\"1\" set=\"method\" line=\"152\" static=\"1\"><f a=\"dValue\">\n\t<x path=\"Null\"><c path=\"Date\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></date>\n\t<bool public=\"1\" set=\"method\" line=\"158\" static=\"1\"><f a=\"bValue\">\n\t<x path=\"Null\"><x path=\"Bool\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></bool>\n\t<uuid public=\"1\" set=\"method\" line=\"164\" static=\"1\"><f a=\"uValue\">\n\t<x path=\"Null\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></x>\n\t<c path=\"nMorph.framework.orm.common.sentences.Val\"/>\n</f></uuid>\n\t<HaxeType><e path=\"nMorph.framework.orm.common.enums.HaxeTypeEnum\"/></HaxeType>\n\t<StringValue><c path=\"String\"/></StringValue>\n\t<IntValue><x path=\"Int\"/></IntValue>\n\t<Int64Value><x path=\"haxe.Int64\"/></Int64Value>\n\t<FloatValue><x path=\"Float\"/></FloatValue>\n\t<BytesValue><c path=\"haxe.io.Bytes\"/></BytesValue>\n\t<DateValue><c path=\"Date\"/></DateValue>\n\t<BoolValue><x path=\"Bool\"/></BoolValue>\n\t<UUIDValue><c path=\"nMorph.framework.common.datatypes.UUID\"/></UUIDValue>\n\t<isNullValue><x path=\"Bool\"/></isNullValue>\n\t<ParName><c path=\"String\"/></ParName>\n\t<CurrentSQL><c path=\"nMorph.framework.orm.lang.SQL\"/></CurrentSQL>\n\t<setStringValue public=\"1\" set=\"method\" line=\"36\"><f a=\"StringValue\">\n\t<x path=\"Null\"><c path=\"String\"/></x>\n\t<x path=\"Void\"/>\n</f></setStringValue>\n\t<setIntValue public=\"1\" set=\"method\" line=\"46\"><f a=\"IntValue\">\n\t<x path=\"Null\"><x path=\"Int\"/></x>\n\t<x path=\"Void\"/>\n</f></setIntValue>\n\t<setInt64Value public=\"1\" set=\"method\" line=\"56\"><f a=\"Int64Value\">\n\t<x path=\"Null\"><x path=\"haxe.Int64\"/></x>\n\t<x path=\"Void\"/>\n</f></setInt64Value>\n\t<setFloatValue public=\"1\" set=\"method\" line=\"66\"><f a=\"FloatValue\">\n\t<x path=\"Null\"><x path=\"Float\"/></x>\n\t<x path=\"Void\"/>\n</f></setFloatValue>\n\t<setBytesValue public=\"1\" set=\"method\" line=\"76\"><f a=\"BytesValue\">\n\t<x path=\"Null\"><c path=\"haxe.io.Bytes\"/></x>\n\t<x path=\"Void\"/>\n</f></setBytesValue>\n\t<setDateValue public=\"1\" set=\"method\" line=\"86\"><f a=\"DateValue\">\n\t<x path=\"Null\"><c path=\"Date\"/></x>\n\t<x path=\"Void\"/>\n</f></setDateValue>\n\t<setBoolValue public=\"1\" set=\"method\" line=\"96\"><f a=\"BoolValue\">\n\t<x path=\"Null\"><x path=\"Bool\"/></x>\n\t<x path=\"Void\"/>\n</f></setBoolValue>\n\t<setUUIDValue public=\"1\" set=\"method\" line=\"106\"><f a=\"UUIDValue\">\n\t<x path=\"Null\"><c path=\"nMorph.framework.common.datatypes.UUID\"/></x>\n\t<x path=\"Void\"/>\n</f></setUUIDValue>\n\t<IsNullValue public=\"1\" set=\"method\" line=\"170\"><f a=\"\"><x path=\"Bool\"/></f></IsNullValue>\n\t<RegisterQuery public=\"1\" set=\"method\" line=\"174\"><f a=\"CurrentSQL\">\n\t<c path=\"nMorph.framework.orm.interfaces.ILang\"/>\n\t<x path=\"Void\"/>\n</f></RegisterQuery>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"178\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<new public=\"1\" set=\"method\" line=\"33\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public Val(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Val() {
			global::nMorph.framework.orm.common.sentences.Val.__hx_ctor_nMorph_framework_orm_common_sentences_Val(this);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_sentences_Val(global::nMorph.framework.orm.common.sentences.Val __hx_this) {
		}
		
		
		public static string __rtti;
		
		public static global::nMorph.framework.orm.common.sentences.Val str(string sValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setStringValue(sValue);
			return fvs;
		}
		
		
		public static global::nMorph.framework.orm.common.sentences.Val @string(string sValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setStringValue(sValue);
			return fvs;
		}
		
		
		public static global::nMorph.framework.orm.common.sentences.Val @int(global::haxe.lang.Null<int> iValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setIntValue(iValue);
			return fvs;
		}
		
		
		public static global::nMorph.framework.orm.common.sentences.Val int64(global::haxe.lang.Null<long> iValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setInt64Value(iValue);
			return fvs;
		}
		
		
		public static global::nMorph.framework.orm.common.sentences.Val @float(global::haxe.lang.Null<double> fValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setFloatValue(fValue);
			return fvs;
		}
		
		
		public static global::nMorph.framework.orm.common.sentences.Val bytes(global::haxe.io.Bytes bValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setBytesValue(bValue);
			return fvs;
		}
		
		
		public static global::nMorph.framework.orm.common.sentences.Val date(global::Date dValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setDateValue(dValue);
			return fvs;
		}
		
		
		public static global::nMorph.framework.orm.common.sentences.Val @bool(global::haxe.lang.Null<bool> bValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setBoolValue(bValue);
			return fvs;
		}
		
		
		public static global::nMorph.framework.orm.common.sentences.Val uuid(global::nMorph.framework.common.datatypes.UUID uValue) {
			global::nMorph.framework.orm.common.sentences.Val fvs = new global::nMorph.framework.orm.common.sentences.Val();
			fvs.setUUIDValue(uValue);
			return fvs;
		}
		
		
		public global::nMorph.framework.orm.common.enums.HaxeTypeEnum HaxeType;
		
		public string StringValue;
		
		public int IntValue;
		
		public long Int64Value;
		
		public double FloatValue;
		
		public global::haxe.io.Bytes BytesValue;
		
		public global::Date DateValue;
		
		public bool BoolValue;
		
		public global::nMorph.framework.common.datatypes.UUID UUIDValue;
		
		public bool isNullValue;
		
		public string ParName;
		
		public global::nMorph.framework.orm.lang.SQL CurrentSQL;
		
		public virtual void setStringValue(string StringValue) {
			if (( StringValue == null )) {
				this.isNullValue = true;
			}
			else {
				this.StringValue = StringValue;
			}
			
			this.HaxeType = global::nMorph.framework.orm.common.enums.HaxeTypeEnum.STRING;
		}
		
		
		public virtual void setIntValue(global::haxe.lang.Null<int> IntValue) {
			if ( ! (IntValue.hasValue) ) {
				this.isNullValue = true;
			}
			else {
				this.IntValue = (IntValue).@value;
			}
			
			this.HaxeType = global::nMorph.framework.orm.common.enums.HaxeTypeEnum.INT;
		}
		
		
		public virtual void setInt64Value(global::haxe.lang.Null<long> Int64Value) {
			if ( ! (Int64Value.hasValue) ) {
				this.isNullValue = true;
			}
			else {
				this.Int64Value = (Int64Value).@value;
			}
			
			this.HaxeType = global::nMorph.framework.orm.common.enums.HaxeTypeEnum.INT64;
		}
		
		
		public virtual void setFloatValue(global::haxe.lang.Null<double> FloatValue) {
			if ( ! (FloatValue.hasValue) ) {
				this.isNullValue = true;
			}
			else {
				this.FloatValue = (FloatValue).@value;
			}
			
			this.HaxeType = global::nMorph.framework.orm.common.enums.HaxeTypeEnum.FLOAT;
		}
		
		
		public virtual void setBytesValue(global::haxe.io.Bytes BytesValue) {
			if (( BytesValue == null )) {
				this.isNullValue = true;
			}
			else {
				this.BytesValue = BytesValue;
			}
			
			this.HaxeType = global::nMorph.framework.orm.common.enums.HaxeTypeEnum.BYTES;
		}
		
		
		public virtual void setDateValue(global::Date DateValue) {
			if (( DateValue == null )) {
				this.isNullValue = true;
			}
			else {
				this.DateValue = DateValue;
			}
			
			this.HaxeType = global::nMorph.framework.orm.common.enums.HaxeTypeEnum.DATE;
		}
		
		
		public virtual void setBoolValue(global::haxe.lang.Null<bool> BoolValue) {
			if ( ! (BoolValue.hasValue) ) {
				this.isNullValue = true;
			}
			else {
				this.BoolValue = (BoolValue).@value;
			}
			
			this.HaxeType = global::nMorph.framework.orm.common.enums.HaxeTypeEnum.BOOL;
		}
		
		
		public virtual void setUUIDValue(global::nMorph.framework.common.datatypes.UUID UUIDValue) {
			if (( UUIDValue == null )) {
				this.isNullValue = true;
			}
			else {
				this.UUIDValue = UUIDValue;
			}
			
			this.HaxeType = global::nMorph.framework.orm.common.enums.HaxeTypeEnum.UUID;
		}
		
		
		public virtual bool IsNullValue() {
			return this.isNullValue;
		}
		
		
		public virtual void RegisterQuery(global::nMorph.framework.orm.interfaces.ILang CurrentSQL) {
			this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (CurrentSQL) );
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			unchecked {
				switch (this.CurrentSQL.getCurrentEngine()._hx_index) {
					case 0:
					{
						switch (this.HaxeType._hx_index) {
							case 0:
							{
								string ParName = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.VARCHAR, ( (this.isNullValue) ? (null) : ((object) (this.StringValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName));
								break;
							}
							
							
							case 1:
							{
								string ParName1 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.INTEGER, ( (this.isNullValue) ? (null) : ((object) (this.IntValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName1));
								break;
							}
							
							
							case 2:
							{
								string ParName2 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BIGINTEGER, ( (this.isNullValue) ? (null) : ((object) (this.Int64Value) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName2));
								break;
							}
							
							
							case 3:
							{
								string ParName3 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.FLOAT, ( (this.isNullValue) ? (null) : ((object) (this.FloatValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName3));
								break;
							}
							
							
							case 4:
							{
								string ParName4 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BINARY, ( (this.isNullValue) ? (null) : ((object) (this.BytesValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName4));
								break;
							}
							
							
							case 5:
							{
								string ParName5 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.DATETIME, ( (this.isNullValue) ? (null) : ((object) (this.DateValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName5));
								break;
							}
							
							
							case 6:
							{
								string ParName6 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BOOLEAN, ( (this.isNullValue) ? (null) : ((object) (this.BoolValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName6));
								break;
							}
							
							
							case 7:
							{
								string ParName7 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.UUID, ( (this.isNullValue) ? (null) : ((object) (this.UUIDValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName7));
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 1:
					{
						switch (this.HaxeType._hx_index) {
							case 0:
							{
								string ParName8 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.VARCHAR, ( (this.isNullValue) ? (null) : ((object) (this.StringValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName8));
								break;
							}
							
							
							case 1:
							{
								string ParName9 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.INTEGER, ( (this.isNullValue) ? (null) : ((object) (this.IntValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName9));
								break;
							}
							
							
							case 2:
							{
								string ParName10 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BIGINTEGER, ( (this.isNullValue) ? (null) : ((object) (this.Int64Value) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName10));
								break;
							}
							
							
							case 3:
							{
								string ParName11 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.FLOAT, ( (this.isNullValue) ? (null) : ((object) (this.FloatValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName11));
								break;
							}
							
							
							case 4:
							{
								string ParName12 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BINARY, ( (this.isNullValue) ? (null) : ((object) (this.BytesValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName12));
								break;
							}
							
							
							case 5:
							{
								string ParName13 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.DATETIME, ( (this.isNullValue) ? (null) : ((object) (this.DateValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName13));
								break;
							}
							
							
							case 6:
							{
								string ParName14 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BOOLEAN, ( (this.isNullValue) ? (null) : ((object) (this.BoolValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName14));
								break;
							}
							
							
							case 7:
							{
								string ParName15 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.UUID, ( (this.isNullValue) ? (null) : ((object) (this.UUIDValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName15));
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 2:
					{
						switch (this.HaxeType._hx_index) {
							case 0:
							{
								string ParName16 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.VARCHAR, ( (this.isNullValue) ? (null) : ((object) (this.StringValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName16));
								break;
							}
							
							
							case 1:
							{
								string ParName17 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.INTEGER, ( (this.isNullValue) ? (null) : ((object) (this.IntValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName17));
								break;
							}
							
							
							case 2:
							{
								string ParName18 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BIGINTEGER, ( (this.isNullValue) ? (null) : ((object) (this.Int64Value) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName18));
								break;
							}
							
							
							case 3:
							{
								string ParName19 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.FLOAT, ( (this.isNullValue) ? (null) : ((object) (this.FloatValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName19));
								break;
							}
							
							
							case 4:
							{
								string ParName20 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BINARY, ( (this.isNullValue) ? (null) : ((object) (this.BytesValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName20));
								break;
							}
							
							
							case 5:
							{
								string ParName21 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.DATETIME, ( (this.isNullValue) ? (null) : ((object) (this.DateValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName21));
								break;
							}
							
							
							case 6:
							{
								string ParName22 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BOOLEAN, ( (this.isNullValue) ? (null) : ((object) (this.BoolValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName22));
								break;
							}
							
							
							case 7:
							{
								string ParName23 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.UUID, ( (this.isNullValue) ? (null) : ((object) (this.UUIDValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName23));
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 3:
					{
						switch (this.HaxeType._hx_index) {
							case 0:
							{
								string ParName24 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.VARCHAR, ( (this.isNullValue) ? (null) : ((object) (this.StringValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName24));
								break;
							}
							
							
							case 1:
							{
								string ParName25 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.INTEGER, ( (this.isNullValue) ? (null) : ((object) (this.IntValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName25));
								break;
							}
							
							
							case 2:
							{
								string ParName26 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BIGINTEGER, ( (this.isNullValue) ? (null) : ((object) (this.Int64Value) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName26));
								break;
							}
							
							
							case 3:
							{
								string ParName27 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.FLOAT, ( (this.isNullValue) ? (null) : ((object) (this.FloatValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName27));
								break;
							}
							
							
							case 4:
							{
								string ParName28 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BINARY, ( (this.isNullValue) ? (null) : ((object) (this.BytesValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName28));
								break;
							}
							
							
							case 5:
							{
								string ParName29 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.DATETIME, ( (this.isNullValue) ? (null) : ((object) (this.DateValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName29));
								break;
							}
							
							
							case 6:
							{
								string ParName30 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BOOLEAN, ( (this.isNullValue) ? (null) : ((object) (this.BoolValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName30));
								break;
							}
							
							
							case 7:
							{
								string ParName31 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.UUID, ( (this.isNullValue) ? (null) : ((object) (this.UUIDValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(":", ParName31));
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 4:
					{
						switch (this.HaxeType._hx_index) {
							case 0:
							{
								string ParName32 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.VARCHAR, ( (this.isNullValue) ? (null) : ((object) (this.StringValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName32));
								break;
							}
							
							
							case 1:
							{
								string ParName33 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.INTEGER, ( (this.isNullValue) ? (null) : ((object) (this.IntValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName33));
								break;
							}
							
							
							case 2:
							{
								string ParName34 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BIGINTEGER, ( (this.isNullValue) ? (null) : ((object) (this.Int64Value) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName34));
								break;
							}
							
							
							case 3:
							{
								string ParName35 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.FLOAT, ( (this.isNullValue) ? (null) : ((object) (this.FloatValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName35));
								break;
							}
							
							
							case 4:
							{
								string ParName36 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BINARY, ( (this.isNullValue) ? (null) : ((object) (this.BytesValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName36));
								break;
							}
							
							
							case 5:
							{
								string ParName37 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.DATETIME, ( (this.isNullValue) ? (null) : ((object) (this.DateValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName37));
								break;
							}
							
							
							case 6:
							{
								string ParName38 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.BOOLEAN, ( (this.isNullValue) ? (null) : ((object) (this.BoolValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName38));
								break;
							}
							
							
							case 7:
							{
								string ParName39 = this.CurrentSQL.AddParameter(global::nMorph.framework.orm.client.QueryParameter.SET(global::nMorph.framework.orm.common.enums.DBTypeEnum.UUID, ( (this.isNullValue) ? (null) : ((object) (this.UUIDValue) ) )));
								this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat("@", ParName39));
								break;
							}
							
							
						}
						
						break;
					}
					
					
				}
				
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1191336021:
					{
						this.FloatValue = ((double) (@value) );
						return @value;
					}
					
					
					case 1407671330:
					{
						this.IntValue = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1038308213:
					{
						this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					case 517594156:
					{
						this.ParName = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 617152032:
					{
						this.isNullValue = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1488000822:
					{
						this.UUIDValue = ((global::nMorph.framework.common.datatypes.UUID) (@value) );
						return @value;
					}
					
					
					case 710668999:
					{
						this.BoolValue = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 854086211:
					{
						this.DateValue = ((global::Date) (@value) );
						return @value;
					}
					
					
					case 1511098150:
					{
						this.BytesValue = ((global::haxe.io.Bytes) (@value) );
						return @value;
					}
					
					
					case 1191336021:
					{
						this.FloatValue = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 953074276:
					{
						this.Int64Value = ((long) (@value) );
						return @value;
					}
					
					
					case 1407671330:
					{
						this.IntValue = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 552454336:
					{
						this.StringValue = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 838867488:
					{
						this.HaxeType = ((global::nMorph.framework.orm.common.enums.HaxeTypeEnum) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 457416069:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "RegisterQuery", 457416069)) );
					}
					
					
					case 150705664:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "IsNullValue", 150705664)) );
					}
					
					
					case 1529739092:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setUUIDValue", 1529739092)) );
					}
					
					
					case 752407269:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setBoolValue", 752407269)) );
					}
					
					
					case 895824481:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setDateValue", 895824481)) );
					}
					
					
					case 81314120:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setBytesValue", 81314120)) );
					}
					
					
					case 1909035639:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setFloatValue", 1909035639)) );
					}
					
					
					case 1670773894:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setInt64Value", 1670773894)) );
					}
					
					
					case 714500548:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setIntValue", 714500548)) );
					}
					
					
					case 1685679198:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setStringValue", 1685679198)) );
					}
					
					
					case 1038308213:
					{
						return this.CurrentSQL;
					}
					
					
					case 517594156:
					{
						return this.ParName;
					}
					
					
					case 617152032:
					{
						return this.isNullValue;
					}
					
					
					case 1488000822:
					{
						return this.UUIDValue;
					}
					
					
					case 710668999:
					{
						return this.BoolValue;
					}
					
					
					case 854086211:
					{
						return this.DateValue;
					}
					
					
					case 1511098150:
					{
						return this.BytesValue;
					}
					
					
					case 1191336021:
					{
						return this.FloatValue;
					}
					
					
					case 953074276:
					{
						return this.Int64Value;
					}
					
					
					case 1407671330:
					{
						return this.IntValue;
					}
					
					
					case 552454336:
					{
						return this.StringValue;
					}
					
					
					case 838867488:
					{
						return this.HaxeType;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1191336021:
					{
						return this.FloatValue;
					}
					
					
					case 1407671330:
					{
						return ((double) (this.IntValue) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 457416069:
					{
						this.RegisterQuery(((global::nMorph.framework.orm.interfaces.ILang) (dynargs[0]) ));
						break;
					}
					
					
					case 150705664:
					{
						return this.IsNullValue();
					}
					
					
					case 1529739092:
					{
						this.setUUIDValue(((global::nMorph.framework.common.datatypes.UUID) (dynargs[0]) ));
						break;
					}
					
					
					case 752407269:
					{
						this.setBoolValue(global::haxe.lang.Null<object>.ofDynamic<bool>(dynargs[0]));
						break;
					}
					
					
					case 895824481:
					{
						this.setDateValue(((global::Date) (dynargs[0]) ));
						break;
					}
					
					
					case 81314120:
					{
						this.setBytesValue(((global::haxe.io.Bytes) (dynargs[0]) ));
						break;
					}
					
					
					case 1909035639:
					{
						this.setFloatValue(global::haxe.lang.Null<object>.ofDynamic<double>(dynargs[0]));
						break;
					}
					
					
					case 1670773894:
					{
						this.setInt64Value(global::haxe.lang.Null<object>.ofDynamic<long>(dynargs[0]));
						break;
					}
					
					
					case 714500548:
					{
						this.setIntValue(global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[0]));
						break;
					}
					
					
					case 1685679198:
					{
						this.setStringValue(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("CurrentSQL");
			baseArr.push("ParName");
			baseArr.push("isNullValue");
			baseArr.push("UUIDValue");
			baseArr.push("BoolValue");
			baseArr.push("DateValue");
			baseArr.push("BytesValue");
			baseArr.push("FloatValue");
			baseArr.push("Int64Value");
			baseArr.push("IntValue");
			baseArr.push("StringValue");
			baseArr.push("HaxeType");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


