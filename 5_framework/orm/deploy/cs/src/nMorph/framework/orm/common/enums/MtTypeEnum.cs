// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public class MtTypeEnum : global::haxe.lang.Enum {
		
		protected MtTypeEnum(int index) : base(index) {
		}
		
		
		public static readonly global::nMorph.framework.orm.common.enums.MtTypeEnum ABS = new global::nMorph.framework.orm.common.enums.MtTypeEnum_ABS();
		
		public static readonly global::nMorph.framework.orm.common.enums.MtTypeEnum EXP = new global::nMorph.framework.orm.common.enums.MtTypeEnum_EXP();
		
		public static readonly global::nMorph.framework.orm.common.enums.MtTypeEnum FLOOR = new global::nMorph.framework.orm.common.enums.MtTypeEnum_FLOOR();
		
		public static readonly global::nMorph.framework.orm.common.enums.MtTypeEnum MOD = new global::nMorph.framework.orm.common.enums.MtTypeEnum_MOD();
		
		public static readonly global::nMorph.framework.orm.common.enums.MtTypeEnum POWER = new global::nMorph.framework.orm.common.enums.MtTypeEnum_POWER();
		
		public static readonly global::nMorph.framework.orm.common.enums.MtTypeEnum ROUND = new global::nMorph.framework.orm.common.enums.MtTypeEnum_ROUND();
		
		public static readonly global::nMorph.framework.orm.common.enums.MtTypeEnum SQRT = new global::nMorph.framework.orm.common.enums.MtTypeEnum_SQRT();
		
		public static readonly global::nMorph.framework.orm.common.enums.MtTypeEnum SUM = new global::nMorph.framework.orm.common.enums.MtTypeEnum_SUM();
		
		protected static readonly string[] __hx_constructs = new string[]{"ABS", "EXP", "FLOOR", "MOD", "POWER", "ROUND", "SQRT", "SUM"};
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class MtTypeEnum_ABS : global::nMorph.framework.orm.common.enums.MtTypeEnum {
		
		public MtTypeEnum_ABS() : base(0) {
		}
		
		
		public override string getTag() {
			return "ABS";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class MtTypeEnum_EXP : global::nMorph.framework.orm.common.enums.MtTypeEnum {
		
		public MtTypeEnum_EXP() : base(1) {
		}
		
		
		public override string getTag() {
			return "EXP";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class MtTypeEnum_FLOOR : global::nMorph.framework.orm.common.enums.MtTypeEnum {
		
		public MtTypeEnum_FLOOR() : base(2) {
		}
		
		
		public override string getTag() {
			return "FLOOR";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class MtTypeEnum_MOD : global::nMorph.framework.orm.common.enums.MtTypeEnum {
		
		public MtTypeEnum_MOD() : base(3) {
		}
		
		
		public override string getTag() {
			return "MOD";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class MtTypeEnum_POWER : global::nMorph.framework.orm.common.enums.MtTypeEnum {
		
		public MtTypeEnum_POWER() : base(4) {
		}
		
		
		public override string getTag() {
			return "POWER";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class MtTypeEnum_ROUND : global::nMorph.framework.orm.common.enums.MtTypeEnum {
		
		public MtTypeEnum_ROUND() : base(5) {
		}
		
		
		public override string getTag() {
			return "ROUND";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class MtTypeEnum_SQRT : global::nMorph.framework.orm.common.enums.MtTypeEnum {
		
		public MtTypeEnum_SQRT() : base(6) {
		}
		
		
		public override string getTag() {
			return "SQRT";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class MtTypeEnum_SUM : global::nMorph.framework.orm.common.enums.MtTypeEnum {
		
		public MtTypeEnum_SUM() : base(7) {
		}
		
		
		public override string getTag() {
			return "SUM";
		}
		
		
	}
}


