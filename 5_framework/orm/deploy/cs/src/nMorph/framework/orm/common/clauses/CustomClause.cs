// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.clauses {
	public class CustomClause : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.IClause {
		
		static CustomClause() {
			global::nMorph.framework.orm.common.clauses.CustomClause.__rtti = "<class path=\"nMorph.framework.orm.common.clauses.CustomClause\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.IClause\"/>\n\t<CurrentSQL><c path=\"nMorph.framework.orm.lang.SQL\"/></CurrentSQL>\n\t<CustomQueries><t path=\"Map\">\n\t<c path=\"String\"/>\n\t<e path=\"nMorph.framework.orm.configuration.DatabaseEngineEnum\"/>\n</t></CustomQueries>\n\t<Parameters><c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueryParameter\"/></c></Parameters>\n\t<SCRIPT public=\"1\" set=\"method\" line=\"34\"><f a=\"\"><c path=\"String\"/></f></SCRIPT>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"39\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<Execute public=\"1\" set=\"method\" line=\"58\"><f a=\"\"><d/></f></Execute>\n\t<Register public=\"1\" set=\"method\" line=\"63\"><f a=\"context\">\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<x path=\"Void\"/>\n</f></Register>\n\t<Queue public=\"1\" set=\"method\" line=\"68\"><f a=\"queue\">\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n</f></Queue>\n\t<Bulk public=\"1\" set=\"method\" line=\"73\"><f a=\"bulk\">\n\t<c path=\"nMorph.framework.orm.tools.BulkRun\"/>\n\t<c path=\"nMorph.framework.orm.tools.BulkRun\"/>\n</f></Bulk>\n\t<ReadValue public=\"1\" set=\"method\" line=\"79\"><f a=\"\"><d/></f></ReadValue>\n\t<ReadTable public=\"1\" set=\"method\" line=\"84\"><f a=\"\"><c path=\"nMorph.framework.orm.client.QueryTable\"/></f></ReadTable>\n\t<Read public=\"1\" params=\"T\" set=\"method\" line=\"89\"><f a=\"cl:?context\">\n\t<x path=\"Class\"><c path=\"Read.T\"/></x>\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<c path=\"Array\"><c path=\"Read.T\"/></c>\n</f></Read>\n\t<ReadOne public=\"1\" params=\"T\" set=\"method\" line=\"94\"><f a=\"cl:?context\">\n\t<x path=\"Class\"><c path=\"ReadOne.T\"/></x>\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<c path=\"ReadOne.T\"/>\n</f></ReadOne>\n\t<new public=\"1\" set=\"method\" line=\"27\"><f a=\"CurrentSQL:CustomQueries:?Parameters\">\n\t<c path=\"nMorph.framework.orm.lang.SQL\"/>\n\t<t path=\"Map\">\n\t\t<c path=\"String\"/>\n\t\t<e path=\"nMorph.framework.orm.configuration.DatabaseEngineEnum\"/>\n\t</t>\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueryParameter\"/></c>\n\t<x path=\"Void\"/>\n</f></new>\n\t<haxe_doc>* Cl\u00e1usula que permite la ejecuci\u00f3n de m\u00e9todos con la incorporaci\u00f3n de queries directos\n * @author Smartwork</haxe_doc>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public CustomClause(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public CustomClause(global::nMorph.framework.orm.lang.SQL CurrentSQL, global::haxe.ds.StringMap<object> CustomQueries, global::Array<object> Parameters) {
			global::nMorph.framework.orm.common.clauses.CustomClause.__hx_ctor_nMorph_framework_orm_common_clauses_CustomClause(this, CurrentSQL, CustomQueries, Parameters);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_clauses_CustomClause(global::nMorph.framework.orm.common.clauses.CustomClause __hx_this, global::nMorph.framework.orm.lang.SQL CurrentSQL, global::haxe.ds.StringMap<object> CustomQueries, global::Array<object> Parameters) {
			__hx_this.CurrentSQL = CurrentSQL;
			__hx_this.CustomQueries = CustomQueries;
			__hx_this.Parameters = Parameters;
		}
		
		
		public static string __rtti;
		
		public global::nMorph.framework.orm.lang.SQL CurrentSQL;
		
		public global::haxe.ds.StringMap<object> CustomQueries;
		
		public global::Array<object> Parameters;
		
		public virtual string SCRIPT() {
			return this.CurrentSQL.GenerateAll();
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			global::haxe.IMap<string, object> map = ((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (((global::haxe.IMap<string, object>) (this.CustomQueries) )) ))) );
			global::haxe.IMap<string, object> _g_map = map;
			object _g_keys = map.keys();
			while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(_g_keys, "hasNext", 407283053, null))) {
				string key = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.callField(_g_keys, "next", 1224901875, null));
				global::nMorph.framework.orm.configuration.DatabaseEngineEnum _g1_value = ((global::nMorph.framework.orm.configuration.DatabaseEngineEnum) ((_g_map.@get(key)).@value) );
				string _g1_key = key;
				string k = _g1_key;
				global::nMorph.framework.orm.configuration.DatabaseEngineEnum v = _g1_value;
				if (( v == this.CurrentSQL.getCurrentEngine() )) {
					this.CurrentSQL.AddBlock(k);
					{
						int _g = 0;
						global::Array<object> _g1 = this.Parameters;
						while (( _g < _g1.length )) {
							global::nMorph.framework.orm.client.QueryParameter par = ((global::nMorph.framework.orm.client.QueryParameter) (_g1[_g]) );
							 ++ _g;
							this.CurrentSQL.AddParameter(par);
						}
						
					}
					
				}
				
			}
			
		}
		
		
		public virtual object Execute() {
			return this.CurrentSQL.Execute();
		}
		
		
		public virtual void Register(global::nMorph.framework.orm.tools.Context context) {
			context.set_Queue(this.CurrentSQL.Queue(context.get_Queue()));
		}
		
		
		public virtual global::Array<object> Queue(global::Array<object> queue) {
			return this.CurrentSQL.Queue(queue);
		}
		
		
		public virtual global::nMorph.framework.orm.tools.BulkRun Bulk(global::nMorph.framework.orm.tools.BulkRun bulk) {
			bulk.set_queue(this.CurrentSQL.Queue(bulk.get_queue()));
			return bulk;
		}
		
		
		public virtual object ReadValue() {
			return this.CurrentSQL.ReadValue();
		}
		
		
		public virtual global::nMorph.framework.orm.client.QueryTable ReadTable() {
			return this.CurrentSQL.ReadTable();
		}
		
		
		public virtual global::Array<T> Read<T>(global::System.Type cl, global::nMorph.framework.orm.tools.Context context) {
			return this.CurrentSQL.Read<T>(((global::System.Type) (cl) ), ((global::nMorph.framework.orm.tools.Context) (context) ));
		}
		
		
		public virtual T ReadOne<T>(global::System.Type cl, global::nMorph.framework.orm.tools.Context context) {
			return this.CurrentSQL.ReadOne<T>(((global::System.Type) (cl) ), ((global::nMorph.framework.orm.tools.Context) (context) ));
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1211089610:
					{
						this.Parameters = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 131877269:
					{
						this.CustomQueries = ((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 1038308213:
					{
						this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1344235664:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadOne", 1344235664)) );
					}
					
					
					case 914388854:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Read", 914388854)) );
					}
					
					
					case 2107499704:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadTable", 2107499704)) );
					}
					
					
					case 611494939:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadValue", 611494939)) );
					}
					
					
					case 737753906:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Bulk", 737753906)) );
					}
					
					
					case 1897397617:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Queue", 1897397617)) );
					}
					
					
					case 709976707:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Register", 709976707)) );
					}
					
					
					case 425603605:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Execute", 425603605)) );
					}
					
					
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 2044918283:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT", 2044918283)) );
					}
					
					
					case 1211089610:
					{
						return this.Parameters;
					}
					
					
					case 131877269:
					{
						return this.CustomQueries;
					}
					
					
					case 1038308213:
					{
						return this.CurrentSQL;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1344235664:
					{
						return this.ReadOne<object>(((global::System.Type) (dynargs[0]) ), ((global::nMorph.framework.orm.tools.Context) (( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )) ));
					}
					
					
					case 914388854:
					{
						return this.Read<object>(((global::System.Type) (dynargs[0]) ), ((global::nMorph.framework.orm.tools.Context) (( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )) ));
					}
					
					
					case 2107499704:
					{
						return this.ReadTable();
					}
					
					
					case 611494939:
					{
						return this.ReadValue();
					}
					
					
					case 737753906:
					{
						return this.Bulk(((global::nMorph.framework.orm.tools.BulkRun) (dynargs[0]) ));
					}
					
					
					case 1897397617:
					{
						return this.Queue(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					case 709976707:
					{
						this.Register(((global::nMorph.framework.orm.tools.Context) (dynargs[0]) ));
						break;
					}
					
					
					case 425603605:
					{
						return this.Execute();
					}
					
					
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 2044918283:
					{
						return this.SCRIPT();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("Parameters");
			baseArr.push("CustomQueries");
			baseArr.push("CurrentSQL");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


