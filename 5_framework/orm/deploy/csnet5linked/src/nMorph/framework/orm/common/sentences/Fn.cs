// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.sentences {
	public class Fn : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.ISentence {
		
		static Fn() {
			global::nMorph.framework.orm.common.sentences.Fn.__rtti = "<class path=\"nMorph.framework.orm.common.sentences.Fn\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<FSUM public=\"1\" set=\"method\" line=\"30\" static=\"1\"><f a=\"Sentence:?val2:?Sentence2:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></FSUM>\n\t<FSUBTRACTION public=\"1\" set=\"method\" line=\"35\" static=\"1\"><f a=\"Sentence:?val2:?Sentence2:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></FSUBTRACTION>\n\t<FMULT public=\"1\" set=\"method\" line=\"40\" static=\"1\"><f a=\"Sentence:?val2:?Sentence2:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></FMULT>\n\t<FDIV public=\"1\" set=\"method\" line=\"45\" static=\"1\"><f a=\"Sentence:?val2:?Sentence2:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></FDIV>\n\t<FnType><e path=\"nMorph.framework.orm.common.enums.FnTypeEnum\"/></FnType>\n\t<Sentence><c path=\"nMorph.framework.orm.interfaces.ISentence\"/></Sentence>\n\t<CurrentSQL><c path=\"nMorph.framework.orm.lang.SQL\"/></CurrentSQL>\n\t<val2><x path=\"Null\"><x path=\"Float\"/></x></val2>\n\t<Sentence2><c path=\"nMorph.framework.orm.interfaces.ISentence\"/></Sentence2>\n\t<Alias><c path=\"String\"/></Alias>\n\t<IsNullValue public=\"1\" set=\"method\" line=\"26\"><f a=\"\"><x path=\"Bool\"/></f></IsNullValue>\n\t<RegisterQuery public=\"1\" set=\"method\" line=\"50\"><f a=\"CurrentSQL\">\n\t<c path=\"nMorph.framework.orm.interfaces.ILang\"/>\n\t<x path=\"Void\"/>\n</f></RegisterQuery>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"57\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<new public=\"1\" set=\"method\" line=\"18\"><f a=\"FnType:Sentence:?val2:?Sentence2:?Alias\">\n\t<e path=\"nMorph.framework.orm.common.enums.FnTypeEnum\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Float\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public Fn(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Fn(global::nMorph.framework.orm.common.enums.FnTypeEnum FnType, global::nMorph.framework.orm.interfaces.ISentence Sentence, global::haxe.lang.Null<double> val2, global::nMorph.framework.orm.interfaces.ISentence Sentence2, string Alias) {
			global::nMorph.framework.orm.common.sentences.Fn.__hx_ctor_nMorph_framework_orm_common_sentences_Fn(this, FnType, Sentence, val2, Sentence2, Alias);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_sentences_Fn(global::nMorph.framework.orm.common.sentences.Fn __hx_this, global::nMorph.framework.orm.common.enums.FnTypeEnum FnType, global::nMorph.framework.orm.interfaces.ISentence Sentence, global::haxe.lang.Null<double> val2, global::nMorph.framework.orm.interfaces.ISentence Sentence2, string Alias) {
			__hx_this.FnType = FnType;
			__hx_this.Sentence = Sentence;
			__hx_this.val2 = val2;
			__hx_this.Sentence2 = Sentence2;
			__hx_this.Alias = Alias;
		}
		
		
		public static string __rtti;
		
		public static global::nMorph.framework.orm.interfaces.ISentence FSUM(global::nMorph.framework.orm.interfaces.ISentence Sentence, global::haxe.lang.Null<double> val2, global::nMorph.framework.orm.interfaces.ISentence Sentence2, string Alias) {
			global::nMorph.framework.orm.common.sentences.Fn fn = new global::nMorph.framework.orm.common.sentences.Fn(((global::nMorph.framework.orm.common.enums.FnTypeEnum) (global::nMorph.framework.orm.common.enums.FnTypeEnum.FSUM) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), ((global::haxe.lang.Null<double>) (val2) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence2) ), ((string) (Alias) ));
			return fn;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence FSUBTRACTION(global::nMorph.framework.orm.interfaces.ISentence Sentence, global::haxe.lang.Null<double> val2, global::nMorph.framework.orm.interfaces.ISentence Sentence2, string Alias) {
			global::nMorph.framework.orm.common.sentences.Fn fn = new global::nMorph.framework.orm.common.sentences.Fn(((global::nMorph.framework.orm.common.enums.FnTypeEnum) (global::nMorph.framework.orm.common.enums.FnTypeEnum.FSUB) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), ((global::haxe.lang.Null<double>) (val2) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence2) ), ((string) (Alias) ));
			return fn;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence FMULT(global::nMorph.framework.orm.interfaces.ISentence Sentence, global::haxe.lang.Null<double> val2, global::nMorph.framework.orm.interfaces.ISentence Sentence2, string Alias) {
			global::nMorph.framework.orm.common.sentences.Fn fn = new global::nMorph.framework.orm.common.sentences.Fn(((global::nMorph.framework.orm.common.enums.FnTypeEnum) (global::nMorph.framework.orm.common.enums.FnTypeEnum.FMULT) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), ((global::haxe.lang.Null<double>) (val2) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence2) ), ((string) (Alias) ));
			return fn;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence FDIV(global::nMorph.framework.orm.interfaces.ISentence Sentence, global::haxe.lang.Null<double> val2, global::nMorph.framework.orm.interfaces.ISentence Sentence2, string Alias) {
			global::nMorph.framework.orm.common.sentences.Fn fn = new global::nMorph.framework.orm.common.sentences.Fn(((global::nMorph.framework.orm.common.enums.FnTypeEnum) (global::nMorph.framework.orm.common.enums.FnTypeEnum.FDIV) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), ((global::haxe.lang.Null<double>) (val2) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence2) ), ((string) (Alias) ));
			return fn;
		}
		
		
		public global::nMorph.framework.orm.common.enums.FnTypeEnum FnType;
		
		public global::nMorph.framework.orm.interfaces.ISentence Sentence;
		
		public global::nMorph.framework.orm.lang.SQL CurrentSQL;
		
		public global::haxe.lang.Null<double> val2;
		
		public global::nMorph.framework.orm.interfaces.ISentence Sentence2;
		
		public string Alias;
		
		public virtual bool IsNullValue() {
			return false;
		}
		
		
		public virtual void RegisterQuery(global::nMorph.framework.orm.interfaces.ILang CurrentSQL) {
			this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (CurrentSQL) );
			this.Sentence.RegisterQuery(CurrentSQL);
			if (( this.Sentence2 != null )) {
				this.Sentence2.RegisterQuery(CurrentSQL);
			}
			
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			unchecked {
				switch (this.CurrentSQL.getCurrentEngine()._hx_index) {
					case 0:
					{
						switch (this.FnType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" + ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" + ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" - ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" - ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" * ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" * ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" / ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" / ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 1:
					{
						switch (this.FnType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" + ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" + ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" - ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" - ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" * ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" * ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" / ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" / ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 2:
					{
						switch (this.FnType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" + ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" + ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" - ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" - ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" * ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" * ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" / ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" / ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 3:
					{
						switch (this.FnType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" + ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" + ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" - ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" - ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" * ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" * ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" / ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" / ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 4:
					{
						switch (this.FnType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" + ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" + ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" + ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" - ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" - ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" - ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" * ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" * ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" * ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if ( ! (this.val2.hasValue) ) {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(" / ");
										this.Sentence2.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" AS \"", this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(" ");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " AS \""), this.Alias), "\" "));
									}
									
								}
								else if ( ! (this.val2.hasValue) ) {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" / ");
									this.Sentence2.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(" ");
								}
								else {
									this.CurrentSQL.AddBlock(" ");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" / ", global::haxe.lang.Runtime.toString((this.val2).toDynamic())), " "));
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 884916592:
					{
						this.Alias = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 625244687:
					{
						this.Sentence2 = ((global::nMorph.framework.orm.interfaces.ISentence) (@value) );
						return @value;
					}
					
					
					case 1313416753:
					{
						this.val2 = global::haxe.lang.Null<object>.ofDynamic<double>(@value);
						return @value;
					}
					
					
					case 1038308213:
					{
						this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					case 2082877635:
					{
						this.Sentence = ((global::nMorph.framework.orm.interfaces.ISentence) (@value) );
						return @value;
					}
					
					
					case 183578690:
					{
						this.FnType = ((global::nMorph.framework.orm.common.enums.FnTypeEnum) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 457416069:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "RegisterQuery", 457416069)) );
					}
					
					
					case 150705664:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "IsNullValue", 150705664)) );
					}
					
					
					case 884916592:
					{
						return this.Alias;
					}
					
					
					case 625244687:
					{
						return this.Sentence2;
					}
					
					
					case 1313416753:
					{
						return (this.val2).toDynamic();
					}
					
					
					case 1038308213:
					{
						return this.CurrentSQL;
					}
					
					
					case 2082877635:
					{
						return this.Sentence;
					}
					
					
					case 183578690:
					{
						return this.FnType;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 457416069:
					{
						this.RegisterQuery(((global::nMorph.framework.orm.interfaces.ILang) (dynargs[0]) ));
						break;
					}
					
					
					case 150705664:
					{
						return this.IsNullValue();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("Alias");
			baseArr.push("Sentence2");
			baseArr.push("val2");
			baseArr.push("CurrentSQL");
			baseArr.push("Sentence");
			baseArr.push("FnType");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


