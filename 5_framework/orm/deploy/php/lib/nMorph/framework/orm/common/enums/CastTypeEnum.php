<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\orm\common\enums;

use \php\Boot;
use \php\_Boot\HxEnum;

class CastTypeEnum extends HxEnum {
	/**
	 * @return CastTypeEnum
	 */
	static public function CastNumbertoVarChar () {
		static $inst = null;
		if (!$inst) $inst = new CastTypeEnum('CastNumbertoVarChar', 4, []);
		return $inst;
	}

	/**
	 * @return CastTypeEnum
	 */
	static public function CastVarChartoBigInteger () {
		static $inst = null;
		if (!$inst) $inst = new CastTypeEnum('CastVarChartoBigInteger', 2, []);
		return $inst;
	}

	/**
	 * @return CastTypeEnum
	 */
	static public function CastVarChartoDate () {
		static $inst = null;
		if (!$inst) $inst = new CastTypeEnum('CastVarChartoDate', 3, []);
		return $inst;
	}

	/**
	 * @return CastTypeEnum
	 */
	static public function CastVarChartoDouble () {
		static $inst = null;
		if (!$inst) $inst = new CastTypeEnum('CastVarChartoDouble', 1, []);
		return $inst;
	}

	/**
	 * @return CastTypeEnum
	 */
	static public function CastVarChartoInt () {
		static $inst = null;
		if (!$inst) $inst = new CastTypeEnum('CastVarChartoInt', 0, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			4 => 'CastNumbertoVarChar',
			2 => 'CastVarChartoBigInteger',
			3 => 'CastVarChartoDate',
			1 => 'CastVarChartoDouble',
			0 => 'CastVarChartoInt',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'CastNumbertoVarChar' => 0,
			'CastVarChartoBigInteger' => 0,
			'CastVarChartoDate' => 0,
			'CastVarChartoDouble' => 0,
			'CastVarChartoInt' => 0,
		];
	}
}

Boot::registerClass(CastTypeEnum::class, 'nMorph.framework.orm.common.enums.CastTypeEnum');
