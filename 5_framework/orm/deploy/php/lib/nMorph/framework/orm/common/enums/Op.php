<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\orm\common\enums;

use \php\Boot;
use \php\_Boot\HxEnum;

class Op extends HxEnum {
	/**
	 * @return Op
	 */
	static public function Different () {
		static $inst = null;
		if (!$inst) $inst = new Op('Different', 4, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function Equal () {
		static $inst = null;
		if (!$inst) $inst = new Op('Equal', 5, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function IN () {
		static $inst = null;
		if (!$inst) $inst = new Op('IN', 6, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function LIKE () {
		static $inst = null;
		if (!$inst) $inst = new Op('LIKE', 8, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function LessThan () {
		static $inst = null;
		if (!$inst) $inst = new Op('LessThan', 1, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function LessThanAndEquals () {
		static $inst = null;
		if (!$inst) $inst = new Op('LessThanAndEquals', 3, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function MoreThan () {
		static $inst = null;
		if (!$inst) $inst = new Op('MoreThan', 0, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function MoreThanAndEquals () {
		static $inst = null;
		if (!$inst) $inst = new Op('MoreThanAndEquals', 2, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function NotIN () {
		static $inst = null;
		if (!$inst) $inst = new Op('NotIN', 7, []);
		return $inst;
	}

	/**
	 * @return Op
	 */
	static public function NotLIKE () {
		static $inst = null;
		if (!$inst) $inst = new Op('NotLIKE', 9, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			4 => 'Different',
			5 => 'Equal',
			6 => 'IN',
			8 => 'LIKE',
			1 => 'LessThan',
			3 => 'LessThanAndEquals',
			0 => 'MoreThan',
			2 => 'MoreThanAndEquals',
			7 => 'NotIN',
			9 => 'NotLIKE',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'Different' => 0,
			'Equal' => 0,
			'IN' => 0,
			'LIKE' => 0,
			'LessThan' => 0,
			'LessThanAndEquals' => 0,
			'MoreThan' => 0,
			'MoreThanAndEquals' => 0,
			'NotIN' => 0,
			'NotLIKE' => 0,
		];
	}
}

Boot::registerClass(Op::class, 'nMorph.framework.orm.common.enums.Op');
