// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public class LogicOperatorEnum : global::haxe.lang.Enum {
		public LogicOperatorEnum() : base(0) { }

		
		protected LogicOperatorEnum(int index) : base(index) {
		}
		
		
		public static readonly global::nMorph.framework.orm.common.enums.LogicOperatorEnum START = new global::nMorph.framework.orm.common.enums.LogicOperatorEnum_START();
		
		public static readonly global::nMorph.framework.orm.common.enums.LogicOperatorEnum AND = new global::nMorph.framework.orm.common.enums.LogicOperatorEnum_AND();
		
		public static readonly global::nMorph.framework.orm.common.enums.LogicOperatorEnum OR = new global::nMorph.framework.orm.common.enums.LogicOperatorEnum_OR();
		
		protected static readonly string[] __hx_constructs = new string[]{"START", "AND", "OR"};
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class LogicOperatorEnum_START : global::nMorph.framework.orm.common.enums.LogicOperatorEnum {
		
		public LogicOperatorEnum_START() : base(0) {
		}
		
		
		public override string getTag() {
			return "START";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class LogicOperatorEnum_AND : global::nMorph.framework.orm.common.enums.LogicOperatorEnum {
		
		public LogicOperatorEnum_AND() : base(1) {
		}
		
		
		public override string getTag() {
			return "AND";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class LogicOperatorEnum_OR : global::nMorph.framework.orm.common.enums.LogicOperatorEnum {
		
		public LogicOperatorEnum_OR() : base(2) {
		}
		
		
		public override string getTag() {
			return "OR";
		}
		
		
	}
}


