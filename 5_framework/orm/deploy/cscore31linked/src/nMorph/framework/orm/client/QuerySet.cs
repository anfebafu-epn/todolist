// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.client {
	public class QuerySet : global::haxe.lang.HxObject {
		
		public QuerySet(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public QuerySet() {
			global::nMorph.framework.orm.client.QuerySet.__hx_ctor_nMorph_framework_orm_client_QuerySet(this);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_client_QuerySet(global::nMorph.framework.orm.client.QuerySet __hx_this) {
		}
		
		
		public global::Array<object> Tables;
		
		public virtual global::Array<object> set_Tables(global::Array<object> @value) {
			return this.Tables = @value;
		}
		
		
		public virtual global::Array<object> get_Tables() {
			return this.Tables;
		}
		
		
		public virtual global::nMorph.framework.orm.client.QueryTable @get(string Name) {
			{
				int _g = 0;
				global::Array<object> _g1 = this.get_Tables();
				while (( _g < _g1.length )) {
					global::nMorph.framework.orm.client.QueryTable dt = ((global::nMorph.framework.orm.client.QueryTable) (_g1[_g]) );
					 ++ _g;
					if (( dt.get_Name() == Name )) {
						return dt;
					}
					
				}
				
			}
			
			return null;
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 821151941:
					{
						if (handleProperties) {
							this.set_Tables(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) ));
							return @value;
						}
						else {
							this.Tables = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
							return @value;
						}
						
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5144726:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get", 5144726)) );
					}
					
					
					case 561592462:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_Tables", 561592462)) );
					}
					
					
					case 620156674:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_Tables", 620156674)) );
					}
					
					
					case 821151941:
					{
						return ( (handleProperties) ? (this.get_Tables()) : (this.Tables) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 5144726:
					{
						return this.@get(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 561592462:
					{
						return this.get_Tables();
					}
					
					
					case 620156674:
					{
						return this.set_Tables(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("Tables");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


