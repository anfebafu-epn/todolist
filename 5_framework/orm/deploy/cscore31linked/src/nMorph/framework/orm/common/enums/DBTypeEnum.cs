// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public class DBTypeEnum : global::haxe.lang.Enum {
		public DBTypeEnum() : base(0) { }

		
		protected DBTypeEnum(int index) : base(index) {
		}
		
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum SMALLINTEGER = new global::nMorph.framework.orm.common.enums.DBTypeEnum_SMALLINTEGER();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum INTEGER = new global::nMorph.framework.orm.common.enums.DBTypeEnum_INTEGER();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum BIGINTEGER = new global::nMorph.framework.orm.common.enums.DBTypeEnum_BIGINTEGER();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum FLOAT = new global::nMorph.framework.orm.common.enums.DBTypeEnum_FLOAT();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum REAL = new global::nMorph.framework.orm.common.enums.DBTypeEnum_REAL();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum DECIMAL = new global::nMorph.framework.orm.common.enums.DBTypeEnum_DECIMAL();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum CHAR = new global::nMorph.framework.orm.common.enums.DBTypeEnum_CHAR();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum VARCHAR = new global::nMorph.framework.orm.common.enums.DBTypeEnum_VARCHAR();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum BIGTEXT = new global::nMorph.framework.orm.common.enums.DBTypeEnum_BIGTEXT();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum NCHAR = new global::nMorph.framework.orm.common.enums.DBTypeEnum_NCHAR();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum NVARCHAR = new global::nMorph.framework.orm.common.enums.DBTypeEnum_NVARCHAR();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum NBIGTEXT = new global::nMorph.framework.orm.common.enums.DBTypeEnum_NBIGTEXT();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum BINARY = new global::nMorph.framework.orm.common.enums.DBTypeEnum_BINARY();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum DATETIME = new global::nMorph.framework.orm.common.enums.DBTypeEnum_DATETIME();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum BOOLEAN = new global::nMorph.framework.orm.common.enums.DBTypeEnum_BOOLEAN();
		
		public static readonly global::nMorph.framework.orm.common.enums.DBTypeEnum UUID = new global::nMorph.framework.orm.common.enums.DBTypeEnum_UUID();
		
		protected static readonly string[] __hx_constructs = new string[]{"SMALLINTEGER", "INTEGER", "BIGINTEGER", "FLOAT", "REAL", "DECIMAL", "CHAR", "VARCHAR", "BIGTEXT", "NCHAR", "NVARCHAR", "NBIGTEXT", "BINARY", "DATETIME", "BOOLEAN", "UUID"};
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_SMALLINTEGER : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_SMALLINTEGER() : base(0) {
		}
		
		
		public override string getTag() {
			return "SMALLINTEGER";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_INTEGER : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_INTEGER() : base(1) {
		}
		
		
		public override string getTag() {
			return "INTEGER";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_BIGINTEGER : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_BIGINTEGER() : base(2) {
		}
		
		
		public override string getTag() {
			return "BIGINTEGER";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_FLOAT : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_FLOAT() : base(3) {
		}
		
		
		public override string getTag() {
			return "FLOAT";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_REAL : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_REAL() : base(4) {
		}
		
		
		public override string getTag() {
			return "REAL";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_DECIMAL : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_DECIMAL() : base(5) {
		}
		
		
		public override string getTag() {
			return "DECIMAL";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_CHAR : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_CHAR() : base(6) {
		}
		
		
		public override string getTag() {
			return "CHAR";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_VARCHAR : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_VARCHAR() : base(7) {
		}
		
		
		public override string getTag() {
			return "VARCHAR";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_BIGTEXT : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_BIGTEXT() : base(8) {
		}
		
		
		public override string getTag() {
			return "BIGTEXT";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_NCHAR : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_NCHAR() : base(9) {
		}
		
		
		public override string getTag() {
			return "NCHAR";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_NVARCHAR : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_NVARCHAR() : base(10) {
		}
		
		
		public override string getTag() {
			return "NVARCHAR";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_NBIGTEXT : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_NBIGTEXT() : base(11) {
		}
		
		
		public override string getTag() {
			return "NBIGTEXT";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_BINARY : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_BINARY() : base(12) {
		}
		
		
		public override string getTag() {
			return "BINARY";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_DATETIME : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_DATETIME() : base(13) {
		}
		
		
		public override string getTag() {
			return "DATETIME";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_BOOLEAN : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_BOOLEAN() : base(14) {
		}
		
		
		public override string getTag() {
			return "BOOLEAN";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.enums {
	public sealed class DBTypeEnum_UUID : global::nMorph.framework.orm.common.enums.DBTypeEnum {
		
		public DBTypeEnum_UUID() : base(15) {
		}
		
		
		public override string getTag() {
			return "UUID";
		}
		
		
	}
}


