// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.sentences {
	public class St : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.ISentence {
		
		static St() {
			global::nMorph.framework.orm.common.sentences.St.__rtti = "<class path=\"nMorph.framework.orm.common.sentences.St\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<LENGTH public=\"1\" set=\"method\" line=\"36\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></LENGTH>\n\t<CONCAT public=\"1\" set=\"method\" line=\"41\" static=\"1\"><f a=\"Sentence:OtherStr:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></CONCAT>\n\t<REPLACE public=\"1\" set=\"method\" line=\"46\" static=\"1\"><f a=\"Sentence:First:Last:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></REPLACE>\n\t<LOCATE public=\"1\" set=\"method\" line=\"50\" static=\"1\"><f a=\"Sentence:Search:?Index:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<x path=\"Int\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></LOCATE>\n\t<SUBSTRING public=\"1\" set=\"method\" line=\"54\" static=\"1\"><f a=\"Sentence:Index:Length:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></SUBSTRING>\n\t<LOWER public=\"1\" set=\"method\" line=\"66\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></LOWER>\n\t<UPPER public=\"1\" set=\"method\" line=\"71\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></UPPER>\n\t<TRIM public=\"1\" set=\"method\" line=\"76\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></TRIM>\n\t<REVERSE public=\"1\" set=\"method\" line=\"81\" static=\"1\"><f a=\"Sentence:?Alias\">\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n</f></REVERSE>\n\t<StType><e path=\"nMorph.framework.orm.common.enums.StTypeEnum\"/></StType>\n\t<Sentence><c path=\"nMorph.framework.orm.interfaces.ISentence\"/></Sentence>\n\t<CurrentSQL><c path=\"nMorph.framework.orm.lang.SQL\"/></CurrentSQL>\n\t<Alias><c path=\"String\"/></Alias>\n\t<First><c path=\"String\"/></First>\n\t<Last><c path=\"String\"/></Last>\n\t<Index><x path=\"Null\"><x path=\"Int\"/></x></Index>\n\t<Length><x path=\"Null\"><x path=\"Int\"/></x></Length>\n\t<IsNullValue public=\"1\" set=\"method\" line=\"32\"><f a=\"\"><x path=\"Bool\"/></f></IsNullValue>\n\t<RegisterQuery public=\"1\" set=\"method\" line=\"59\"><f a=\"CurrentSQL\">\n\t<c path=\"nMorph.framework.orm.interfaces.ILang\"/>\n\t<x path=\"Void\"/>\n</f></RegisterQuery>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"86\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<new public=\"1\" set=\"method\" line=\"21\"><f a=\"StType:Sentence:?First:?Last:?Index:?Length:?Alias\">\n\t<e path=\"nMorph.framework.orm.common.enums.StTypeEnum\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISentence\"/>\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public St(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public St(global::nMorph.framework.orm.common.enums.StTypeEnum StType, global::nMorph.framework.orm.interfaces.ISentence Sentence, string First, string Last, global::haxe.lang.Null<int> Index, global::haxe.lang.Null<int> Length, string Alias) {
			global::nMorph.framework.orm.common.sentences.St.__hx_ctor_nMorph_framework_orm_common_sentences_St(this, StType, Sentence, First, Last, Index, Length, Alias);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_sentences_St(global::nMorph.framework.orm.common.sentences.St __hx_this, global::nMorph.framework.orm.common.enums.StTypeEnum StType, global::nMorph.framework.orm.interfaces.ISentence Sentence, string First, string Last, global::haxe.lang.Null<int> Index, global::haxe.lang.Null<int> Length, string Alias) {
			__hx_this.StType = StType;
			__hx_this.Sentence = Sentence;
			__hx_this.Alias = Alias;
			__hx_this.First = First;
			__hx_this.Last = Last;
			__hx_this.Index = Index;
			__hx_this.Length = Length;
		}
		
		
		public static string __rtti;
		
		public static global::nMorph.framework.orm.interfaces.ISentence LENGTH(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.LENGTH) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(string), default(string), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>), ((string) (Alias) ));
			return st;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence CONCAT(global::nMorph.framework.orm.interfaces.ISentence Sentence, string OtherStr, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.CONCAT) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), ((string) (OtherStr) ), default(string), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>), ((string) (Alias) ));
			return st;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence REPLACE(global::nMorph.framework.orm.interfaces.ISentence Sentence, string First, string Last, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.REPLACE) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), ((string) (First) ), ((string) (Last) ), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>), ((string) (Alias) ));
			return st;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence LOCATE(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Search, global::haxe.lang.Null<int> Index, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.LOCATE) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), ((string) (Search) ), default(string), ((global::haxe.lang.Null<int>) (Index) ), default(global::haxe.lang.Null<int>), ((string) (Alias) ));
			return st;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence SUBSTRING(global::nMorph.framework.orm.interfaces.ISentence Sentence, int Index, int Length, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.SUBSTRING) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(string), default(string), new global::haxe.lang.Null<int>(Index, true), new global::haxe.lang.Null<int>(Length, true), ((string) (Alias) ));
			return st;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence LOWER(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.LOWER) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(string), default(string), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>), ((string) (Alias) ));
			return st;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence UPPER(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.UPPER) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(string), default(string), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>), ((string) (Alias) ));
			return st;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence TRIM(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.TRIM) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(string), default(string), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>), ((string) (Alias) ));
			return st;
		}
		
		
		public static global::nMorph.framework.orm.interfaces.ISentence REVERSE(global::nMorph.framework.orm.interfaces.ISentence Sentence, string Alias) {
			global::nMorph.framework.orm.common.sentences.St st = new global::nMorph.framework.orm.common.sentences.St(((global::nMorph.framework.orm.common.enums.StTypeEnum) (global::nMorph.framework.orm.common.enums.StTypeEnum.REVERSE) ), ((global::nMorph.framework.orm.interfaces.ISentence) (Sentence) ), default(string), default(string), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>), ((string) (Alias) ));
			return st;
		}
		
		
		public global::nMorph.framework.orm.common.enums.StTypeEnum StType;
		
		public global::nMorph.framework.orm.interfaces.ISentence Sentence;
		
		public global::nMorph.framework.orm.lang.SQL CurrentSQL;
		
		public string Alias;
		
		public string First;
		
		public string Last;
		
		public global::haxe.lang.Null<int> Index;
		
		public global::haxe.lang.Null<int> Length;
		
		public virtual bool IsNullValue() {
			return false;
		}
		
		
		public virtual void RegisterQuery(global::nMorph.framework.orm.interfaces.ILang CurrentSQL) {
			this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (CurrentSQL) );
			if (( this.Sentence != null )) {
				this.Sentence.RegisterQuery(CurrentSQL);
			}
			
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			unchecked {
				switch (this.CurrentSQL.getCurrentEngine()._hx_index) {
					case 0:
					{
						switch (this.StType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("DATALENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("DATALENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\',\'"), this.Last), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\',\'"), this.Last), "\') "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if (this.Index.hasValue) {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CHARINDEX(\'", this.First), "\',"));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CHARINDEX(\'", this.First), "\',"));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
									}
									
								}
								else if (this.Index.hasValue) {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CHARINDEX(\'", this.First), "\',"));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CHARINDEX(\'", this.First), "\',"));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									if (this.Length.hasValue) {
										this.CurrentSQL.AddBlock("SUBSTRING(");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock("SUBSTRING(");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									
								}
								else if (this.Length.hasValue) {
									this.CurrentSQL.AddBlock("SUBSTRING(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock("SUBSTRING()");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LTRIM(RTRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(")) AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LTRIM(RTRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(")) ");
								}
								
								break;
							}
							
							
							case 8:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 1:
					{
						switch (this.StType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\',\'"), this.Last), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\',\'"), this.Last), "\') "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if (this.Index.hasValue) {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("INSTR(\'", this.First), "\',"));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("INSTR(\'", this.First), "\',"));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
									}
									
								}
								else if (this.Index.hasValue) {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("INSTR(\'", this.First), "\',"));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("INSTR(\'", this.First), "\',"));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									if (this.Length.hasValue) {
										this.CurrentSQL.AddBlock("SUBSTR(");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock("SUBSTR(");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									
								}
								else if (this.Length.hasValue) {
									this.CurrentSQL.AddBlock("SUBSTR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock("SUBSTR(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("TRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("TRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 8:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 2:
					{
						switch (this.StType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\',\'"), this.Last), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\',\'"), this.Last), "\') "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if (this.Index.hasValue) {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("LOCATE(\'", this.First), "\',"));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("LOCATE(\'", this.First), "\',"));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
									}
									
								}
								else if (this.Index.hasValue) {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("LOCATE(\'", this.First), "\',"));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("LOCATE(\'", this.First), "\',"));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									if (this.Length.hasValue) {
										this.CurrentSQL.AddBlock("SUBSTRING(");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock("SUBSTRING(");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									
								}
								else if (this.Length.hasValue) {
									this.CurrentSQL.AddBlock("SUBSTRING(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock("SUBSTRING(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("TRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("TRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 8:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 3:
					{
						switch (this.StType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\',\'"), this.Last), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\',\'"), this.Last), "\') "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if (this.Index.hasValue) {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("POSITION(\'", this.First), "\' IN "));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("POSITION(\'", this.First), "\' IN "));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
									}
									
								}
								else if (this.Index.hasValue) {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("POSITION(\'", this.First), "\' IN "));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("POSITION(\'", this.First), "\' IN "));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									if (this.Length.hasValue) {
										this.CurrentSQL.AddBlock("SUBSTRING(");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock("SUBSTRING(");
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									
								}
								else if (this.Length.hasValue) {
									this.CurrentSQL.AddBlock("SUBSTRING(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock("SUBSTRING(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("TRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("TRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 8:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 4:
					{
						switch (this.StType._hx_index) {
							case 0:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LENGTH(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 1:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("CONCAT(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\') "));
								}
								
								break;
							}
							
							
							case 2:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\",\""), this.Last), "\') AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REPLACE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\'", this.First), "\",\""), this.Last), "\') "));
								}
								
								break;
							}
							
							
							case 3:
							{
								if (( this.Alias != null )) {
									if (this.Index.hasValue) {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CHARINDEX(\'", this.First), "\',"));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") AS \""), this.Alias), "\" "));
									}
									else {
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CHARINDEX(\'", this.First), "\',"));
										this.Sentence.SCRIPT_PART(null);
										this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
									}
									
								}
								else if (this.Index.hasValue) {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CHARINDEX(\'", this.First), "\',"));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ") "));
								}
								else {
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("CHARINDEX(\'", this.First), "\',"));
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 4:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("SUBSTRING(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") AS \""), this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("SUBSTRING(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",", global::haxe.lang.Runtime.toString((this.Index).toDynamic())), ","), global::haxe.lang.Runtime.toString((this.Length).toDynamic())), ") "));
								}
								
								break;
							}
							
							
							case 5:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("LOWER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 6:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("UPPER(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 7:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("TRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("TRIM(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
							case 8:
							{
								if (( this.Alias != null )) {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(") AS \"", this.Alias), "\" "));
								}
								else {
									this.CurrentSQL.AddBlock("REVERSE(");
									this.Sentence.SCRIPT_PART(null);
									this.CurrentSQL.AddBlock(") ");
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1402734854:
					{
						this.Length = global::haxe.lang.Null<object>.ofDynamic<int>(@value);
						return @value;
					}
					
					
					case 1363282674:
					{
						this.Index = global::haxe.lang.Null<object>.ofDynamic<int>(@value);
						return @value;
					}
					
					
					case 847656566:
					{
						this.Last = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 332064784:
					{
						this.First = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 884916592:
					{
						this.Alias = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1038308213:
					{
						this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					case 2082877635:
					{
						this.Sentence = ((global::nMorph.framework.orm.interfaces.ISentence) (@value) );
						return @value;
					}
					
					
					case 838622235:
					{
						this.StType = ((global::nMorph.framework.orm.common.enums.StTypeEnum) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 457416069:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "RegisterQuery", 457416069)) );
					}
					
					
					case 150705664:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "IsNullValue", 150705664)) );
					}
					
					
					case 1402734854:
					{
						return (this.Length).toDynamic();
					}
					
					
					case 1363282674:
					{
						return (this.Index).toDynamic();
					}
					
					
					case 847656566:
					{
						return this.Last;
					}
					
					
					case 332064784:
					{
						return this.First;
					}
					
					
					case 884916592:
					{
						return this.Alias;
					}
					
					
					case 1038308213:
					{
						return this.CurrentSQL;
					}
					
					
					case 2082877635:
					{
						return this.Sentence;
					}
					
					
					case 838622235:
					{
						return this.StType;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 457416069:
					{
						this.RegisterQuery(((global::nMorph.framework.orm.interfaces.ILang) (dynargs[0]) ));
						break;
					}
					
					
					case 150705664:
					{
						return this.IsNullValue();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("Length");
			baseArr.push("Index");
			baseArr.push("Last");
			baseArr.push("First");
			baseArr.push("Alias");
			baseArr.push("CurrentSQL");
			baseArr.push("Sentence");
			baseArr.push("StType");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


