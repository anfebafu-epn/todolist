// Generated by Haxe 4.2.2
package nMorph.framework.orm.common.ddl;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class ColumnDefinition extends haxe.lang.HxObject implements nMorph.framework.orm.interfaces.IColumnDefinition
{
	static
	{
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		nMorph.framework.orm.common.ddl.ColumnDefinition.__rtti = "<class path=\"nMorph.framework.orm.common.ddl.ColumnDefinition\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/>\n\t<SET public=\"1\" set=\"method\" line=\"34\" static=\"1\"><f a=\"ColumnName:DataType:Lenght:Scale:Nullable:IsPrimaryKey:DefaultValue\">\n\t<c path=\"String\"/>\n\t<e path=\"nMorph.framework.orm.common.enums.DBTypeEnum\"/>\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n\t<e path=\"nMorph.framework.orm.common.enums.NullableEnum\"/>\n\t<x path=\"Bool\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/>\n\t<c path=\"nMorph.framework.orm.common.ddl.ColumnDefinition\"/>\n</f></SET>\n\t<ColumnName><c path=\"String\"/></ColumnName>\n\t<DataType><e path=\"nMorph.framework.orm.common.enums.DBTypeEnum\"/></DataType>\n\t<Lenght><x path=\"Int\"/></Lenght>\n\t<Scale><x path=\"Int\"/></Scale>\n\t<Nullable><e path=\"nMorph.framework.orm.common.enums.NullableEnum\"/></Nullable>\n\t<IsPrimaryKey><x path=\"Bool\"/></IsPrimaryKey>\n\t<DefaultValue><c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/></DefaultValue>\n\t<CurrentDDL><c path=\"nMorph.framework.orm.lang.DDL\"/></CurrentDDL>\n\t<RegisterQuery public=\"1\" set=\"method\" line=\"39\"><f a=\"CurrentDDL\">\n\t<c path=\"nMorph.framework.orm.interfaces.ILang\"/>\n\t<x path=\"Void\"/>\n</f></RegisterQuery>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"43\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></SCRIPT_PART>\n\t<new public=\"1\" set=\"method\" line=\"24\"><f a=\"ColumnName:DataType:Lenght:Scale:Nullable:IsPrimaryKey:DefaultValue\">\n\t<c path=\"String\"/>\n\t<e path=\"nMorph.framework.orm.common.enums.DBTypeEnum\"/>\n\t<x path=\"Int\"/>\n\t<x path=\"Int\"/>\n\t<e path=\"nMorph.framework.orm.common.enums.NullableEnum\"/>\n\t<x path=\"Bool\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
	}
	
	public ColumnDefinition(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public ColumnDefinition(java.lang.String ColumnName, nMorph.framework.orm.common.enums.DBTypeEnum DataType, int Lenght, int Scale, nMorph.framework.orm.common.enums.NullableEnum Nullable, boolean IsPrimaryKey, nMorph.framework.orm.interfaces.IColumnDefinition DefaultValue)
	{
		//line 24 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		nMorph.framework.orm.common.ddl.ColumnDefinition.__hx_ctor_nMorph_framework_orm_common_ddl_ColumnDefinition(this, ColumnName, DataType, Lenght, Scale, Nullable, IsPrimaryKey, DefaultValue);
	}
	
	
	protected static void __hx_ctor_nMorph_framework_orm_common_ddl_ColumnDefinition(nMorph.framework.orm.common.ddl.ColumnDefinition __hx_this, java.lang.String ColumnName, nMorph.framework.orm.common.enums.DBTypeEnum DataType, int Lenght, int Scale, nMorph.framework.orm.common.enums.NullableEnum Nullable, boolean IsPrimaryKey, nMorph.framework.orm.interfaces.IColumnDefinition DefaultValue)
	{
		//line 25 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		__hx_this.ColumnName = ColumnName;
		//line 26 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		__hx_this.DataType = DataType;
		//line 27 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		__hx_this.Lenght = Lenght;
		//line 28 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		__hx_this.Scale = Scale;
		//line 29 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		__hx_this.Nullable = Nullable;
		//line 30 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		__hx_this.IsPrimaryKey = IsPrimaryKey;
		//line 31 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		__hx_this.DefaultValue = DefaultValue;
	}
	
	
	public static java.lang.String __rtti;
	
	public static nMorph.framework.orm.common.ddl.ColumnDefinition SET(java.lang.String ColumnName, nMorph.framework.orm.common.enums.DBTypeEnum DataType, int Lenght, int Scale, nMorph.framework.orm.common.enums.NullableEnum Nullable, boolean IsPrimaryKey, nMorph.framework.orm.interfaces.IColumnDefinition DefaultValue)
	{
		//line 35 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		nMorph.framework.orm.common.ddl.ColumnDefinition cd = new nMorph.framework.orm.common.ddl.ColumnDefinition(haxe.lang.Runtime.toString(ColumnName), ((nMorph.framework.orm.common.enums.DBTypeEnum) (DataType) ), ((int) (Lenght) ), ((int) (Scale) ), ((nMorph.framework.orm.common.enums.NullableEnum) (Nullable) ), haxe.lang.Runtime.toBool(((java.lang.Boolean) (IsPrimaryKey) )), ((nMorph.framework.orm.interfaces.IColumnDefinition) (DefaultValue) ));
		//line 36 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		return cd;
	}
	
	
	public java.lang.String ColumnName;
	
	public nMorph.framework.orm.common.enums.DBTypeEnum DataType;
	
	public int Lenght;
	
	public int Scale;
	
	public nMorph.framework.orm.common.enums.NullableEnum Nullable;
	
	public boolean IsPrimaryKey;
	
	public nMorph.framework.orm.interfaces.IColumnDefinition DefaultValue;
	
	public nMorph.framework.orm.lang.DDL CurrentDDL;
	
	public void RegisterQuery(nMorph.framework.orm.interfaces.ILang CurrentDDL)
	{
		//line 40 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		this.CurrentDDL = ((nMorph.framework.orm.lang.DDL) (CurrentDDL) );
	}
	
	
	public java.lang.String SCRIPT_PART(java.lang.String args)
	{
		//line 44 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		java.lang.String Part = "";
		//line 45 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		if (( this.CurrentDDL == null )) 
		{
			//line 46 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			this.CurrentDDL = new nMorph.framework.orm.lang.DDL();
		}
		
		//line 48 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		switch (this.CurrentDDL.getCurrentEngine())
		{
			case SQLSERVER:
			{
				//line 462 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				if (( args != null )) 
				{
					//line 463 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (haxe.lang.Runtime.valEq(args, "OnlyName")) 
					{
						//line 464 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " \"" + this.ColumnName ) + "\" " );
					}
					else
					{
						//line 466 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (haxe.lang.Runtime.valEq(args, "Alter")) 
						{
							//line 467 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( " \"" + this.ColumnName ) + "\" " );
							//line 468 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							switch (this.DataType)
							{
								case SMALLINTEGER:
								{
									//line 470 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "smallint ";
									//line 470 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case INTEGER:
								{
									//line 494 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "INT ";
									//line 494 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGINTEGER:
								{
									//line 496 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "bigint ";
									//line 496 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case FLOAT:
								{
									//line 492 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "FLOAT ";
									//line 492 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case REAL:
								{
									//line 472 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "REAL ";
									//line 472 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DECIMAL:
								{
									//line 490 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
									//line 490 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case CHAR:
								{
									//line 480 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "CHAR ";
									//line 480 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case VARCHAR:
								{
									//line 500 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
									//line 500 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGTEXT:
								{
									//line 482 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "VARCHAR(MAX) ";
									//line 482 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NCHAR:
								{
									//line 476 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "NCHAR ";
									//line 476 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NVARCHAR:
								{
									//line 474 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "NVARCHAR ";
									//line 474 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NBIGTEXT:
								{
									//line 478 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "VARCHAR(MAX) ";
									//line 478 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BINARY:
								{
									//line 484 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "VARBINARY(MAX) ";
									//line 484 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DATETIME:
								{
									//line 488 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "DATETIME ";
									//line 488 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BOOLEAN:
								{
									//line 486 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "BIT ";
									//line 486 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case UUID:
								{
									//line 498 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "UNIQUEIDENTIFIER ";
									//line 498 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
							}
							
							//line 503 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? (" NULL ") : (" NOT NULL ") );
							//line 508 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							if (( this.DefaultValue != null )) 
							{
								//line 509 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
								Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
							}
							
						}
						
					}
					
				}
				else
				{
					//line 514 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( ( " \"" + this.ColumnName ) + "\" " );
					//line 516 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					switch (this.DataType)
					{
						case SMALLINTEGER:
						{
							//line 518 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "smallint ";
							//line 518 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case INTEGER:
						{
							//line 542 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "INT ";
							//line 542 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGINTEGER:
						{
							//line 544 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "bigint ";
							//line 544 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case FLOAT:
						{
							//line 540 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "FLOAT ";
							//line 540 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case REAL:
						{
							//line 520 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "REAL ";
							//line 520 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DECIMAL:
						{
							//line 538 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
							//line 538 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case CHAR:
						{
							//line 528 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "CHAR ";
							//line 528 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case VARCHAR:
						{
							//line 548 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
							//line 548 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGTEXT:
						{
							//line 530 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "VARCHAR(MAX) ";
							//line 530 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NCHAR:
						{
							//line 524 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "NCHAR ";
							//line 524 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NVARCHAR:
						{
							//line 522 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "NVARCHAR ";
							//line 522 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NBIGTEXT:
						{
							//line 526 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "VARCHAR(MAX) ";
							//line 526 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BINARY:
						{
							//line 532 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "VARBINARY(MAX) ";
							//line 532 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DATETIME:
						{
							//line 536 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "DATETIME ";
							//line 536 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BOOLEAN:
						{
							//line 534 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "BIT ";
							//line 534 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case UUID:
						{
							//line 546 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "UNIQUEIDENTIFIER ";
							//line 546 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
					}
					
					//line 551 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? ("NULL ") : ("NOT NULL ") );
					//line 552 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (this.IsPrimaryKey) 
					{
						//line 553 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += "PRIMARY KEY ";
					}
					
					//line 556 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (( this.DefaultValue != null )) 
					{
						//line 557 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
					}
					
				}
				
				//line 462 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				break;
			}
			
			
			case ORACLE:
			{
				//line 256 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				if (( args != null )) 
				{
					//line 257 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (haxe.lang.Runtime.valEq(args, "OnlyName")) 
					{
						//line 258 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " \"" + this.ColumnName ) + "\" " );
					}
					else
					{
						//line 260 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (haxe.lang.Runtime.valEq(args, "Alter")) 
						{
							//line 261 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( " \"" + this.ColumnName ) + "\" " );
							//line 262 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							switch (this.DataType)
							{
								case SMALLINTEGER:
								{
									//line 264 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "NUMBER (" + this.Lenght ) + ") " );
									//line 264 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case INTEGER:
								{
									//line 289 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "NUMBER (" + this.Lenght ) + ") " );
									//line 289 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGINTEGER:
								{
									//line 291 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "LONG ";
									//line 291 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case FLOAT:
								{
									//line 287 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "FLOAT ";
									//line 287 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case REAL:
								{
									//line 266 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "REAL ";
									//line 266 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DECIMAL:
								{
									//line 285 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
									//line 285 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case CHAR:
								{
									//line 274 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "CHAR ";
									//line 274 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case VARCHAR:
								{
									//line 295 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR2(" + this.Lenght ) + ") " );
									//line 295 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGTEXT:
								{
									//line 276 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR2(" + this.Lenght ) + ") " );
									//line 276 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NCHAR:
								{
									//line 270 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "NCHAR ";
									//line 270 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NVARCHAR:
								{
									//line 268 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "NVARCHAR2(" + this.Lenght ) + ") " );
									//line 268 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NBIGTEXT:
								{
									//line 272 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR2(" + this.Lenght ) + ") " );
									//line 272 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BINARY:
								{
									//line 279 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "BLOB ";
									//line 279 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DATETIME:
								{
									//line 283 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "DATE ";
									//line 283 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BOOLEAN:
								{
									//line 281 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "NUMBER(1) ";
									//line 281 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case UUID:
								{
									//line 293 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR2(" + this.Lenght ) + ") " );
									//line 293 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
							}
							
							//line 298 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? (" NULL ") : (" NOT NULL ") );
							//line 303 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							if (( this.DefaultValue != null )) 
							{
								//line 304 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
								Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
							}
							
						}
						
					}
					
				}
				else
				{
					//line 309 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( ( " \"" + this.ColumnName ) + "\" " );
					//line 311 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					switch (this.DataType)
					{
						case SMALLINTEGER:
						{
							//line 313 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "NUMBER (" + this.Lenght ) + ") " );
							//line 313 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case INTEGER:
						{
							//line 338 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "NUMBER (" + this.Lenght ) + ") " );
							//line 338 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGINTEGER:
						{
							//line 340 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "LONG ";
							//line 340 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case FLOAT:
						{
							//line 336 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "FLOAT ";
							//line 336 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case REAL:
						{
							//line 315 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "REAL ";
							//line 315 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DECIMAL:
						{
							//line 334 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
							//line 334 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case CHAR:
						{
							//line 323 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "CHAR ";
							//line 323 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case VARCHAR:
						{
							//line 344 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR2(" + this.Lenght ) + ") " );
							//line 344 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGTEXT:
						{
							//line 325 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR2(" + this.Lenght ) + ") " );
							//line 325 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NCHAR:
						{
							//line 319 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "NCHAR ";
							//line 319 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NVARCHAR:
						{
							//line 317 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "NVARCHAR2(" + this.Lenght ) + ") " );
							//line 317 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NBIGTEXT:
						{
							//line 321 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR2(" + this.Lenght ) + ") " );
							//line 321 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BINARY:
						{
							//line 328 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "BLOB ";
							//line 328 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DATETIME:
						{
							//line 332 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "DATE ";
							//line 332 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BOOLEAN:
						{
							//line 330 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "NUMBER(1) ";
							//line 330 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case UUID:
						{
							//line 342 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR2(" + this.Lenght ) + ") " );
							//line 342 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
					}
					
					//line 347 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (( this.DefaultValue != null )) 
					{
						//line 348 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
					}
					
					//line 351 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? ("NULL ") : ("NOT NULL ") );
					//line 352 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (this.IsPrimaryKey) 
					{
						//line 353 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += "PRIMARY KEY ";
					}
					
				}
				
				//line 256 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				break;
			}
			
			
			case MYSQL:
			{
				//line 154 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				if (( args != null )) 
				{
					//line 155 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (haxe.lang.Runtime.valEq(args, "OnlyName")) 
					{
						//line 156 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " \"" + this.ColumnName ) + "\" " );
					}
					else
					{
						//line 158 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (haxe.lang.Runtime.valEq(args, "Alter")) 
						{
							//line 159 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( " \"" + this.ColumnName ) + "\" " );
							//line 160 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							switch (this.DataType)
							{
								case SMALLINTEGER:
								{
									//line 162 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "SMALLINT ";
									//line 162 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case INTEGER:
								{
									//line 187 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "INT ";
									//line 187 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGINTEGER:
								{
									//line 189 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "LONG ";
									//line 189 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case FLOAT:
								{
									//line 185 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "FLOAT ";
									//line 185 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case REAL:
								{
									//line 164 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "REAL ";
									//line 164 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DECIMAL:
								{
									//line 183 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
									//line 183 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case CHAR:
								{
									//line 172 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "CHAR ";
									//line 172 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case VARCHAR:
								{
									//line 193 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
									//line 193 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGTEXT:
								{
									//line 174 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "LONGTEXT ";
									//line 174 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NCHAR:
								{
									//line 168 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "NCHAR ";
									//line 168 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NVARCHAR:
								{
									//line 166 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "NVARCHAR(" + this.Lenght ) + ") " );
									//line 166 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NBIGTEXT:
								{
									//line 170 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
									//line 170 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BINARY:
								{
									//line 177 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "LONGBLOB ";
									//line 177 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DATETIME:
								{
									//line 181 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "DATETIME ";
									//line 181 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BOOLEAN:
								{
									//line 179 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "BIT ";
									//line 179 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case UUID:
								{
									//line 191 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
									//line 191 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
							}
							
							//line 195 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? ("NULL ") : ("NOT NULL ") );
							//line 200 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							if (( this.DefaultValue != null )) 
							{
								//line 201 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
								Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
							}
							
						}
						
					}
					
				}
				else
				{
					//line 206 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( ( " \"" + this.ColumnName ) + "\" " );
					//line 208 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					switch (this.DataType)
					{
						case SMALLINTEGER:
						{
							//line 210 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "SMALLINT ";
							//line 210 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case INTEGER:
						{
							//line 235 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "INT ";
							//line 235 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGINTEGER:
						{
							//line 237 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "LONG ";
							//line 237 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case FLOAT:
						{
							//line 233 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "FLOAT ";
							//line 233 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case REAL:
						{
							//line 212 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "REAL ";
							//line 212 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DECIMAL:
						{
							//line 231 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
							//line 231 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case CHAR:
						{
							//line 220 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "CHAR ";
							//line 220 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case VARCHAR:
						{
							//line 241 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
							//line 241 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGTEXT:
						{
							//line 222 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "LONGTEXT ";
							//line 222 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NCHAR:
						{
							//line 216 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "NCHAR ";
							//line 216 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NVARCHAR:
						{
							//line 214 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "NVARCHAR(" + this.Lenght ) + ") " );
							//line 214 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NBIGTEXT:
						{
							//line 218 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
							//line 218 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BINARY:
						{
							//line 225 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "LONGBLOB ";
							//line 225 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DATETIME:
						{
							//line 229 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "DATETIME ";
							//line 229 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BOOLEAN:
						{
							//line 227 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "BIT ";
							//line 227 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case UUID:
						{
							//line 239 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
							//line 239 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
					}
					
					//line 244 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? ("NULL ") : ("NOT NULL ") );
					//line 245 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (this.IsPrimaryKey) 
					{
						//line 246 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += "PRIMARY KEY ";
					}
					
					//line 249 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (( this.DefaultValue != null )) 
					{
						//line 250 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
					}
					
				}
				
				//line 154 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				break;
			}
			
			
			case POSTGRESQL:
			{
				//line 361 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				if (( args != null )) 
				{
					//line 362 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (haxe.lang.Runtime.valEq(args, "OnlyName")) 
					{
						//line 363 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " \"" + this.ColumnName ) + "\" " );
					}
					else
					{
						//line 365 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (haxe.lang.Runtime.valEq(args, "Alter")) 
						{
							//line 366 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( " \"" + this.ColumnName ) + "\" " );
							//line 367 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							switch (this.DataType)
							{
								case SMALLINTEGER:
								{
									//line 369 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "smallint ";
									//line 369 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case INTEGER:
								{
									//line 393 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "integer ";
									//line 393 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGINTEGER:
								{
									//line 395 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "bigint ";
									//line 395 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case FLOAT:
								{
									//line 391 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "FLOAT ";
									//line 391 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case REAL:
								{
									//line 371 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "REAL ";
									//line 371 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DECIMAL:
								{
									//line 389 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
									//line 389 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case CHAR:
								{
									//line 379 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "CHAR(" + this.Lenght ) + ") " );
									//line 379 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case VARCHAR:
								{
									//line 399 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
									//line 399 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGTEXT:
								{
									//line 381 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "text ";
									//line 381 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NCHAR:
								{
									//line 375 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "CHAR(" + this.Lenght ) + ") " );
									//line 375 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NVARCHAR:
								{
									//line 373 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
									//line 373 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NBIGTEXT:
								{
									//line 377 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "text ";
									//line 377 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BINARY:
								{
									//line 383 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "bytea ";
									//line 383 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DATETIME:
								{
									//line 387 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "timestamp with time zone ";
									//line 387 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BOOLEAN:
								{
									//line 385 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "BIT ";
									//line 385 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case UUID:
								{
									//line 397 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
									//line 397 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
							}
							
							//line 402 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? (" NULL ") : (" NOT NULL ") );
							//line 407 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							if (( this.DefaultValue != null )) 
							{
								//line 408 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
								Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
							}
							
						}
						
					}
					
				}
				else
				{
					//line 413 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( ( " \"" + this.ColumnName ) + "\" " );
					//line 415 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					switch (this.DataType)
					{
						case SMALLINTEGER:
						{
							//line 417 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "smallint ";
							//line 417 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case INTEGER:
						{
							//line 441 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "integer ";
							//line 441 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGINTEGER:
						{
							//line 443 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "bigint ";
							//line 443 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case FLOAT:
						{
							//line 439 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "FLOAT ";
							//line 439 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case REAL:
						{
							//line 419 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "REAL ";
							//line 419 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DECIMAL:
						{
							//line 437 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
							//line 437 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case CHAR:
						{
							//line 427 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "CHAR(" + this.Lenght ) + ") " );
							//line 427 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case VARCHAR:
						{
							//line 447 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
							//line 447 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGTEXT:
						{
							//line 429 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "text ";
							//line 429 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NCHAR:
						{
							//line 423 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "CHAR(" + this.Lenght ) + ") " );
							//line 423 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NVARCHAR:
						{
							//line 421 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
							//line 421 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NBIGTEXT:
						{
							//line 425 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "text ";
							//line 425 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BINARY:
						{
							//line 431 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "bytea ";
							//line 431 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DATETIME:
						{
							//line 435 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "timestamp with time zone ";
							//line 435 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BOOLEAN:
						{
							//line 433 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "BIT ";
							//line 433 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case UUID:
						{
							//line 445 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
							//line 445 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
					}
					
					//line 450 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? ("NULL ") : ("NOT NULL ") );
					//line 451 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (this.IsPrimaryKey) 
					{
						//line 452 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += "PRIMARY KEY ";
					}
					
					//line 455 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (( this.DefaultValue != null )) 
					{
						//line 456 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
					}
					
				}
				
				//line 361 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				break;
			}
			
			
			case GENERIC:
			{
				//line 51 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				if (( args != null )) 
				{
					//line 52 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (haxe.lang.Runtime.valEq(args, "OnlyName")) 
					{
						//line 53 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " \"" + this.ColumnName ) + "\" " );
					}
					else
					{
						//line 55 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (haxe.lang.Runtime.valEq(args, "Alter")) 
						{
							//line 56 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( " \"" + this.ColumnName ) + "\" " );
							//line 57 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							switch (this.DataType)
							{
								case SMALLINTEGER:
								{
									//line 59 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "smallint ";
									//line 59 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case INTEGER:
								{
									//line 84 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "INT ";
									//line 84 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGINTEGER:
								{
									//line 86 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "bigint ";
									//line 86 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case FLOAT:
								{
									//line 82 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "FLOAT ";
									//line 82 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case REAL:
								{
									//line 61 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "REAL ";
									//line 61 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DECIMAL:
								{
									//line 80 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
									//line 80 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case CHAR:
								{
									//line 69 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "CHAR ";
									//line 69 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case VARCHAR:
								{
									//line 90 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
									//line 90 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BIGTEXT:
								{
									//line 71 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "VARCHAR(MAX) ";
									//line 71 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NCHAR:
								{
									//line 65 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "NCHAR(" + this.Lenght ) + ") " );
									//line 65 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NVARCHAR:
								{
									//line 63 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += ( ( "NVARCHAR(" + this.Lenght ) + ") " );
									//line 63 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case NBIGTEXT:
								{
									//line 67 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "VARCHAR(MAX) ";
									//line 67 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BINARY:
								{
									//line 74 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "VARBINARY(MAX) ";
									//line 74 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case DATETIME:
								{
									//line 78 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "DATETIME ";
									//line 78 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case BOOLEAN:
								{
									//line 76 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "BIT ";
									//line 76 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
								case UUID:
								{
									//line 88 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									Part += "UNIQUEIDENTIFIER ";
									//line 88 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
									break;
								}
								
								
							}
							
							//line 93 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? (" NULL ") : (" NOT NULL ") );
							//line 98 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							if (( this.DefaultValue != null )) 
							{
								//line 99 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
								Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
							}
							
						}
						
					}
					
				}
				else
				{
					//line 104 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( ( " \"" + this.ColumnName ) + "\" " );
					//line 106 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					switch (this.DataType)
					{
						case SMALLINTEGER:
						{
							//line 108 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "smallint ";
							//line 108 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case INTEGER:
						{
							//line 133 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "INT ";
							//line 133 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGINTEGER:
						{
							//line 135 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "bigint ";
							//line 135 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case FLOAT:
						{
							//line 131 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "FLOAT ";
							//line 131 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case REAL:
						{
							//line 110 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "REAL ";
							//line 110 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DECIMAL:
						{
							//line 129 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( ( ( "DECIMAL (" + this.Lenght ) + "," ) + this.Scale ) + ") " );
							//line 129 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case CHAR:
						{
							//line 118 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "CHAR ";
							//line 118 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case VARCHAR:
						{
							//line 139 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "VARCHAR(" + this.Lenght ) + ") " );
							//line 139 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BIGTEXT:
						{
							//line 120 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "VARCHAR(MAX) ";
							//line 120 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NCHAR:
						{
							//line 114 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "NCHAR(" + this.Lenght ) + ") " );
							//line 114 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NVARCHAR:
						{
							//line 112 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += ( ( "NVARCHAR(" + this.Lenght ) + ") " );
							//line 112 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case NBIGTEXT:
						{
							//line 116 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "VARCHAR(MAX) ";
							//line 116 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BINARY:
						{
							//line 123 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "VARBINARY(MAX) ";
							//line 123 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case DATETIME:
						{
							//line 127 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "DATETIME ";
							//line 127 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case BOOLEAN:
						{
							//line 125 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "BIT ";
							//line 125 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
						case UUID:
						{
							//line 137 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							Part += "UNIQUEIDENTIFIER ";
							//line 137 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							break;
						}
						
						
					}
					
					//line 142 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					Part += ( (( this.Nullable == nMorph.framework.orm.common.enums.NullableEnum.NULL )) ? ("NULL ") : ("NOT NULL ") );
					//line 143 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (this.IsPrimaryKey) 
					{
						//line 144 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += "PRIMARY KEY ";
					}
					
					//line 147 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
					if (( this.DefaultValue != null )) 
					{
						//line 148 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						Part += ( ( " " + this.DefaultValue.SCRIPT_PART(null) ) + " " );
					}
					
				}
				
				//line 51 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				break;
			}
			
			
		}
		
		//line 562 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		return Part;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		{
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (( field != null )) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				switch (field.hashCode())
				{
					case 79698218:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Scale")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.Scale = ((int) (value) );
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -2022496866:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Lenght")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.Lenght = ((int) (value) );
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		{
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (( field != null )) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				switch (field.hashCode())
				{
					case 904464339:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("CurrentDDL")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.CurrentDDL = ((nMorph.framework.orm.lang.DDL) (value) );
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -112196831:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("ColumnName")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.ColumnName = haxe.lang.Runtime.toString(value);
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -494805040:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("DefaultValue")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.DefaultValue = ((nMorph.framework.orm.interfaces.IColumnDefinition) (value) );
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case 1853714980:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("DataType")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.DataType = ((nMorph.framework.orm.common.enums.DBTypeEnum) (value) );
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case 1060671975:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("IsPrimaryKey")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.IsPrimaryKey = haxe.lang.Runtime.toBool(((java.lang.Boolean) (value) ));
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -2022496866:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Lenght")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.Lenght = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -1841323135:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Nullable")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.Nullable = ((nMorph.framework.orm.common.enums.NullableEnum) (value) );
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case 79698218:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Scale")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.Scale = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return value;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		{
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (( field != null )) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				switch (field.hashCode())
				{
					case 1864996583:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("SCRIPT_PART")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "SCRIPT_PART")) );
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -112196831:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("ColumnName")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.ColumnName;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -603859003:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("RegisterQuery")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "RegisterQuery")) );
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case 1853714980:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("DataType")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.DataType;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case 904464339:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("CurrentDDL")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.CurrentDDL;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -2022496866:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Lenght")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.Lenght;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -494805040:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("DefaultValue")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.DefaultValue;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case 79698218:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Scale")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.Scale;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case 1060671975:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("IsPrimaryKey")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.IsPrimaryKey;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -1841323135:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Nullable")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.Nullable;
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		{
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (( field != null )) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				switch (field.hashCode())
				{
					case 79698218:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Scale")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return ((double) (this.Scale) );
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -2022496866:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("Lenght")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return ((double) (this.Lenght) );
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		{
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (( field != null )) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				switch (field.hashCode())
				{
					case 1864996583:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("SCRIPT_PART")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							return this.SCRIPT_PART(haxe.lang.Runtime.toString(( (( dynargs.length > 0 )) ? (dynargs[0]) : (null) )));
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
					case -603859003:
					{
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						if (field.equals("RegisterQuery")) 
						{
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							__temp_executeDef1 = false;
							//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
							this.RegisterQuery(((nMorph.framework.orm.interfaces.ILang) (dynargs[0]) ));
						}
						
						//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		baseArr.push("CurrentDDL");
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		baseArr.push("DefaultValue");
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		baseArr.push("IsPrimaryKey");
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		baseArr.push("Nullable");
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		baseArr.push("Scale");
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		baseArr.push("Lenght");
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		baseArr.push("DataType");
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		baseArr.push("ColumnName");
		//line 13 "C:\\TodoList\\nMorph\\5_framework\\orm\\src\\nMorph\\framework\\orm\\common\\ddl\\ColumnDefinition.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


