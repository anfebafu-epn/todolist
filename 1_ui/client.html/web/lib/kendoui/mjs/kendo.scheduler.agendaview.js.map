{"version":3,"file":"kendo.scheduler.agendaview.js","names":["__meta__","id","name","category","description","depends","hidden","$","kendo","window","ui","encode","htmlEncode","NS","ROLE","EVENT_WRAPPER_TEMPLATE","task","title","replace","attr","uid","resources","color","isException","icon","isRecurring","template","showDelete","messages","destroy","AgendaGroupedView","Class","extend","init","view","this","_view","_getColumns","groupHeaders","columns","concat","_getGroupsInDay","_getSumOfItemsForDate","_renderTaskGroupsCells","headerCells","groups","taskGroupIndex","taskIndex","length","_renderDateCell","tableRow","tasks","date","tasksGroups","isMobile","_isMobile","push","format","_dateTemplate","_renderDates","_getParents","parentGroups","splice","_getGroupsByDate","_renderTaskGroups","table","items","parents","append","AgendaGroupedByDateView","slice","columnsWithoutDate","_compareDateGroups","currentGroup","prevGroup","index","text","groupsInDay","tasksGroupIdx","itemsIdx","idx","lastItemValue","i","sumOfItemsForDate","groupsRowSpanIndex","_groupTemplate","value","className","sortedArray","_groupsByDate","sort","a","b","array","getTime","dateExists","rowSpan","result","resourceValue","resource","item","valuePrimitive","getter","dataValueField","flattenGroup","shift","apply","call","scheduler","AgendaView","SchedulerView","element","options","fn","_groupedView","_getGroupedView","editable","delete","create","update","_eventTemplate","eventDateTemplate","eventGroupTemplate","_timeTemplate","eventTimeTemplate","on","_renderLayout","refreshLayout","_aria","children","find","clearSelection","_isVirtualized","_isGroupedByDate","_mouseenter","e","currentTarget","addClass","_mouseleave","removeClass","_remove","preventDefault","trigger","closest","nextDate","nextDay","startDate","_startDate","endDate","_endDate","previousDate","previousDay","addDays","createLayout","_layout","_footer","time","event","groupedResources","_tasks","events","start","end","isAllDay","getDate","eventStartDate","offsetCompensation","getTimezoneOffset","eventDurationInDays","Math","ceil","MS_PER_DAY","clone","head","day","Date","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","tail","middle","data","Query","field","dir","groupBy","toArray","tableRows","today","isToday","join","eventResources","_startTime","endTime","eventTemplate","render","content","empty","_createGroupConfiguration","_renderGroups","_eventsList","flattenTaskGroups","_angularItems","angular","elements","map","dataItem","parent","configuration","dataSource","filter","itemParentValue","dataParentValueField","dataIndex","tmp","operator","groupEqFilter","indexOf","obj","dataTextField","span","_resourceBySlot","selectionByElement","cell","hasClass","is","select","selection","row","eq","current","move","key","handled","keys","UP","DOWN","moveToEvent","constrainSelection","isInRange","off","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","allDay","toString","MOBILE_EVENT_DATE_TEMPLATE","DESKTOP_EVENT_DATE_TEMPLATE","jQuery"],"sources":["kendo.scheduler.agendaview.js"],"mappings":"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","sourcesContent":["import './kendo.scheduler.view.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n        id: \"scheduler.agendaview\",\n        name: \"Scheduler Agenda View\",\n        category: \"web\",\n        description: \"The Scheduler Agenda View\",\n        depends: [\"scheduler.view\", \"icons\"],\n        hidden: true\n    };\n\n    (function($) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            NS = \".kendoAgendaView\",\n            ROLE = \"role\";\n\n        var EVENT_WRAPPER_TEMPLATE = (task) => `<div class=\"k-task\" title=\"${encode((task.title || \"\").replace(/\"/g,\"\\'\"))}\" ${kendo.attr('uid')}=\"${task.uid}\">` +\n            `${task.resources[0] ? `<span class=\"k-scheduler-mark\" style=\"background-color:${task.resources[0].color}\"></span>` : ''}` +\n            `${task.isException() ? kendo.ui.icon(\"arrows-no-repeat\") :\n                (task.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '')}` +\n            `<span class=\"k-scheduler-task-text\">${kendo.template(task.template)(task)}</span>` +\n            `${task.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${task.messages.destroy}\" aria-label=\"${task.messages.destroy}\">${kendo.ui.icon(\"x\")}</a>` : ''}` +\n            '</div>';\n\n        var DESKTOP_EVENT_DATE_TEMPLATE = ({ date }) => '<strong class=\"k-scheduler-agendaday\">' +\n                kendo.toString(date, \"dd\") +\n            '</strong>' +\n            '<em class=\"k-scheduler-agendaweek\">' +\n                kendo.toString(date,\"dddd\") +\n            '</em>' +\n            '<span class=\"k-scheduler-agendadate\">' +\n                kendo.toString(date, \"y\") +\n            '</span>';\n\n        var MOBILE_EVENT_DATE_TEMPLATE = ({ date }) => '<div class=\"k-scheduler-datecolumn-wrap\">' +\n                '<span class=\"k-mobile-scheduler-agendadate\">' +\n                    `<span class=\"k-mobile-scheduler-agendaday\">${kendo.toString(date, \"dd\")}</span>` +\n                    '&nbsp' +\n                    `<span class=\"k-mobile-scheduler-agendamonth\">${kendo.toString(date, \"MMMM\")}</span>` +\n                '</span>' +\n                '<span class=\"k-mobile-scheduler-agendaweekday\">' +\n                    kendo.toString(date, \"dddd\") +\n                '</span>' +\n            '</div>';\n\n        var EVENT_DATE_TEMPLATE = (data) => (data.isMobile ? MOBILE_EVENT_DATE_TEMPLATE(data) : DESKTOP_EVENT_DATE_TEMPLATE(data));\n\n        var EVENT_GROUP_TEMPLATE = ({ isMobile, value }) => (!isMobile ?\n                                        '<strong class=\"k-scheduler-adgendagroup\">' +\n                                            value +\n                                        '</strong>' :\n                                        '<span class=\"k-scheduler-group-text\">' +\n                                            value +\n                                        '</span>');\n\n        var AgendaGroupedView = kendo.Class.extend({\n            init: function(view) {\n                this._view = view;\n            },\n\n            _getColumns: function(groupHeaders, columns) {\n                return groupHeaders.concat(columns);\n            },\n            _getGroupsInDay: function() {\n                return [];\n            },\n\n            _getSumOfItemsForDate: function() {\n                return 0;\n            },\n\n            _renderTaskGroupsCells: function(headerCells, groups, taskGroupIndex, taskIndex) {\n                var view = this._view;\n\n                if (taskGroupIndex === 0 && taskIndex === 0 && groups.length) {\n                    view._renderTaskGroupsCells(headerCells, groups);\n                }\n            },\n\n            _renderDateCell: function(tableRow, groups, tasks, date, taskGroupIndex, tasksGroups) {\n                var view = this._view;\n                var isMobile = view._isMobile();\n\n                tableRow.push(kendo.format(\n                    '<td class=\"k-scheduler-datecolumn{3}{2}\" rowspan=\"{0}\">{1}</td>',\n                    tasks.length,\n                    view._dateTemplate({ date: date, isMobile: isMobile }),\n                    taskGroupIndex == tasksGroups.length - 1 && !groups.length ? \" k-last\" : \"\",\n                    !groups.length ? \" k-first\" : \"\"\n                ));\n            },\n\n            _renderDates: function() {\n                return undefined;\n            },\n\n            _getParents: function(parentGroups) {\n                return parentGroups.splice(0);\n            },\n\n            _getGroupsByDate: function() {\n                return undefined;\n            },\n\n            _renderTaskGroups: function(table, items, parents) {\n                var view = this._view;\n\n                table.append(view._renderTaskGroups(items, parents));\n            }\n\n        });\n\n        var AgendaGroupedByDateView = kendo.Class.extend({\n            init: function(view) {\n                this._view = view;\n            },\n\n            _getColumns: function(groupHeaders, columns) {\n                var view = this._view;\n\n                if (view._isMobile()) {\n                    return groupHeaders.concat(columns);\n                } else {\n                    var date = columns.slice(0, 1);\n                    var columnsWithoutDate = columns.slice(1);\n\n                    return date.concat(groupHeaders).concat(columnsWithoutDate);\n                }\n            },\n\n            _compareDateGroups: function(currentGroup, prevGroup, index) {\n                if (currentGroup[index].text == prevGroup[index].text) {\n                    if (index === 0) {\n                        return true;\n                    } else {\n                        return this._compareDateGroups(currentGroup, prevGroup, index - 1);\n                    }\n                }\n\n                return false;\n            },\n\n            _getGroupsInDay: function(tasksGroups, groups) {\n                var groupsInDay = [];\n                var prevGroup = null;\n\n                for (var tasksGroupIdx = 0; tasksGroupIdx < tasksGroups.length; tasksGroupIdx++) {\n                    for (var itemsIdx = 0; itemsIdx < tasksGroups[tasksGroupIdx].items.length; itemsIdx++) {\n                        var idx = 0;\n\n                        if (groupsInDay.length === 0) {\n                            for (idx; idx < groups[tasksGroupIdx].length; idx++) {\n                                groupsInDay.push([1]);\n                            }\n                        } else {\n                            for (idx; idx < groups[tasksGroupIdx].length; idx++) {\n\n                                if (this._compareDateGroups(groups[tasksGroupIdx], prevGroup, idx)) {\n                                    groupsInDay[idx][groupsInDay[idx].length - 1]++;\n                                } else {\n                                    var lastItemValue = groupsInDay[idx][groupsInDay[idx].length - 1] - 1;\n                                    for (var i = 0; i < lastItemValue; i++) {\n                                        groupsInDay[idx].push(0);\n                                    }\n                                    groupsInDay[idx].push(1);\n                                }\n                            }\n                        }\n                        prevGroup = groups[tasksGroupIdx];\n                    }\n                }\n\n                return groupsInDay;\n            },\n\n            _getSumOfItemsForDate: function(tasksGroups) {\n                var sumOfItemsForDate = 0;\n\n                for (var i = 0; i < tasksGroups.length; i++) {\n\n                    sumOfItemsForDate += tasksGroups[i].items.length;\n                }\n                return sumOfItemsForDate;\n            },\n\n            _renderTaskGroupsCells: function(headerCells, groups, taskGroupIndex, taskIndex, groupsInDay, sumOfItemsForDate, date, groupsRowSpanIndex) {\n                var view = this._view;\n                var isMobile = view._isMobile();\n\n                if (!isMobile) {\n                    if (taskGroupIndex === 0 && taskIndex === 0) {\n                        headerCells.push(kendo.format(\n                            '<td class=\"k-scheduler-datecolumn k-first\" rowspan=\"{0}\">{1}</td>',\n                            sumOfItemsForDate,\n                            view._dateTemplate({ date: date, isMobile: isMobile })\n                        ));\n                    }\n\n                    for (var idx = 0; idx < groups[taskGroupIndex].length; idx++) {\n                        if (groupsInDay[idx][groupsRowSpanIndex]) {\n                            headerCells.push(kendo.format(\n                                '<td class=\"k-scheduler-groupcolumn\" rowspan=\"{0}\">{1}</td>',\n                                groupsInDay[idx][groupsRowSpanIndex],\n                                view._groupTemplate({ value: groups[taskGroupIndex][idx].text, isMobile: isMobile }),\n                                groups[taskGroupIndex][idx].className\n                            ));\n                        }\n                    }\n                } else {\n                    if (taskGroupIndex === 0 && taskIndex === 0 && groups.length) {\n                        view._renderTaskGroupsCells(headerCells, groups);\n                    }\n                }\n            },\n\n            _renderDateCell: function() {\n                return undefined;\n            },\n\n            _renderDates: function(table) {\n                var view = this._view;\n                var sortedArray = view._groupsByDate.sort(function(a, b) {\n                    return a.array[0].value.getTime() - b.array[0].value.getTime();\n                });\n\n                for (var i = 0; i < sortedArray.length; i++) {\n                    table.append(view._renderTaskGroups(sortedArray[i].array, sortedArray[i].groups));\n                }\n            },\n\n            _getParents: function(parentGroups) {\n                return parentGroups.slice(0);\n            },\n\n            _getGroupsByDate: function(groups, idx, parents) {\n                var view = this._view;\n\n                if (groups[idx].items) {\n                    for (var taskGroupIndex = 0; taskGroupIndex < groups[idx].items.length; taskGroupIndex++) {\n                        var date = groups[idx].items[taskGroupIndex].value;\n                        var dateExists = false;\n\n                        for (var i = 0; i < view._groupsByDate.length; i++) {\n                            if (view._groupsByDate[i].array[0].value.getTime() === date.getTime()) {\n                                dateExists = true;\n                                view._groupsByDate[i].array.push(groups[idx].items[taskGroupIndex]);\n                                view._groupsByDate[i].groups.push(parents);\n                            }\n                        }\n\n                        if (!dateExists) {\n                            view._groupsByDate.push({\n                                array: [groups[idx].items[taskGroupIndex]],\n                                groups: [parents]\n                            });\n                        }\n                    }\n                }\n            },\n\n            _renderTaskGroups: function() {\n                return undefined;\n            }\n\n        });\n\n        kendo.ui.scheduler.AgendaGroupedView = AgendaGroupedView;\n        kendo.ui.scheduler.AgendaGroupedByDateView = AgendaGroupedByDateView;\n\n\n        ui.AgendaView = ui.SchedulerView.extend({\n            init: function(element, options) {\n                ui.SchedulerView.fn.init.call(this, element, options);\n\n                this._groupedView = this._getGroupedView();\n\n                options = this.options;\n\n                if (options.editable) {\n                    options.editable = $.extend(\n                        { \"delete\": true },\n                        options.editable,\n                        { create: false, update: false },\n                        { messages: options.messages }\n                    );\n                }\n\n                this.title = options.title;\n\n                this._eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n                this._dateTemplate = kendo.template(options.eventDateTemplate);\n                this._groupTemplate = kendo.template(options.eventGroupTemplate);\n                this._timeTemplate = kendo.template(options.eventTimeTemplate);\n\n                this.element.on(\"mouseenter\" + NS, \".k-scheduler-agenda .k-scheduler-content tr\", \"_mouseenter\")\n                    .on(\"mouseleave\" + NS, \".k-scheduler-agenda .k-scheduler-content tr\", \"_mouseleave\")\n                    .on(\"click\" + NS, \".k-scheduler-agenda .k-scheduler-content .k-link:has(.k-i-x),.k-scheduler-agenda .k-scheduler-content .k-link:has(.k-svg-i-x)\", \"_remove\");\n\n                this._renderLayout(options.date);\n                this.refreshLayout();\n            },\n\n            name: \"agenda\",\n\n            _aria: function() {\n                var table = this.table;\n\n                table.attr(ROLE, \"grid\");\n\n                table.children(\"tbody\").attr(ROLE, \"none\");\n\n                table.find(\"table\").attr(ROLE, \"none\");\n                table.find(\"table > tbody\").attr(ROLE, \"rowgroup\");\n                table.find(\"table tr\").attr(ROLE, \"row\");\n                table.find(\"table td\").attr(ROLE, \"gridcell\");\n\n                table.find(\".k-scheduler-header-wrap th\").attr(ROLE, \"columnheader\");\n                table.find(\".k-scheduler-content .k-scheduler-datecolumn, .k-scheduler-content .k-scheduler-groupcolumn\").attr(ROLE, \"rowheader\");\n            },\n\n            clearSelection: function() {\n                this.element.find(\".k-selected\").attr(\"aria-selected\", false);\n\n                kendo.ui.SchedulerView.fn.clearSelection.call(this);\n            },\n\n            _isVirtualized: function() {\n                return false;\n            },\n            _getGroupedView: function() {\n                if (this._isGroupedByDate()) {\n                    return new kendo.ui.scheduler.AgendaGroupedByDateView(this);\n                } else {\n                    return new kendo.ui.scheduler.AgendaGroupedView(this);\n                }\n            },\n\n            _mouseenter: function(e) {\n                $(e.currentTarget).addClass(\"k-hover\");\n            },\n\n            _mouseleave: function(e) {\n                $(e.currentTarget).removeClass(\"k-hover\");\n            },\n\n            _remove: function(e) {\n                e.preventDefault();\n\n                this.trigger(\"remove\", {\n                    uid: $(e.currentTarget).closest(\".k-task\").attr(kendo.attr(\"uid\"))\n                });\n            },\n\n            nextDate: function() {\n                return kendo.date.nextDay(this.startDate());\n            },\n\n            startDate: function() {\n                return this._startDate;\n            },\n\n            endDate: function() {\n                return this._endDate;\n            },\n\n            previousDate: function() {\n                return kendo.date.previousDay(this.startDate());\n            },\n\n            _renderLayout: function(date) {\n                this._startDate = date;\n                this._endDate = kendo.date.addDays(date, 7);\n                this.createLayout(this._layout());\n                this._footer();\n                this.table.addClass(\"k-scheduler-agenda\");\n            },\n\n            _layout: function() {\n                var columns = [\n                    { text: this.options.messages.time, className: \"k-scheduler-timecolumn\" },\n                    { text: this.options.messages.event }\n                ];\n\n                if (!this._isMobile()) {\n                    columns.splice(0, 0, { text: this.options.messages.date, className: \"k-scheduler-datecolumn\" });\n                }\n\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    var groupHeaders = [];\n                    for (var idx = 0; idx < resources.length; idx++) {\n                        groupHeaders.push({ text: \"\", className: \"k-scheduler-groupcolumn\" });\n                    }\n\n                    columns = this._groupedView._getColumns(groupHeaders, columns);\n                }\n\n                return {\n                    columns: columns\n                };\n            },\n\n            _tasks: function(events) {\n                var tasks = [];\n\n                for (var idx = 0; idx < events.length; idx++) {\n                    var event = events[idx];\n                    var start = event.start;\n                    var end = event.isAllDay ? kendo.date.getDate(event.end) : event.end;\n                    var eventStartDate = kendo.date.getDate(start);\n                    var offsetCompensation = (eventStartDate.getTimezoneOffset() - end.getTimezoneOffset()) * 60000;\n\n                    var eventDurationInDays = Math.ceil((end - eventStartDate + offsetCompensation) / kendo.date.MS_PER_DAY);\n\n                    if (event.isAllDay) {\n                        eventDurationInDays += 1;\n                    }\n\n                    var task = event.clone();\n                    task.startDate = kendo.date.getDate(start);\n\n                    if (task.startDate >= this.startDate()) {\n                        tasks.push(task);\n                    }\n\n                    if (eventDurationInDays > 1) {\n                        task.end = kendo.date.nextDay(start);\n                        task.head = true;\n                        for (var day = 1; day < eventDurationInDays; day++) {\n                            start = task.end;\n                            task = event.clone();\n                            task.start = task.startDate = kendo.date.getDate(start);\n                            task.end = kendo.date.nextDay(start);\n                            if (day == eventDurationInDays - 1) {\n                                task.end = new Date(task.start.getFullYear(), task.start.getMonth(), task.start.getDate(), end.getHours(), end.getMinutes(), end.getSeconds(), end.getMilliseconds());\n                                task.tail = true;\n                            } else {\n                                task.isAllDay = true;\n                                task.middle = true;\n                            }\n\n                            if ((kendo.date.getDate(task.end) <= this.endDate() && task.start >= this.startDate()) || kendo.date.getDate(task.start).getTime() == this.endDate().getTime()) {\n                                tasks.push(task);\n                            }\n                        }\n                    }\n                }\n\n                return new kendo.data.Query(tasks).sort([{ field: \"start\", dir: \"asc\" }, { field: \"end\", dir: \"asc\" }]).groupBy({ field: \"startDate\" }).toArray();\n            },\n\n            _renderTaskGroups: function(tasksGroups, groups) {\n                var tableRows = [];\n                var editable = this.options.editable;\n                var showDelete = editable && editable.destroy !== false && !this._isMobile();\n                var isMobile = this._isMobile();\n                var sumOfItemsForDate = this._groupedView._getSumOfItemsForDate(tasksGroups);\n                var groupsInDay = this._groupedView._getGroupsInDay(tasksGroups, groups);\n                var groupsRowSpanIndex = 0;\n\n                for (var taskGroupIndex = 0; taskGroupIndex < tasksGroups.length; taskGroupIndex++) {\n                    var date = tasksGroups[taskGroupIndex].value;\n\n                    var tasks = tasksGroups[taskGroupIndex].items;\n\n                    var today = kendo.date.isToday(date);\n\n                    for (var taskIndex = 0; taskIndex < tasks.length; taskIndex++) {\n                        var task = tasks[taskIndex];\n\n                        var tableRow = [];\n\n                        var headerCells = !isMobile ? tableRow : [];\n\n                        this._groupedView._renderTaskGroupsCells(headerCells, groups, taskGroupIndex, taskIndex, groupsInDay, sumOfItemsForDate, date, groupsRowSpanIndex);\n\n                        groupsRowSpanIndex++;\n                        if (taskIndex === 0) {\n                            if (isMobile) {\n                                headerCells.push(kendo.format(\n                                    '<td class=\"k-scheduler-datecolumn {1}\" colspan=\"2\">{0}</td>',\n                                    this._dateTemplate({ date: date, isMobile: isMobile }),\n                                    !this.groupedResources.length ? \"k-first\" : \"\"\n                                ));\n\n                                tableRows.push('<tr role=\"row\" aria-selected=\"false\"' + (today ? ' class=\"k-today\">' : \">\") + headerCells.join(\"\") + \"</tr>\");\n                            } else {\n                                this._groupedView._renderDateCell(tableRow, groups, tasks, date, taskGroupIndex, tasksGroups);\n                            }\n                        }\n\n                        if (task.head) {\n                            task.format = \"{0:t}\";\n                        } else if (task.tail) {\n                            task.format = \"{1:t}\";\n                        } else {\n                            task.format = \"{0:t}-{1:t}\";\n                        }\n\n                        task.resources = this.eventResources(task);\n\n                        tableRow.push(kendo.format(\n                            '<td class=\"k-scheduler-timecolumn {4}\"><div>{0}{1}{2}</div></td><td>{3}</td>',\n                            task.tail || task.middle ? kendo.ui.icon(\"caret-alt-left\") : \"\",\n                            this._timeTemplate(task.clone({ start: task._startTime || task.start, end: task.endTime || task.end, messages: this.options.messages })),\n                            task.head || task.middle ? kendo.ui.icon(\"caret-alt-right\") : \"\",\n                            this._eventTemplate(task.clone({ showDelete: showDelete, messages: this.options.messages, template: this.options.eventTemplate })),\n                            !this.groupedResources.length && isMobile ? \"k-first\" : \"\"\n                        ));\n\n                        tableRows.push('<tr role=\"row\" aria-selected=\"false\"' + (today ? ' class=\"k-today\">' : \">\") + tableRow.join(\"\") + \"</tr>\");\n                    }\n                }\n\n                return tableRows.join(\"\");\n            },\n\n            _renderTaskGroupsCells: function(headerCells, groups) {\n                var isMobile = this._isMobile();\n\n                for (var idx = 0; idx < groups.length; idx++) {\n                    headerCells.push(kendo.format(\n                        '<td class=\"k-scheduler-groupcolumn{2}\" rowspan=\"{0}\">{1}</td>',\n                        groups[idx].rowSpan,\n                        this._groupTemplate({ value: groups[idx].text, isMobile: isMobile }),\n                        groups[idx].className\n                    ));\n                }\n            },\n\n            render: function(events) {\n                var table = this.content.find(\"table\").empty();\n                var groups = [];\n\n                if (events.length > 0) {\n                    var resources = this.groupedResources;\n\n                    table.append($(\"<tbody>\"));\n\n                    if (resources.length) {\n                        groups = this._createGroupConfiguration(events, resources, null);\n                        this._groupsByDate = [];\n                        this._renderGroups(groups, table.find(\"tbody\"), []);\n                        this._groupedView._renderDates(table.find(\"tbody\"));\n                    } else {\n                        groups = this._tasks(events);\n                        table.find(\"tbody\").append(this._renderTaskGroups(groups, []));\n                    }\n                }\n\n                var items = this._eventsList = flattenTaskGroups(groups);\n                this._angularItems(table, items);\n\n                this._aria();\n                this.refreshLayout();\n                this.trigger(\"activate\");\n            },\n\n            _angularItems: function(table, items) {\n                this.angular(\"compile\", function() {\n                    var data = [], elements = items.map(function(item) {\n                        data.push({ dataItem: item });\n                        return table.find(\".k-task[\" + kendo.attr(\"uid\") + \"=\" + item.uid + \"]\");\n                    });\n                    return { elements: elements, data: data };\n                });\n            },\n\n            _renderGroups: function(groups, table, parentGroups) {\n                for (var idx = 0, length = groups.length; idx < length; idx++) {\n                    var parents = this._groupedView._getParents(parentGroups);\n\n                    parents.push(groups[idx]);\n                    this._groupedView._getGroupsByDate(groups, idx, parents);\n\n                    if (groups[idx].groups) {\n                        this._renderGroups(groups[idx].groups, table, parents);\n                    } else {\n                        this._groupedView._renderTaskGroups(table, groups[idx].items, parents);\n                    }\n                }\n            },\n\n            _createGroupConfiguration: function(events, resources, parent) {\n                var resource = resources[0];\n                var configuration = [];\n                var data = resource.dataSource.view();\n                var isMobile = this._isMobile();\n\n                data = data.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined || (parent && itemParentValue === parent.value);\n                });\n\n                for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                    var value = resourceValue(resource, data[dataIndex]);\n\n                    var tmp = new kendo.data.Query(events).filter({ field: resource.field, operator: ui.SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (tmp.length) {\n                        var tasks = this._tasks(tmp);\n                        var className = parent ? \"\" : \" k-first\";\n\n                        if (dataIndex === data.length - 1 && (!parent || parent.className.indexOf(\"k-last\") > -1)) {\n                            className += \" k-last\";\n                        }\n\n                        var obj = {\n                            text: kendo.getter(resource.dataTextField)(data[dataIndex]),\n                            value: value,\n                            rowSpan: 0,\n                            className: className\n                        };\n\n                        if (resources.length > 1) {\n                            obj.groups = this._createGroupConfiguration(tmp, resources.slice(1), obj);\n                            if (parent) {\n                                parent.rowSpan += obj.rowSpan;\n                            }\n                        } else {\n                            obj.items = tasks;\n                            var span = rowSpan(obj.items);\n\n                            if (isMobile) {\n                                span += obj.items.length;\n                            }\n\n                            obj.rowSpan = span;\n                            if (parent) {\n                                parent.rowSpan += span;\n                            }\n                        }\n                        configuration.push(obj);\n                    }\n                }\n\n                return configuration;\n            },\n\n            // TODO: this method for Agenda view has never worked properly\n            // it used to return wrong resources\n            // to be clearer the deficit, it now does not return any resources\n            _resourceBySlot: function() {\n                return {};\n            },\n\n            selectionByElement: function(cell) {\n                var index, event;\n                cell = $(cell);\n                if (cell.hasClass(\"k-scheduler-datecolumn\") || !this._eventsList.length) {\n                    return;\n                }\n\n                if (cell.is(\".k-task\")) {\n                    cell = cell.closest(\"td\");\n                }\n\n                if (this._isMobile()) {\n                    var parent = cell.parent();\n                    index = parent.parent().children()\n                        .filter(function() {\n                            return $(this).children(\":not(.k-scheduler-datecolumn, .k-scheduler-groupcolumn)\").length;\n                        })\n                        .index(parent);\n                } else {\n                    index = cell.parent().index();\n                }\n\n                event = this._eventsList[index];\n\n                return {\n                    index: index,\n                    start: event.start,\n                    end: event.end,\n                    isAllDay: event.isAllDay,\n                    uid: event.uid\n                };\n            },\n\n            select: function(selection) {\n                this.clearSelection();\n\n                var row = this.table\n                    .find(\".k-task\")\n                    .eq(selection.index)\n                    .closest(\"tr\")\n                    .addClass(\"k-selected\")\n                    .attr(\"aria-selected\", true)[0];\n\n                this.current(row);\n            },\n\n            move: function(selection, key) {\n                var handled = false;\n                var index = selection.index;\n\n                if (key == kendo.keys.UP) {\n                    index--;\n                    handled = true;\n                } else if (key == kendo.keys.DOWN) {\n                    index++;\n                    handled = true;\n                }\n\n                if (handled) {\n                    var event = this._eventsList[index];\n                    if (event) {\n                        selection.start = event.start;\n                        selection.end = event.end;\n                        selection.isAllDay = event.isAllDay;\n                        selection.events = [event.uid];\n                        selection.index = index;\n                    }\n                }\n\n                return handled;\n            },\n\n            moveToEvent: function() {\n                return false;\n            },\n\n            constrainSelection: function(selection) {\n                var event = this._eventsList[0];\n                if (event) {\n                    selection.start = event.start;\n                    selection.end = event.end;\n                    selection.isAllDay = event.isAllDay;\n                    selection.events = [event.uid];\n                    selection.index = 0;\n                }\n            },\n\n            isInRange: function() {\n                return true;\n            },\n\n            destroy: function() {\n                if (this.element) {\n                    this.element.off(NS);\n                }\n\n                ui.SchedulerView.fn.destroy.call(this);\n            },\n\n            options: {\n                title: \"Agenda\",\n                name: \"agenda\",\n                editable: true,\n                selectedDateFormat: \"{0:D}-{1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0: MMM} {0:dd} - {1:dd}\",\n                eventTemplate: ({ title }) => encode(title),\n                eventTimeTemplate: ({ isAllDay, messages, format, start, end }) => (isAllDay ? messages.allDay : kendo.format(format, start, end)),\n                eventDateTemplate: EVENT_DATE_TEMPLATE,\n                eventGroupTemplate: EVENT_GROUP_TEMPLATE,\n                messages: {\n                    event: \"Event\",\n                    date: \"Date\",\n                    time: \"Time\",\n                    allDay: \"all day\"\n                }\n            }\n        });\n\n        function rowSpan(tasks) {\n            var result = 0;\n\n            for (var idx = 0, length = tasks.length; idx < length; idx++) {\n                result += tasks[idx].items.length;\n            }\n\n            return result;\n        }\n\n        function resourceValue(resource, item) {\n            if (resource.valuePrimitive) {\n                item = kendo.getter(resource.dataValueField)(item);\n            }\n            return item;\n        }\n\n        function flattenTaskGroups(groups) {\n            var idx = 0,\n                length = groups.length,\n                item,\n                result = [];\n\n            for (; idx < length; idx++) {\n                item = groups[idx];\n                if (item.groups) {\n                    item = flattenGroup(item.groups);\n                    result = result.concat(item);\n                } else {\n                    result = result.concat(flattenGroup(item.items));\n                }\n            }\n\n            return result;\n        }\n\n        function flattenGroup(groups) {\n            var items = [].concat(groups),\n                item = items.shift(),\n                result = [],\n                push = [].push;\n            while (item) {\n                if (item.groups) {\n                    push.apply(items, item.groups);\n                } else if (item.items) {\n                    push.apply(items, item.items);\n                } else {\n                    push.call(result, item);\n                }\n\n                item = items.shift();\n            }\n\n            return result;\n        }\n\n    })(window.kendo.jQuery);\n"]}