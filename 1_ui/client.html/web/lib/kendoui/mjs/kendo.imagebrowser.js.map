{"version":3,"file":"kendo.imagebrowser.js","names":["__meta__","id","name","category","description","hidden","depends","$","undefined$1","kendo","window","FileBrowser","ui","isPlainObject","extend","isFunction","trimSlashesRegExp","ERROR","NS","NAMEFIELD","SIZEFIELD","TYPEFIELD","DEFAULTSORTORDER","field","dir","EMPTYTILE","template","text","icon","iconClass","data","schemas","imagebrowser","items","model","fields","size","type","transports","RemoteTransport","init","options","fn","call","this","_call","path","read","create","destroy","update","ImageBrowser","element","addClass","fileTypes","value","that","selected","_selectedItem","imageUrl","transport","get","match","concatPaths","replace","format","encodeURIComponent","_fileUpload","e","file","filterRegExp","RegExp","split","join","fileName","files","fileSize","fileNameField","sizeField","test","_createFile","_uploading","upload","one","_insertFileToList","set","response","_getFieldName","_tiles","listView","filter","attr","_scroll","preventDefault","_showMessage","messages","invalidFileType","_content","list","appendTo","on","_dblClick","bind","ListView","layout","flex","direction","wrap","dataSource","_itemTmpl","editTemplate","_editTmpl","selectable","autoBind","dataBinding","toolbar","find","parent","action","progress","content","dataBound","view","length","append","emptyFolder","change","_listViewChange","_dataSource","typeSortOrder","nameSortOrder","sort","schema","_errorHandler","unbind","_error","DataSource","_loadImage","li","dataItem","getByUid","thumbnailUrl","img","alt","urlJoin","hide","prev","remove","end","fadeIn","after","indexOf","_override","Date","getTime","loaded","clearTimeout","_timeout","setTimeout","height","_outerHeight","viewTop","scrollTop","viewBottom","each","top","offsetTop","bottom","offsetHeight","showLoading","uid","suffix","Math","round","sizeFormatter","plugin","jQuery"],"sources":["kendo.imagebrowser.js"],"mappings":"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","sourcesContent":["import './kendo.filebrowser.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"imagebrowser\",\n    name: \"ImageBrowser\",\n    category: \"web\",\n    description: \"\",\n    hidden: true,\n    depends: [ \"filebrowser\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        FileBrowser = kendo.ui.FileBrowser,\n        isPlainObject = $.isPlainObject,\n        extend = $.extend,\n        isFunction = kendo.isFunction,\n        trimSlashesRegExp = /(^\\/|\\/$)/g,\n        ERROR = \"error\",\n        NS = \".kendoImageBrowser\",\n        NAMEFIELD = \"name\",\n        SIZEFIELD = \"size\",\n        TYPEFIELD = \"type\",\n        DEFAULTSORTORDER = { field: TYPEFIELD, dir: \"asc\" },\n        EMPTYTILE = kendo.template(({ text }) => `<div class=\"k-listview-item k-listview-item-empty\"><span class=\"k-file-preview\">${kendo.ui.icon({ icon: \"none\", iconClass: \"k-file-icon\" })}</span><span class=\"k-file-name\">${text}</span></div>`);\n\n    extend(true, kendo.data, {\n        schemas: {\n            \"imagebrowser\": {\n                data: function(data) {\n                    return data.items || data || [];\n                },\n                model: {\n                    id: \"name\",\n                    fields: {\n                        name: \"name\",\n                        size: \"size\",\n                        type: \"type\"\n                    }\n                }\n            }\n        }\n    });\n\n    extend(true, kendo.data, {\n        transports: {\n            \"imagebrowser\": kendo.data.RemoteTransport.extend({\n                init: function(options) {\n                    kendo.data.RemoteTransport.fn.init.call(this, $.extend(true, {}, this.options, options));\n                },\n                _call: function(type, options) {\n                    options.data = $.extend({}, options.data, { path: this.options.path() });\n\n                    if (isFunction(this.options[type])) {\n                        this.options[type].call(this, options);\n                    } else {\n                        kendo.data.RemoteTransport.fn[type].call(this, options);\n                    }\n                },\n                read: function(options) {\n                    this._call(\"read\", options);\n                },\n                create: function(options) {\n                    this._call(\"create\", options);\n                },\n                destroy: function(options) {\n                    this._call(\"destroy\", options);\n                },\n                update: function() {\n                    //updates are handled by the upload\n                },\n                options: {\n                    read: {\n                        type: \"POST\"\n                    },\n                    update: {\n                        type: \"POST\"\n                    },\n                    create: {\n                        type: \"POST\"\n                    },\n                    destroy: {\n                        type: \"POST\"\n                    }\n                }\n            })\n        }\n    });\n\n    function offsetTop(element) {\n        return element.offsetTop - $(element).height();\n    }\n\n    function concatPaths(path, name) {\n        if (path === undefined$1 || !path.match(/\\/$/)) {\n            path = (path || \"\") + \"/\";\n        }\n        return path + name;\n    }\n\n    function sizeFormatter(value) {\n        if (!value) {\n            return \"\";\n        }\n\n        var suffix = \" bytes\";\n\n        if (value >= 1073741824) {\n            suffix = \" GB\";\n            value /= 1073741824;\n        } else if (value >= 1048576) {\n            suffix = \" MB\";\n            value /= 1048576;\n        } else if (value >= 1024) {\n            suffix = \" KB\";\n            value /= 1024;\n        }\n\n        return Math.round(value * 100) / 100 + suffix;\n    }\n\n    var ImageBrowser = FileBrowser.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            FileBrowser.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-imagebrowser\");\n        },\n\n        options: {\n            name: \"ImageBrowser\",\n            fileTypes: \"*.png,*.gif,*.jpg,*.jpeg\"\n        },\n\n        value: function() {\n            var that = this,\n                selected = that._selectedItem(),\n                path,\n                imageUrl = that.options.transport.imageUrl;\n\n            if (selected && selected.get(TYPEFIELD) === \"f\") {\n                path = concatPaths(that.path(), selected.get(NAMEFIELD)).replace(trimSlashesRegExp, \"\");\n                if (imageUrl) {\n                    path = isFunction(imageUrl) ? imageUrl(path) : kendo.format(imageUrl, encodeURIComponent(path));\n                }\n                return path;\n            }\n        },\n\n        _fileUpload: function(e) {\n            var that = this,\n                options = that.options,\n                fileTypes = options.fileTypes,\n                filterRegExp = new RegExp((\"(\" + fileTypes.split(\",\").join(\")|(\") + \")\").replace(/\\*\\./g , \".*.\"), \"i\"),\n                fileName = e.files[0].name,\n                fileSize = e.files[0].size,\n                fileNameField = NAMEFIELD,\n                sizeField = SIZEFIELD,\n                file;\n\n            if (filterRegExp.test(fileName)) {\n                e.data = { path: that.path() };\n\n                file = that._createFile(fileName, fileSize);\n\n                if (!file) {\n                    e.preventDefault();\n                } else {\n                    file._uploading = true;\n\n                    that.upload.one(\"error\", function() {\n                        file = undefined$1;\n                    });\n\n                    that.upload.one(\"success\", function(e) {\n                        if (file) {\n                            delete file._uploading;\n\n                            var model = that._insertFileToList(file);\n\n                            model.set(fileNameField, e.response[that._getFieldName(fileNameField)]);\n                            model.set(sizeField, e.response[that._getFieldName(sizeField)]);\n\n                            that._tiles = that.listView.items().filter(\"[\" + kendo.attr(\"type\") + \"=f]\");\n                            that._scroll();\n                        }\n                    });\n                }\n            } else {\n                e.preventDefault();\n                that._showMessage(kendo.format(options.messages.invalidFileType, fileName, fileTypes));\n            }\n        },\n\n        _content: function() {\n            var that = this;\n\n            that.list = $('<div class=\"k-filemanager-listview\" />')\n                .appendTo(that.element)\n                .on(\"dblclick\" + NS, \".k-listview-item\", that._dblClick.bind(that));\n\n            that.listView = new kendo.ui.ListView(that.list, {\n                layout: \"flex\",\n                flex: {\n                    direction: \"row\",\n                    wrap: \"wrap\"\n                },\n                dataSource: that.dataSource,\n                template: that._itemTmpl(),\n                editTemplate: that._editTmpl(),\n                selectable: true,\n                autoBind: false,\n                dataBinding: function(e) {\n\n                    that.toolbar.find(\".k-i-x,.k-svg-i-x\").parent().addClass(\"k-disabled\");\n\n                    if (e.action === \"remove\" || e.action === \"sync\") {\n                        e.preventDefault();\n                        kendo.ui.progress(that.listView.content, false);\n                    }\n                },\n                dataBound: function() {\n                    if (that.dataSource.view().length) {\n                        that._tiles = this.items().filter(\"[\" + kendo.attr(\"type\") + \"=f]\");\n                        that._scroll();\n                    } else {\n                        this.content.append(EMPTYTILE({ text: that.options.messages.emptyFolder }));\n                    }\n                },\n                change: that._listViewChange.bind(that)\n            });\n\n            that.listView.content.on(\"scroll\" + NS, that._scroll.bind(that));\n        },\n\n        _dataSource: function() {\n            var that = this,\n                options = that.options,\n                transport = options.transport,\n                typeSortOrder = extend({}, DEFAULTSORTORDER),\n                nameSortOrder = { field: NAMEFIELD, dir: \"asc\" },\n                schema,\n                dataSource = {\n                    type: transport.type || \"imagebrowser\",\n                    sort: [typeSortOrder, nameSortOrder]\n                };\n\n            if (isPlainObject(transport)) {\n                transport.path = that.path.bind(that);\n                dataSource.transport = transport;\n            }\n\n            if (isPlainObject(options.schema)) {\n                dataSource.schema = options.schema;\n            } else if (transport.type && isPlainObject(kendo.data.schemas[transport.type])) {\n                schema = kendo.data.schemas[transport.type];\n            }\n\n            if (that.dataSource && that._errorHandler) {\n                that.dataSource.unbind(ERROR, that._errorHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.DataSource.create(dataSource)\n                .bind(ERROR, that._errorHandler);\n        },\n\n        _loadImage: function(li) {\n            var that = this,\n                element = $(li),\n                dataItem = that.dataSource.getByUid(element.attr(kendo.attr(\"uid\"))),\n                name = dataItem.get(NAMEFIELD),\n                thumbnailUrl = that.options.transport.thumbnailUrl,\n                img = $(\"<img />\", { alt: name }),\n                urlJoin = \"?\";\n\n            if (dataItem._uploading) {\n                return;\n            }\n\n            img.hide()\n               .on(\"load\" + NS, function() {\n                   $(this).prev().remove().end().addClass(\"k-image k-file-image\").fadeIn();\n               });\n\n            element.find(\".k-i-loading\").after(img);\n\n            if (isFunction(thumbnailUrl)) {\n                thumbnailUrl = thumbnailUrl(that.path(), encodeURIComponent(name));\n            } else {\n                if (thumbnailUrl.indexOf(\"?\") >= 0) {\n                    urlJoin = \"&\";\n                }\n\n                thumbnailUrl = thumbnailUrl + urlJoin + \"path=\" + encodeURIComponent(that.path() + name);\n                if (dataItem._override) {\n                    thumbnailUrl += \"&_=\" + new Date().getTime();\n                    delete dataItem._override;\n                }\n            }\n\n            // IE8 will trigger the load event immediately when the src is assigned\n            // if the image is loaded from the cache\n            img.attr(\"src\", thumbnailUrl);\n\n            li.loaded = true;\n        },\n\n        _scroll: function() {\n            var that = this;\n            if (that.options.transport && that.options.transport.thumbnailUrl) {\n                clearTimeout(that._timeout);\n\n                that._timeout = setTimeout(function() {\n\n                    var height = kendo._outerHeight(that.listView.content),\n                        viewTop = that.listView.content.scrollTop(),\n                        viewBottom = viewTop + height;\n\n                    that._tiles.each(function() {\n                        var top = offsetTop(this),\n                            bottom = top + this.offsetHeight;\n\n                        if ((top >= viewTop && top < viewBottom) || (bottom >= viewTop && bottom < viewBottom)) {\n                            that._loadImage(this);\n                        }\n\n                        if (top > viewBottom) {\n                            return false;\n                        }\n                    });\n\n                    that._tiles = that._tiles.filter(function() {\n                        return !this.loaded;\n                    });\n\n                }, 250);\n            }\n        },\n\n        _itemTmpl: function() {\n            var that = this;\n\n            const result = (data) => {\n                const showLoading = that.options.transport && that.options.transport.thumbnailUrl;\n\n                return `<div class=\"k-listview-item\" ${kendo.attr(\"uid\")}=\"${data.uid}\" ${kendo.attr(\"type\")}=\"${data[TYPEFIELD]}\">` +\n                    `${data[TYPEFIELD] === 'd' ?\n                        `<div class=\"k-file-preview\">${kendo.ui.icon({ icon: \"folder\", iconClass: \"k-file-icon\" })}</div>` :\n                        `<div class=\"k-file-preview\">${showLoading ? '<span class=\"k-file-icon k-icon k-i-loading\"></span>' : kendo.ui.icon({ icon: \"file\", iconClass: \"k-file-icon\" }) }</div>`}` +\n                    `<span class=\"k-file-name\">${data[NAMEFIELD]}</span>` +\n                    `${data[TYPEFIELD] === 'f' ? `<span class=\"k-file-size\">${sizeFormatter(data[SIZEFIELD])}</span>` : '' }` +\n                `</div>`;\n            };\n\n            return kendo.template(result);\n        }\n    });\n\n    kendo.ui.plugin(ImageBrowser);\n})(window.kendo.jQuery);\n"]}