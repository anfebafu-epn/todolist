{"version":3,"file":"kendo.gantt.list.js","names":["__meta__","id","name","category","description","depends","hidden","$","extend","map","isFunction","kendo","ui","TreeList","outerHeight","_outerHeight","activeElement","_activeElement","keys","mobileOS","support","DATATYPE","attr","BINDING","FORMAT","STRING","NS","defaultDateFormat","getCulture","calendar","patterns","d","titleFromField","title","start","end","percentComplete","parentId","orderId","listStyles","gridHeader","gridContentWrap","editCell","iconCollapse","iconExpand","GanttList","init","element","options","this","columns","length","push","fn","call","_unbindDataSource","_setWidth","autoBind","sortable","selectable","navigatable","editable","move","mode","resizable","renderAllRows","destroy","closeCell","isCancel","tr","model","that","cell","editor","_isIncellEditable","dataItem","_cancelEditor","removeClass","parent","editRow","lockedContent","_relatedRow","_render","trigger","item","data","ns","_adjustRowHeight","css","insertAfter","nodeData","referenceNode","taskInfo","task","updateInfo","insertBefore","_adjustHeight","height","contentWrap","find","header","scrollbar","_isHeightSet","_hasLockedColumns","table","offsetWidth","clientWidth","row1","row2","offsetHeight1","offsetHeight","offsetHeight2","style","el","initialHeight","newHeight","_attachCellEditingEventHandlers","update","_startEditHandler","e","td","currentTarget","column","_columnFromElement","_editCell","_modelFromElement","content","on","_focusInEditableHandler","bind","_focusoutCellHandler","_keydownHandler","_keyupHandler","touch","kendoTouch","filter","touchstart","_mouseDownHandler","doubletap","event","target","classList","contains","_openEditorHandler","_blurActiveElement","nodeName","toLowerCase","_closeCellTimeouted","closest","_columns","_hasExpandable","forEach","expandable","_eachColumn","_columnEditor","field","required","_extractFormat","format","container","validation","fields","dateCompare","message","hide","appendTo","prependTo","kendoDateTimePicker","idx","children","index","resourcesField","isSortable","hasNestedColumns","indexOf","template","value","get","formatedValue","i","join","editedCell","modelCopy","dataSource","_createNewModel","toJSON","_restorePageSizeAfterAddChild","_edit","editedColumn","editedColumnIndex","add","lockedTable","first","_createIncellEditor","change","values","preventDefault","_current","clearTimeout","_closeCellTimeout","setTimeout","keyCode","ENTER","ESC","row","getByUid","hasClass","isLockedCell","multiple","has","tbody","is","_renderTree","taskTree","addClass","rowHeight","_rowHeight","tasks","append","remove","_setData","listWidth","plugin","window","jQuery"],"sources":["kendo.gantt.list.js"],"mappings":"MAAO,4BACA,kCAEP,IAAIA,SAAW,CACXC,GAAI,aACJC,KAAM,aACNC,SAAU,MACVC,YAAa,iBACbC,QAAS,CAAE,WAAY,wBACvBC,QAAQ,IAGZ,SAAUC,GACN,IAAIC,EAASD,EAAEC,OACXC,EAAMF,EAAEE,IACRC,EAAaC,MAAMD,WAEnBE,EAAKD,MAAMC,GACXC,EAAWD,EAAGC,SACdC,EAAcH,MAAMI,aACpBC,EAAgBL,MAAMM,eACtBC,EAAOP,MAAMO,KACbC,EAAWR,MAAMS,QAAQD,SAEzBE,EAAWV,MAAMW,KAAK,QACtBC,EAAUZ,MAAMW,KAAK,QACrBE,EAASb,MAAMW,KAAK,UAEpBG,EAAS,SACTC,EAAK,kBAcLC,EAAoB,MAAQhB,MAAMiB,aAAaC,SAASC,SAASC,EAAI,IAErEC,EAAiB,CACbC,MAAS,QACTC,MAAS,aACTC,IAAO,WACPC,gBAAmB,SACnBC,SAAY,iBACZpC,GAAM,KACNqC,QAAW,YAWfC,EAAa,CACTC,WAAY,gBACZC,gBAAiB,iBACjBC,SAAU,cACVC,aAAc,iBACdC,WAAY,mBAGhBC,EAAYjC,EAAGiC,UAAYhC,EAASL,OAAO,CAC3CsC,KAAM,SAASC,EAASC,GACgB,IAAhCC,KAAKD,QAAQE,QAAQC,QACrBF,KAAKD,QAAQE,QAAQE,KAAK,SAG9BvC,EAASwC,GAAGP,KAAKQ,KAAKL,KAAMF,EAASC,GAErCC,KAAKM,oBACLN,KAAKO,WACT,EAEAR,QAAS,CACL9C,KAAM,YACNuD,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,SAAU,CACNC,MAAM,EACNC,KAAM,UAEVC,WAAW,EACXC,eAAe,GAGnBC,QAAS,WACLrD,EAASwC,GAAGa,QAAQZ,KAAKL,MACzBtC,MAAMuD,QAAQjB,KAAKF,QACvB,EAEAoB,UAAW,SAASC,GAChB,IAEIC,EACAC,EAHAC,EAAOtB,KACPuB,GAAQD,EAAKE,QAAU,CAAC,GAAG1B,QAI1ByB,GAASA,EAAK,IAAOD,EAAKG,sBAI/BJ,EAAQC,EAAKI,SAASH,GACtBD,EAAKK,gBACLJ,EAAKK,YAAYtC,EAAWG,UAC5B2B,EAAKG,EAAKM,SAASD,YAAYtC,EAAWwC,SAEtCR,EAAKS,eACLT,EAAKU,YAAYZ,GAAIQ,YAAYtC,EAAWwC,SAG5CX,GACAG,EAAKW,UAGTX,EAAKY,QAAQ,aAAc,CAAEC,KAAMf,EAAIgB,KAAMf,EAAOgB,GAAI1E,IAEpD2D,EAAKS,eACLT,EAAKgB,iBAAiBlB,EAAGmB,IAAI,SAAU,IAAI,GAAIjB,EAAKU,YAAYZ,GAAImB,IAAI,SAAU,IAAI,IAE9F,EAEAC,YAAa,SAASC,EAAUC,GAC5B,GAAKD,GAAaC,EAAlB,CAIA,IAAIrD,EAAUqD,EAAcrD,QACxBsD,EAAW,CACXvD,SAAUsD,EAActD,UAGxBsD,EAActD,WAAaqD,EAASrD,UAAYsD,EAAcrD,QAAUoD,EAASpD,QACjFsD,EAAStD,QAAUA,EAEnBsD,EAAStD,QAAUA,EAAU,EAGjCW,KAAKkC,QAAQ,UAAW,CACpBU,KAAMH,EACNI,WAAYF,GAfhB,CAiBJ,EAEAG,aAAc,SAASL,EAAUC,GAC7B,GAAKD,GAAaC,EAAlB,CAIA,IAAIrD,EAAUqD,EAAcrD,QACxBsD,EAAW,CACXvD,SAAUsD,EAActD,UAGxBsD,EAActD,WAAaqD,EAASrD,UACpCsD,EAAcrD,QAAUoD,EAASpD,QAC7BsD,EAAStD,QAAUA,EAAU,EAEjCsD,EAAStD,QAAUA,EAGvBW,KAAKkC,QAAQ,UAAW,CACpBU,KAAMH,EACNI,WAAYF,GAhBhB,CAkBJ,EAEAI,cAAe,WACX,IAGIC,EAHAlD,EAAUE,KAAKF,QACfmD,EAAcnD,EAAQoD,KA1IxB,IA0ImC5D,EAAWE,iBAC5C2D,EAASrD,EAAQoD,KA3InB,IA2I8B5D,EAAWC,YAEvC6D,EAAY1F,MAAMS,QAAQiF,YAE1BpD,KAAKqD,aAAavD,KAClBkD,EAASlD,EAAQkD,SAAWnF,EAAYsF,GAExCF,EAAYD,OAAOA,GAEfhD,KAAKsD,oBACLF,EAAYpD,KAAKuD,MAAM,GAAGC,YAAcxD,KAAKuD,MAAM1B,SAAS,GAAG4B,YAAcL,EAAY,EACzFpD,KAAK+B,cAAciB,OAAOA,EAASI,IAG/C,EAEAd,iBAAkB,SAASoB,EAAMC,GAC7B,IAAIX,EACAY,EAAgBF,EAAKG,aACrBC,EAAgBH,EAAKE,aAErBD,EAAgBE,EAChBd,EAASY,EAAgB,KAClBA,EAAgBE,IACvBd,EAASc,EAAgB,MAGzBd,IACAU,EAAKK,MAAMf,OAASW,EAAKI,MAAMf,OAASA,EAE/C,EAGDK,aAAc,SAASW,GACnB,IAAIC,EAAeC,EACnB,QAAIF,EAAG,GAAGD,MAAMf,SAGZiB,EAAgBD,EAAGhB,SAGvBgB,EAAGhB,OAAO,QACVkB,EAAYF,EAAGhB,SACfgB,EAAGhB,OAAO,IAEFiB,GAAiBC,EAC7B,EAEAC,gCAAiC,WAC7B,IAAI7C,EAAOtB,KACPY,EAAWU,EAAKvB,QAAQa,SAExBU,EAAKG,sBAA2C,IAApBb,EAASwD,SACrC9C,EAAK+C,kBAAoB,SAASC,GAC9B,IAAIC,EAAKD,EAAEE,cAAgBlH,EAAEgH,EAAEE,eAAiBF,EAC5CG,EAASnD,EAAKoD,mBAAmBH,GAEjCjD,EAAKV,UAIL6D,GAAUA,EAAO7D,YACjBU,EAAKqD,UAAUJ,EAAIE,EAAQnD,EAAKsD,kBAAkBL,GAE1D,EAEAjD,EAAKuD,QACAC,GAxNH,UAwNgBrG,EAAI6C,EAAKyD,wBAAwBC,KAAK1D,IACnDwD,GAxNF,WAwNgBrG,EAAI6C,EAAK2D,qBAAqBD,KAAK1D,IACjDwD,GAxNH,UAwNgBrG,EAAI,+BAAgC6C,EAAK4D,gBAAgBF,KAAK1D,IAC3EwD,GAxNL,QAwNgBrG,EAAI,+BAAgC6C,EAAK6D,cAAcH,KAAK1D,IAEvEpD,EAKDoD,EAAK8D,MAAQ9D,EAAKuD,QACbQ,WAAW,CACRC,OAAQ,KACRC,WAAY,SAASjB,GACjBhD,EAAKkE,kBAAkBlB,EAAEc,MAC7B,EACAK,UAAW,SAASnB,GACZA,EAAEoB,MAAMC,OAAOC,UAAUC,SAAS,WAAavB,EAAEoB,MAAMC,OAAOC,UAAUC,SAAS,eAGrFvE,EAAKwE,mBAAmBxB,EAAEc,MAC9B,IACDhD,KAAK,cAhBZd,EAAKuD,QACAC,GA3NJ,YA2NoBrG,EAAI,+BAAgC6C,EAAKkE,kBAAkBR,KAAK1D,IAChFwD,GAjOF,WAiOoBrG,EAAI,+BAAgC6C,EAAKwE,mBAAmBd,KAAK1D,IAiBpG,EAEAyE,mBAAoB,WAChB,IAAIhI,EAAgBL,MAAMM,iBAEtBD,GAA0D,SAAzCA,EAAciI,SAASC,eACxC3I,EAAES,GAAemE,QAAQ,OAEjC,EAEAgE,oBAAqB,WACjB,IACIP,EAAS5H,IACTyD,EAFOxB,KAEOwB,QAAU,CAAC,EACzBD,EAAOC,EAAO1B,QAEdyB,GAAQA,EAAK,IAAMoE,IAAWrI,EAAEuI,SAAStE,EAAK,GAAIoE,IAAWpE,EAAK,KAAOoE,IAAWrI,EAAEqI,GAAQQ,QAAQ,0BAA0BjG,QAC5HsB,EAAOtC,OANJc,KAOEkB,WAGjB,EAEAkF,SAAU,WACN,IAAI9E,EAAOtB,KACPC,EAAUD,KAAKD,QAAQE,QAE3BqB,EAAK+E,gBAAiB,EAEtBpG,EAAQqG,SAAQ,SAASnE,GACjBA,EAAKoE,aACLjF,EAAK+E,gBAAiB,EAE9B,IAEA/E,EAAKrB,QAAUqB,EAAKvB,QAAQE,QAAUzC,EAAIyC,EAASqB,EAAKkF,YAAYxB,KAAK1D,IAEzE1D,EAASwC,GAAGgG,SAAS/F,KAAKiB,EAC9B,EAEAmF,cAAe,SAAShC,GACpB,IAAIpG,EAAO,CACPpB,KAAQwH,EAAOiC,MACfC,UAAY,GAOhB,OAJAtI,EAAKC,GAAW,SAAWmG,EAAOiC,MAClCrI,EAAKD,GAAY,OACjBC,EAAKE,GAAUb,MAAMkJ,eAAenC,EAAOoC,QAEpC,SAASC,EAAW/G,GACvB,IAAIsB,EAAQtB,EAAQsB,MAEhB0F,GADQ1F,EAAM2F,OAAOvC,EAAOiC,QAAUrF,EAAMoD,EAAOiC,QAChCK,WAEnBA,GAAcA,EAAWE,aAAexJ,EAAWsJ,EAAWE,cAAgBF,EAAWG,UACzF5J,EAAE,SAAWI,MAAMW,KAAK,OAAS,KAAOoG,EAAOiC,MAAQ,6BAClDS,OACAC,SAASN,GAEdzI,EAAKX,MAAMW,KAAK,oBAAsB0I,EAAWG,SAGrD5J,EAAE,wBACGe,KAAKA,GACLgJ,UAAUP,GACVQ,oBAAoB,CAAET,OAAQ9G,EAAQ8G,QAC/C,CACJ,EAEAnC,mBAAoB,SAAS5E,GACzB,IAAIyE,EAAKzE,EAAQqG,QAAQ,MAErBoB,EADKhD,EAAG1C,SACC2F,WAAWC,MAAMlD,GAE9B,OAAOvE,KAAKC,QAAQsH,EACxB,EAEAf,YAAa,SAAS/B,GAClB,IAAInD,EAAOtB,KACP0H,EAAiBpG,EAAKvB,QAAQ2H,eAC9BC,EAAa3H,KAAKD,QAAQU,SA+D9B,OA3CIgE,EAAOxE,UACPqB,EAAKsG,kBAAmB,EACxBnD,EAAOxE,QAAUzC,EAAIiH,EAAOxE,QAASD,KAAKwG,YAAYxB,KAAKhF,eAGpDyE,IAAWjG,IAClBiG,EAAS,CACLiC,MAAOjC,EACPzF,MAAOD,EAAe0F,MAIN,IAApBA,EAAO7D,SACP6D,EAAO7D,SAAW,WACd,OAAO,CACX,EAEA6D,EAAO7D,SAAW,WACd,OAAO,CACX,EAGiB,UAAjB6D,EAAOiC,OAAsC,QAAjBjC,EAAOiC,QACnCjC,EAAOoC,OAASnJ,MAAMiB,aAAaC,SAASC,SAAS4F,EAAOoC,SAAWpC,EAAOoC,QAAUnI,EAEnF+F,EAAOjD,SACJiD,EAAOoC,SAAWnI,GAAqB+F,EAAOoC,OAAOZ,cAAc4B,QAAQ,MAAQ,KACnFpD,EAAOjD,OAASF,EAAKmF,cAAchC,KAI3CA,EAAOiC,QAAUgB,IACjBjD,EAAOhE,UAAW,EAClBgE,EAAOqD,SAAWrD,EAAOqD,UA5CP,SAASlF,GAI3B,IAHA,IAAImF,EAAQnF,EAAKoF,IAAIN,IAAmB,GACpCO,EAAgB,GAEXC,EAAI,EAAGA,EAAIH,EAAM7H,OAAQgI,IAC9BD,EAAc9H,KAAKzC,MAAMmJ,OAAO,YAAakB,EAAMG,GAAGF,IAAI,QAASD,EAAMG,GAAGF,IAAI,mBAGpF,OAAOC,EAAcE,KAAK,KAC9B,GAqCK7G,EAAK+E,gBAAmC,UAAjB5B,EAAOiC,QAC/BjC,EAAO8B,YAAa,GAGpBoB,IAAelD,EAAOhE,WACtBgE,EAAOhE,UAAW,GAGflD,EAAO,IA7DF,WACRyC,KAAK0G,MAAQ,GACb1G,KAAKhB,MAAQ,GACbgB,KAAKY,SAAW,WAAa,OAAO,CAAO,EAC3CZ,KAAKS,UAAW,CACpB,EAwD2BgE,EAC/B,EAEAE,UAAW,SAASpD,EAAMkD,EAAQpD,GAC9B,IAGI+G,EAHA9G,EAAOtB,KACP0H,EAAiBpG,EAAKvB,QAAQ2H,eAC9BW,EAAY/G,EAAKgH,WAAWC,gBAAgBlH,EAAMmH,UAGlD/D,EAAOiC,QAAUgB,EAIbpG,EAAKY,QAzYH,aAyYwB,CAAEb,MAAOA,EAAOyF,UAAWvF,IACrDD,EAAKgH,WAAWG,iCAIpBnH,EAAKJ,YAELG,EAAMqH,OAAQ,EAEdpH,EAAKK,gBAELL,EAAKW,QAAQ,CACT0G,aAAclE,EACdmE,kBAAmBrH,EAAKkG,UAG5BW,EAAa9G,EAAKiC,MAAMsF,IAAIvH,EAAKwH,aAAa5F,KApZhD,IAoZ2D5D,EAAWG,UAAUsJ,QAE9EzH,EAAKE,OAASF,EAAK0H,oBAAoBZ,EAAY,CAC/CnI,QAAS,CAACwE,GACVpD,MAAOA,EACP4H,OAAQ,SAAS3E,GACThD,EAAKY,QA7ZlB,OA6ZgC,CAAEgH,OAAQ5E,EAAE4E,OAAQpC,UAAWvF,EAAMF,MAAOA,KAC/DiD,EAAE6E,gBAEV,IAIJ7H,EAAK8H,SAAWhB,EAEhB9G,EAAKY,QAvaN,OAuaoB,CAAE4E,UAAWvF,EAAMF,MAAOA,KAlC7CoD,EAAOjD,OAAOD,EAAM8G,EAoC5B,EAEAtD,wBAAyB,SAAST,GAC9B,IACIqB,EAASrB,EAAEqB,OAEVrI,EAAEuI,SAASF,EAAQ5H,OACpBsL,aAJOrJ,KAIWsJ,mBAJXtJ,KAKFsJ,kBAAoB,KAEjC,EAEArE,qBAAsB,SAASX,GAC3B,IAAIhD,EAAOtB,KAEXsB,EAAKgI,kBAAoBC,YAAW,WAChCjI,EAAK4E,oBAAoB5B,EAC7B,GAAG,EACP,EAEAY,gBAAiB,SAASZ,GAClBA,EAAEkF,UAAYvL,EAAKwL,OACnBnF,EAAE6E,gBAEV,EAEAhE,cAAe,SAASb,GACpB,IAEI/C,EAAMF,EAFNC,EAAOtB,KAIX,OAHUsE,EAAEkF,SAIR,KAAKvL,EAAKwL,MACNnI,EAAKyE,qBACLzE,EAAK4E,oBAAoB5B,GACzB,MACJ,KAAKrG,EAAKyL,IACFpI,EAAKE,SACLD,EAAOjE,EAAEgH,EAAEqB,QACXtE,EAAQC,EAAKsD,kBAAkBrD,GAE/BD,EAAKY,QAhdZ,SAgd4B,CAAEb,MAAOA,EAAOE,KAAMA,KAI3D,EAEAqD,kBAAmB,SAAS9E,GACxB,IAAI6J,EAAM7J,EAAQqG,QAAQ,MAG1B,OAFYnG,KAAKsI,WAAWsB,SAASD,EAAItL,KAAKX,MAAMW,KAAK,QAG7D,EAEAmH,kBAAmB,SAASlB,GACJhH,EAAEgH,EAAEE,eAELqF,SAASvK,EAAWG,WACnCO,KAAK+F,oBAEb,EAEAD,mBAAoB,SAASxB,GACzB,IAAIhD,EAAOtB,KACPuE,EAAKjH,EAAEgH,EAAEE,eACTsF,EAAexI,EAAKwH,aAAevE,EAAG4B,QAAQ,SAAS,KAAO7E,EAAKwH,YAAY,GAC/EpI,EAAaY,EAAKZ,YAAcY,EAAKZ,WAAWX,QAAQgK,SAExDxF,EAAGsF,SAASvK,EAAWG,WACvB8E,EAAGyF,IAAI,mBAAmB9J,QAC1BqE,EAAGyF,IAAI,wBAAwB9J,QAC9BqE,EAAG4B,QAAQ,SAAS,KAAO7E,EAAK2I,MAAM,KAAOH,GAC9CxM,EAAEgH,EAAEqB,QAAQuE,GAAG,WACf5M,EAAEgH,EAAEqB,QAAQuE,GAAG,WAAW5K,EAAWK,gBACrCrC,EAAEgH,EAAEqB,QAAQuE,GAAG,WAAW5K,EAAWI,mBAKrC4B,EAAKE,OACDF,EAAKE,OAAOtC,QACRwB,GACApD,EAAES,KAAiBmE,QAAQ,QAE/BZ,EAAKJ,YACLI,EAAK7B,SAAS8E,IAGlBjD,EAAK7B,SAAS8E,GAEtB,EAEA4F,YAAa,SAASC,GAClBxM,EAASwC,GAAG6B,QAAQ5B,KAAKL,MAErBA,KAAK4H,kBACL5H,KAAKF,QAAQuK,SAAS,mCAGtBD,GAAYA,EAASlK,SAAWkK,EAASzB,eACrC3I,KAAKD,QAAQuK,WACbtK,KAAKuK,WAAWH,GAGpBpK,KAAKkC,QA9gBJ,WAihBLlC,KAAK+C,eACT,EAEAwH,WAAY,SAASC,GACjB,IAIIxH,EAJA6B,EAAU7E,KAAK6E,QACf9E,EAAUC,KAAKD,QACfuK,SAAmBvK,EAAQuK,YAAc9L,EAASuB,EAAQuK,UAAYvK,EAAQuK,UAAY,KAC1F/G,EAAQjG,EAAEI,MAAMmJ,OAzgBI,wGAygB8ByD,IAGtDzF,EAAQ4F,OAAOlH,GACfP,EAASnF,EAAY0F,EAAML,KAAK,OAChCK,EAAMmH,SAEN1K,KAAKF,QAAQoD,KAAK,qBAAqBX,IAAI,SAAWiI,EAAMtK,OAAS8C,EAAU,KACnF,EAEA2H,SAAU,SAASH,GACfxK,KAAKsI,WAAWlG,KAAKoI,EACzB,EAEAjK,UAAW,WACPP,KAAKF,QAAQoD,KAAK,wBAAwBX,IAAI,WAAYvC,KAAKD,QAAQ6K,WACvE5K,KAAK6E,QAAQ3B,KAAK,SAASX,IAAI,WAAYvC,KAAKD,QAAQ6K,UAC5D,IAGJjN,EAAGkN,OAAOjL,EAEb,CA1kBD,CA0kBGkL,OAAOpN,MAAMqN","sourcesContent":["import './kendo.treelist.js';\nimport './kendo.treeview.draganddrop.js';\n\nvar __meta__ = {\n    id: \"gantt.list\",\n    name: \"Gantt List\",\n    category: \"web\",\n    description: \"The Gantt List\",\n    depends: [ \"treelist\", \"treeview.draganddrop\" ],\n    hidden: true\n};\n\n(function($) {\n    var extend = $.extend,\n        map = $.map,\n        isFunction = kendo.isFunction,\n\n        ui = kendo.ui,\n        TreeList = ui.TreeList,\n        outerHeight = kendo._outerHeight,\n        activeElement = kendo._activeElement,\n        keys = kendo.keys,\n        mobileOS = kendo.support.mobileOS,\n\n        DATATYPE = kendo.attr(\"type\"),\n        BINDING = kendo.attr(\"bind\"),\n        FORMAT = kendo.attr(\"format\"),\n\n        STRING = \"string\",\n        NS = \".kendoGanttList\",\n        DOUBLE_CLICK = \"dblclick\",\n        FOCUSIN = \"focusin\",\n        FOCUSOUT = \"focusout\",\n        KEYDOWN = \"keydown\",\n        KEYUP = \"keyup\",\n        MOUSE_DOWN = \"mousedown\",\n        BEFORE_EDIT = \"beforeEdit\",\n        EDIT = \"edit\",\n        SAVE = \"save\",\n        CANCEL = \"cancel\",\n        RENDER = \"render\",\n        DOT = \".\",\n\n        defaultDateFormat = \"{0:\" + kendo.getCulture().calendar.patterns.d + \"}\",\n\n        titleFromField = {\n            \"title\": \"Title\",\n            \"start\": \"Start Time\",\n            \"end\": \"End Time\",\n            \"percentComplete\": \"% Done\",\n            \"parentId\": \"Predecessor ID\",\n            \"id\": \"ID\",\n            \"orderId\": \"Order ID\"\n        },\n\n        SIZE_CALCULATION_TEMPLATE = \"<table style='visibility: hidden;'>\" +\n            \"<tbody>\" +\n                \"<tr style='height:{0}'>\" +\n                    \"<td>&nbsp;</td>\" +\n                \"</tr>\" +\n            \"</tbody>\" +\n        \"</table>\",\n\n        listStyles = {\n            gridHeader: \"k-grid-header\",\n            gridContentWrap: \"k-grid-content\",\n            editCell: \"k-edit-cell\",\n            iconCollapse: \"caret-alt-down\",\n            iconExpand: \"caret-alt-right\"\n        };\n\n    var GanttList = ui.GanttList = TreeList.extend({\n        init: function(element, options) {\n            if (this.options.columns.length === 0) {\n                this.options.columns.push(\"title\");\n            }\n\n            TreeList.fn.init.call(this, element, options);\n\n            this._unbindDataSource();\n            this._setWidth();\n        },\n\n        options: {\n            name: \"GanttList\",\n            autoBind: false,\n            sortable: true,\n            selectable: true,\n            navigatable: false,\n            editable: {\n                move: true,\n                mode: \"incell\"\n            },\n            resizable: false,\n            renderAllRows: false\n        },\n\n        destroy: function() {\n            TreeList.fn.destroy.call(this);\n            kendo.destroy(this.element);\n        },\n\n        closeCell: function(isCancel) {\n            var that = this;\n            var cell = (that.editor || {}).element;\n            var tr;\n            var model;\n\n            if (!cell || !cell[0] || !that._isIncellEditable()) {\n                return;\n            }\n\n            model = that.dataItem(cell);\n            that._cancelEditor();\n            cell.removeClass(listStyles.editCell);\n            tr = cell.parent().removeClass(listStyles.editRow);\n\n            if (that.lockedContent) {\n                that._relatedRow(tr).removeClass(listStyles.editRow);\n            }\n\n            if (isCancel) {\n                that._render();\n            }\n\n            that.trigger(\"itemChange\", { item: tr, data: model, ns: ui });\n\n            if (that.lockedContent) {\n                that._adjustRowHeight(tr.css(\"height\", \"\")[0], that._relatedRow(tr).css(\"height\", \"\")[0]);\n            }\n        },\n\n        insertAfter: function(nodeData, referenceNode) {\n            if (!nodeData || !referenceNode) {\n                return;\n            }\n\n            var orderId = referenceNode.orderId;\n            var taskInfo = {\n                parentId: referenceNode.parentId\n            };\n\n            if (referenceNode.parentId === nodeData.parentId && referenceNode.orderId > nodeData.orderId) {\n                taskInfo.orderId = orderId;\n            } else {\n                taskInfo.orderId = orderId + 1;\n            }\n\n            this.trigger(\"reorder\", {\n                task: nodeData,\n                updateInfo: taskInfo\n            });\n        },\n\n        insertBefore: function(nodeData, referenceNode) {\n            if (!nodeData || !referenceNode) {\n                return;\n            }\n\n            var orderId = referenceNode.orderId;\n            var taskInfo = {\n                parentId: referenceNode.parentId\n            };\n\n            if (referenceNode.parentId === nodeData.parentId &&\n                referenceNode.orderId > nodeData.orderId) {\n                    taskInfo.orderId = orderId - 1;\n            } else {\n                taskInfo.orderId = orderId;\n            }\n\n            this.trigger(\"reorder\", {\n                task: nodeData,\n                updateInfo: taskInfo\n            });\n        },\n\n        _adjustHeight: function() {\n            var element = this.element;\n            var contentWrap = element.find(DOT + listStyles.gridContentWrap);\n            var header = element.find(DOT + listStyles.gridHeader);\n            var height;\n            var scrollbar = kendo.support.scrollbar();\n\n            if (this._isHeightSet(element)) {\n                height = element.height() - outerHeight(header);\n\n                contentWrap.height(height);\n\n                if (this._hasLockedColumns) {\n                    scrollbar = this.table[0].offsetWidth > this.table.parent()[0].clientWidth ? scrollbar : 0;\n                    this.lockedContent.height(height - scrollbar);\n                }\n            }\n        },\n\n        _adjustRowHeight: function(row1, row2) {\n            var height;\n            var offsetHeight1 = row1.offsetHeight;\n            var offsetHeight2 = row2.offsetHeight;\n\n            if (offsetHeight1 > offsetHeight2) {\n                height = offsetHeight1 + \"px\";\n            } else if (offsetHeight1 < offsetHeight2) {\n                height = offsetHeight2 + \"px\";\n            }\n\n            if (height) {\n                row1.style.height = row2.style.height = height;\n            }\n         },\n\n        // identical code found in treelist, grid & scheduler :(\n        _isHeightSet: function(el) {\n            var initialHeight, newHeight;\n            if (el[0].style.height) {\n                return true;\n            } else {\n                initialHeight = el.height();\n            }\n\n            el.height(\"auto\");\n            newHeight = el.height();\n            el.height(\"\");\n\n            return (initialHeight != newHeight);\n        },\n\n        _attachCellEditingEventHandlers: function() {\n            var that = this,\n                editable = that.options.editable;\n\n            if (that._isIncellEditable() && editable.update !== false) {\n                that._startEditHandler = function(e) {\n                    var td = e.currentTarget ? $(e.currentTarget) : e;\n                    var column = that._columnFromElement(td);\n\n                    if (that.editable) {\n                        return;\n                    }\n\n                    if (column && column.editable()) {\n                        that._editCell(td, column, that._modelFromElement(td));\n                    }\n                };\n\n                that.content\n                    .on(FOCUSIN + NS, that._focusInEditableHandler.bind(that))\n                    .on(FOCUSOUT + NS, that._focusoutCellHandler.bind(that))\n                    .on(KEYDOWN + NS, \"tr:not(.k-grouping-row) > td\", that._keydownHandler.bind(that))\n                    .on(KEYUP + NS, \"tr:not(.k-grouping-row) > td\", that._keyupHandler.bind(that));\n\n                if (!mobileOS) {\n                    that.content\n                        .on(MOUSE_DOWN + NS, \"tr:not(.k-grouping-row) > td\", that._mouseDownHandler.bind(that))\n                        .on(DOUBLE_CLICK + NS, \"tr:not(.k-grouping-row) > td\", that._openEditorHandler.bind(that));\n                } else {\n                    that.touch = that.content\n                        .kendoTouch({\n                            filter: \"td\",\n                            touchstart: function(e) {\n                                that._mouseDownHandler(e.touch);\n                            },\n                            doubletap: function(e) {\n                                if (e.event.target.classList.contains(\"k-icon\") || e.event.target.classList.contains(\"k-svg-icon\")) {\n                                    return;\n                                }\n                                that._openEditorHandler(e.touch);\n                            }\n                        }).data(\"kendoTouch\");\n                }\n            }\n        },\n\n        _blurActiveElement: function() {\n            var activeElement = kendo._activeElement();\n\n            if (activeElement && activeElement.nodeName.toLowerCase() !== \"body\") {\n                $(activeElement).trigger(\"blur\");\n            }\n        },\n\n        _closeCellTimeouted: function() {\n            var that = this,\n                target = activeElement(),\n                editor = that.editor || {},\n                cell = editor.element;\n\n            if (cell && cell[0] && target && !$.contains(cell[0], target) && cell[0] !== target && !$(target).closest(\".k-animation-container\").length) {\n                if (editor.end()) {\n                    that.closeCell();\n                }\n            }\n        },\n\n        _columns: function() {\n            var that = this,\n                columns = this.options.columns;\n\n            that._hasExpandable = false;\n\n            columns.forEach(function(item) {\n                if (item.expandable) {\n                    that._hasExpandable = true;\n                }\n            });\n\n            that.columns = that.options.columns = map(columns, that._eachColumn.bind(that));\n\n            TreeList.fn._columns.call(that);\n        },\n\n        _columnEditor: function(column) {\n            var attr = {\n                \"name\": column.field,\n                \"required\": true\n            };\n\n            attr[BINDING] = \"value:\" + column.field;\n            attr[DATATYPE] = \"date\";\n            attr[FORMAT] = kendo._extractFormat(column.format);\n\n            return function(container, options) {\n                var model = options.model,\n                    field = model.fields[column.field] || model[column.field],\n                    validation = field.validation;\n\n                if (validation && validation.dateCompare && isFunction(validation.dateCompare) && validation.message) {\n                    $('<span ' + kendo.attr(\"for\") + '=\"' + column.field + '\" class=\"k-invalid-msg\"/>')\n                        .hide()\n                        .appendTo(container);\n\n                    attr[kendo.attr(\"dateCompare-msg\")] = validation.message;\n                }\n\n                $('<input type=\"text\"/>')\n                    .attr(attr)\n                    .prependTo(container)\n                    .kendoDateTimePicker({ format: options.format });\n            };\n        },\n\n        _columnFromElement: function(element) {\n            var td = element.closest(\"td\"),\n                tr = td.parent(),\n                idx = tr.children().index(td);\n\n            return this.columns[idx];\n        },\n\n        _eachColumn: function(column) {\n            var that = this,\n                resourcesField = that.options.resourcesField,\n                isSortable = this.options.sortable;\n\n            var model = function() {\n                this.field = \"\";\n                this.title = \"\";\n                this.editable = function() { return false; };\n                this.sortable = false;\n            };\n\n            var formatResources = function(task) {\n                var value = task.get(resourcesField) || [],\n                    formatedValue = [];\n\n                for (var i = 0; i < value.length; i++) {\n                    formatedValue.push(kendo.format(\"{0} [{1}]\", value[i].get(\"name\"), value[i].get(\"formatedValue\")));\n                }\n\n                return formatedValue.join(\", \");\n            };\n\n            if (column.columns) {\n                that.hasNestedColumns = true;\n                column.columns = map(column.columns, this._eachColumn.bind(this));\n            }\n\n            if (typeof column === STRING) {\n                column = {\n                    field: column,\n                    title: titleFromField[column]\n                };\n            }\n\n            if (column.editable === true) {\n                column.editable = function() {\n                    return true;\n                };\n            } else {\n                column.editable = function() {\n                    return false;\n                };\n            }\n\n            if (column.field === \"start\" || column.field === \"end\") {\n                column.format = kendo.getCulture().calendar.patterns[column.format] || column.format || defaultDateFormat;\n\n                if (!column.editor) {\n                    if (column.format === defaultDateFormat || column.format.toLowerCase().indexOf(\"h\") > -1) {\n                        column.editor = that._columnEditor(column);\n                    }\n                }\n            }\n            if (column.field === resourcesField) {\n                column.sortable = false;\n                column.template = column.template || formatResources;\n            }\n            if (!that._hasExpandable && column.field === \"title\") {\n                column.expandable = true;\n            }\n\n            if (isSortable && !column.sortable) {\n                column.sortable = false;\n            }\n\n            return extend(new model(), column);\n        },\n\n        _editCell: function(cell, column, model) {\n            var that = this,\n                resourcesField = that.options.resourcesField,\n                modelCopy = that.dataSource._createNewModel(model.toJSON()),\n                editedCell;\n\n            if (column.field === resourcesField) {\n                column.editor(cell, modelCopy);\n                return;\n            } else {\n                if (that.trigger(BEFORE_EDIT, { model: model, container: cell })) {\n                    that.dataSource._restorePageSizeAfterAddChild();\n                    return;\n                }\n\n                that.closeCell();\n\n                model._edit = true;\n\n                that._cancelEditor();\n\n                that._render({\n                    editedColumn: column,\n                    editedColumnIndex: cell.index()\n                });\n\n                editedCell = that.table.add(that.lockedTable).find(DOT + listStyles.editCell).first();\n\n                that.editor = that._createIncellEditor(editedCell, {\n                    columns: [column],\n                    model: model,\n                    change: function(e) {\n                        if (that.trigger(SAVE, { values: e.values, container: cell, model: model } )) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n\n                // refresh the current element as the DOM element reference can be changed after render()\n                that._current = editedCell;\n\n                that.trigger(EDIT, { container: cell, model: model });\n            }\n        },\n\n        _focusInEditableHandler: function(e) {\n            var that = this,\n                target = e.target;\n\n            if (!$.contains(target, activeElement())) {\n                clearTimeout(that._closeCellTimeout);\n                that._closeCellTimeout = null;\n            }\n        },\n\n        _focusoutCellHandler: function(e) {\n            var that = this;\n\n            that._closeCellTimeout = setTimeout(function() {\n                that._closeCellTimeouted(e);\n            }, 1);\n        },\n\n        _keydownHandler: function(e) {\n            if (e.keyCode === keys.ENTER) {\n                e.preventDefault();\n            }\n        },\n\n        _keyupHandler: function(e) {\n            var that = this,\n                key = e.keyCode,\n                cell, model;\n\n            switch (key) {\n                case keys.ENTER:\n                    that._blurActiveElement();\n                    that._closeCellTimeouted(e);\n                    break;\n                case keys.ESC:\n                    if (that.editor) {\n                        cell = $(e.target);\n                        model = that._modelFromElement(cell);\n\n                        that.trigger(CANCEL, { model: model, cell: cell });\n                    }\n                    break;\n            }\n        },\n\n        _modelFromElement: function(element) {\n            var row = element.closest(\"tr\"),\n                model = this.dataSource.getByUid(row.attr(kendo.attr(\"uid\")));\n\n            return model;\n        },\n\n        _mouseDownHandler: function(e) {\n            var currentTarget = $(e.currentTarget);\n\n            if (!currentTarget.hasClass(listStyles.editCell)) {\n                this._blurActiveElement();\n            }\n        },\n\n        _openEditorHandler: function(e) {\n            var that = this,\n                td = $(e.currentTarget),\n                isLockedCell = that.lockedTable && td.closest(\"table\")[0] === that.lockedTable[0],\n                selectable = that.selectable && that.selectable.options.multiple;\n\n            if (td.hasClass(listStyles.editCell) ||\n                td.has(\"a.k-grid-delete\").length ||\n                td.has(\"button.k-grid-delete\").length ||\n                (td.closest(\"tbody\")[0] !== that.tbody[0] && !isLockedCell) ||\n                $(e.target).is(\":input\") ||\n                $(e.target).is(`[class*=${listStyles.iconExpand}]`) ||\n                $(e.target).is(`[class*=${listStyles.iconCollapse}]`)) {\n\n                return;\n            }\n\n            if (that.editor) {\n                if (that.editor.end()) {\n                    if (selectable) {\n                        $(activeElement()).trigger(\"blur\");\n                    }\n                    that.closeCell();\n                    that.editCell(td);\n                }\n            } else {\n                that.editCell(td);\n            }\n        },\n\n        _renderTree: function(taskTree) {\n            TreeList.fn._render.call(this);\n\n            if (this.hasNestedColumns) {\n                this.element.addClass(\"k-gantt-treelist-nested-columns\");\n            }\n\n            if (taskTree && taskTree.length && !taskTree.editedColumn) {\n                if (this.options.rowHeight) {\n                    this._rowHeight(taskTree);\n                }\n\n                this.trigger(RENDER);\n            }\n\n            this._adjustHeight();\n        },\n\n        _rowHeight: function(tasks) {\n            var content = this.content,\n                options = this.options,\n                rowHeight = typeof options.rowHeight === STRING ? options.rowHeight : options.rowHeight + \"px\",\n                table = $(kendo.format(SIZE_CALCULATION_TEMPLATE, rowHeight)),\n                height;\n\n            content.append(table);\n            height = outerHeight(table.find(\"tr\"));\n            table.remove();\n\n            this.element.find('[role=\"treegrid\"]').css(\"height\", (tasks.length * height) + \"px\");\n        },\n\n        _setData: function(tasks) {\n            this.dataSource.data(tasks);\n        },\n\n        _setWidth: function() {\n            this.element.find(\".k-grid-header table\").css(\"minWidth\", this.options.listWidth);\n            this.content.find(\"table\").css(\"minWidth\", this.options.listWidth);\n        }\n    });\n\n    ui.plugin(GanttList);\n\n})(window.kendo.jQuery);\n"]}