{"version":3,"file":"kendo.pivot.configurator.js","names":["__meta__","id","name","category","depends","hidden","$","undefined$1","kendo","window","ui","encode","htmlEncode","Widget","common","pivotgrid","fetchDiscover","configuratorReducer","PIVOT_CONFIGURATOR_ACTION","ns","HOVER_EVENTS","SETTING_CONTAINER_TEMPLATE","addKPI","data","found","idx","length","type","splice","caption","defaultHierarchy","uniqueName","kpiNode","node","normalizeKPIs","settingTargetFromNode","target","closest","PivotConfiguratorV2","extend","init","element","options","fn","call","this","addClass","_dataSource","_layout","refresh","height","notify","events","orientation","filterable","sortable","messages","title","cancelButtonText","applyButtonText","measures","columns","rows","setDataSource","dataSource","that","_refreshHandler","unbind","_errorHandler","_progressHandler","_error","bind","_requestStart","PivotDataSourceV2","create","horizontal","panel","append","SETTINGS_TEMPLATE","appendTo","formClass","CONTENT_TEMPLATE","find","each","index","elm","html","renderChipList","_fields","cancelText","applyText","ACTIONS_TEMPLATE","_targets","on","_actions","e","preventDefault","currentTarget","_applyState","read","_cancelChanges","treeView","first","last","targetItemTemplate","menuenabled","renderChip","icon","TARGET_ITEM_TEMPLATE","fillMode","themeColor","rounded","removable","removeIcon","_createTarget","template","connectWith","empty","setting","PivotSettingTargetV2","hint","clone","remove","item","wrapper","attr","dataItem","getByUid","checked","container","kendoTreeView","checkboxes","checkChildren","result","hasChildren","aggregator","local","uid","dataTextField","autoBind","check","sender","action","toggleSelection","payload","state","columnAxes","_state","rowAxes","measureAxes","cubeSchema","restoreMeasure","items","_checkMembers","trigger","_redraw","_treeViewDataSource","off","_clickHandler","HierarchicalDataSource","schema","model","transport","fields","dsMeasures","catalog","cube","fetchOptions","url","members","concat","isEmptyObject","dimensions","success","connection","restrictions","catalogName","cubeName","command","then","newFields","get","_getKPIOptions","buildKPImeasures","_loadFieldsCommand","newData","hash","field","dimensionUniqueName","hierarchyUniqueName","_progress","toggle","progress","destroy","fetch","plugin","PivotConfigurator","outerHeight","measuresLabel","columnsLabel","rowsLabel","fieldsLabel","PivotDataSource","kpi","schemaDimensions","done","cubeBuilder","fail","error","schemaKPIs","schemaMeasures","schemaLevels","schemaHierarchies","form","dragAndDrop","dragstart","sourceNode","measure","drag","status","dropTarget","validate","setStatusClass","drop","push","add","sortIcon","getIcons","PivotSettingTarget","emptyTemplate","columnsContainer","rowsContainer","measuresContainer","fieldMenu","_toggleHover","toggleClass","_resize","_cube","_catalog","kpiMeasure","value","goal","trend","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","jQuery"],"sources":["kendo.pivot.configurator.js"],"mappings":"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","sourcesContent":["import './kendo.dom.js';\nimport './kendo.html.chip.js';\nimport './kendo.html.chiplist.js';\nimport './kendo.pivot.common.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"pivot.configurator\",\n    name: \"PivotConfigurator\",\n    category: \"web\",\n    depends: [ \"dropdownlist\", \"treeview\", \"treeview.draganddrop\", \"pivot.fieldmenu\", \"html.chip\", \"html.chiplist\", \"pivot.common\", \"icons\" ],\n    hidden: true\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Widget = ui.Widget,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        configuratorReducer = common.configuratorReducer,\n        PIVOT_CONFIGURATOR_ACTION = common.PIVOT_CONFIGURATOR_ACTION,\n        ns = \".kendoPivotConfigurator\",\n        HOVER_EVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        SETTINGS_TEMPLATE = ({ title }) => '<div class=\"k-pivotgrid-configurator-header\">' +\n                                            `<div class=\"k-pivotgrid-configurator-header-text\">${encode(title)}</div>` +\n                                          '</div>',\n        CONTENT_TEMPLATE = ({ formClass, horizontal }) => '<div class=\"k-pivotgrid-configurator-content\">' +\n            `<form class=\"${encode(formClass)}\">` +\n                `${horizontal ? '<div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    '<label class=\"k-label\">Fields</label>' +\n                '</div>' +\n                '<div class=\"k-form-field\">' +\n                  '<div class=\"k-fields-list-wrapper\"></div>' +\n                '</div>' +\n                `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    '<label class=\"k-label\">Columns</label>' +\n                '</div>' +\n                '<div class=\"k-chip-list k-column-fields\"></div>' +\n                '<div class=\"k-form-field\">' +\n                    '<label class=\"k-label\">Rows</label>' +\n                '</div>' +\n                '<div class=\"k-chip-list k-row-fields\"></div>' +\n                `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    '<label class=\"k-label\">Values</label>' +\n                '</div>' +\n                '<div class=\"k-chip-list k-column-fields\"></div>' +\n                `${horizontal ? '</div>' : ''}` +\n            '</form>' +\n        '</div>',\n        TARGET_ITEM_TEMPLATE = ({ name, menuenabled }) => '<span>' +\n                `<span class=\"k-chip-label\">${encode(name)}</span>` +\n                `${menuenabled ? kendo.ui.icon(\"more-vertical\") : ''}` +\n            '</span>',\n        ACTIONS_TEMPLATE = ({ cancelText, applyText }) =>\n                '<div class=\"k-pivotgrid-configurator-actions k-actions k-hstack k-justify-content-end\">' +\n                  '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\">' +\n                    `<span class=\"k-button-text\">${encode(cancelText)}</span>` +\n                  '</button>' +\n                  '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\">' +\n                    `<span class=\"k-button-text\">${encode(applyText)}</span>` +\n                  '</button>' +\n                '</div>',\n        SETTING_CONTAINER_TEMPLATE = ({ name }) => `<div class=\"k-pivotgrid-target k-pivotgrid-configurator-section\"><strong>${name}</strong><div class=\"k-pivotgrid-target-wrap\"></div>`;\n\n    function addKPI(data) {\n        var found;\n        var idx = 0;\n        var length = data.length;\n\n        for (; idx < length; idx++) {\n            if (data[idx].type == 2) {\n                found = true;\n                break;\n            }\n        }\n\n        if (found) {\n            data.splice(idx + 1, 0, {\n                caption: \"KPIs\",\n                defaultHierarchy: \"[KPIs]\",\n                name: \"KPIs\",\n                uniqueName: \"[KPIs]\"\n            });\n        }\n    }\n\n    function kpiNode(node) {\n        return {\n            name: node.uniqueName,\n            type: node.type\n        };\n    }\n\n    function normalizeKPIs(data) {\n        for (var idx = 0, length = data.length; idx < length; idx++) {\n            data[idx].uniqueName = data[idx].name;\n            data[idx].type = \"kpi\";\n        }\n\n        return data;\n    }\n\n    function settingTargetFromNode(node) {\n        var target = $(node).closest(\".k-pivot-setting\");\n\n        if (target.length) {\n            return target.data(\"kendoPivotSettingTarget\");\n        }\n        return null;\n    }\n\n    function getIcons(sortIcon, options) {\n        var sortable = options.sortable;\n        var result = '';\n\n        if (sortable) {\n            result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n        }\n\n        if (options.filterable || sortable) {\n            result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n        }\n\n        result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n\n        return result;\n    }\n\n    var PivotConfiguratorV2 = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this.element.addClass(\"k-widget k-pivotgrid-configurator k-pos-relative\");\n\n            this._dataSource();\n\n            this._layout();\n\n            this.refresh();\n\n            if (options.height) {\n                this.element.height(options.height);\n            }\n\n            kendo.notify(this);\n        },\n\n        events: [],\n\n        options: {\n            name: \"PivotConfiguratorV2\",\n            orientation: \"vertical\",\n            filterable: false,\n            sortable: false,\n            messages: {\n                title: \"Settings\",\n                cancelButtonText: \"Cancel\",\n                applyButtonText: \"Apply\",\n                measures: \"Select some fields to begin setup\",\n                columns: \"Select some fields to begin setup\",\n                rows: \"Select some fields to begin setup\"\n            }\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measures) {\n                this.measures.setDataSource(dataSource);\n            }\n\n            if (this.rows) {\n                this.rows.setDataSource(dataSource);\n            }\n\n            if (this.columns) {\n                this.columns.setDataSource(dataSource);\n            }\n\n            this.refresh();\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler)\n                               .unbind(\"error\", that._errorHandler)\n                               .unbind(\"progress\", that._progressHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(that.options.dataSource);\n            that.dataSource.bind(\"change\", that._refreshHandler)\n                           .bind(\"error\", that._errorHandler)\n                           .bind(\"progress\", that._progressHandler);\n        },\n\n        _layout: function() {\n\n            var that = this;\n            var options = that.options;\n            var messages = options.messages;\n            var horizontal = options.orientation == \"horizontal\";\n\n            var panel = $(\"<div class='k-pivotgrid-configurator-panel k-pivotgrid-configurator-push'></div>\");\n\n            panel.addClass(horizontal ? \"k-pivotgrid-configurator-horizontal\" : \"k-pivotgrid-configurator-vertical\");\n\n            that.element.append(panel);\n\n            that.panel = panel;\n\n            $(SETTINGS_TEMPLATE({ title: this.options.messages.title })).appendTo(that.panel);\n\n            $(CONTENT_TEMPLATE({ formClass: horizontal ? \"k-form k-form-horizontal\" : \"k-form\", filterable: options.filterable, horizontal: horizontal }))\n                .appendTo(that.panel).find(\".k-chip-list\")\n                .each(function(index, elm) {\n                    kendo.html.renderChipList(elm, $.extend({}, options));\n                });\n\n            that._fields();\n            $(ACTIONS_TEMPLATE({ cancelText: messages.cancelButtonText, applyText: messages.applyButtonText })).appendTo(that.panel);\n            that._targets();\n\n            that.element.on(\"click\" + ns, \".k-pivotgrid-configurator-actions > button\", that._actions.bind(that));\n        },\n\n        _actions: function(e) {\n            e.preventDefault();\n\n            var target = $(e.currentTarget).closest(\":not(path,svg)\");\n            if (target.index()) {\n                this.columns._applyState();\n                this.rows._applyState();\n                this.measures._applyState();\n                this.dataSource.read();\n            } else {\n                this.columns._cancelChanges();\n                this.rows._cancelChanges();\n                this.measures._cancelChanges();\n                this.treeView.dataSource.read();\n            }\n        },\n\n        _targets: function() {\n            var that = this;\n            var columns = that.panel.find(\".k-column-fields\").first();\n            var rows = that.panel.find(\".k-row-fields\");\n            var measures = that.panel.find(\".k-chip-list\").last();\n            var options = this.options;\n\n            var targetItemTemplate = ({ name, menuenabled }) => kendo.html.renderChip(TARGET_ITEM_TEMPLATE({ name, menuenabled }), $.extend({}, options, {\n                fillMode: \"solid\",\n                themeColor: \"base\",\n                rounded: \"full\",\n                removable: true,\n                removeIcon: \"x-circle\"\n            }));\n\n            this.columns = this._createTarget(columns, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                template: targetItemTemplate,\n                connectWith: rows,\n                messages: {\n                    empty: options.messages.columns\n                }\n            });\n\n            this.rows = this._createTarget(rows, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                template: targetItemTemplate,\n                setting: \"rows\",\n                connectWith: columns,\n                messages: {\n                    empty: this.options.messages.rows\n                }\n            });\n\n            this.measures = this._createTarget(measures, {\n                setting: \"measures\",\n                template: targetItemTemplate,\n                messages: {\n                    empty: options.messages.measures\n                }\n            });\n        },\n\n        _createTarget: function(element, options) {\n            var that = this;\n            return new kendo.ui.PivotSettingTargetV2(element, $.extend({\n                dataSource: this.dataSource,\n                hint: function(element) {\n                    return element.clone();\n                },\n                remove: function(e) {\n                    var item = that.treeView.wrapper\n                        .find(\"[data-name='\" + e.name + \"']\")\n                        .closest(\"li\");\n                    var id = item.attr(kendo.attr(\"uid\"));\n                    var dataItem = that.treeView.dataSource.getByUid(id);\n\n                    if (dataItem) {\n                        dataItem.checked = false;\n                        item.find(\"input\").attr(\"checked\", false);\n                    }\n                },\n                template: options.template\n            }, options));\n        },\n\n        _fields: function() {\n            var that = this;\n            var container = that.element.find(\".k-fields-list-wrapper\");\n\n            this.treeView = $(\"<div/>\").appendTo(container)\n                .kendoTreeView({\n                    checkboxes: {\n                        checkChildren: true,\n                        template: ({ item }) => {\n                            var result = '';\n\n                            if ((item.hasChildren || item.aggregator || item.local) && item.uniqueName !== \"[KPIs]\" && item.uniqueName !== \"[Measures]\" && item.uniqueName !== \"Measures\") {\n                                result += `<input type=\"checkbox\" data-name=\"${encode(item.uniqueName)}\" ${item.checked ? \"checked\" : \"\"} class=\"k-checkbox k-checkbox-md k-rounded-md\" id=\"${encode(item.uid)}\" tabindex=\"-1\">`;\n                            }\n\n                            return result;\n                        }\n                    },\n                    dataTextField: \"caption\",\n                    autoBind: false,\n                    check: function(e) {\n                      var dataItem = e.sender.dataItem(e.node);\n                      var action = {\n                        type: PIVOT_CONFIGURATOR_ACTION.toggleSelection,\n                        payload: dataItem\n                      };\n                      var state = {\n                        columnAxes: that.columns._state(),\n                        rowAxes: that.rows._state(),\n                        measureAxes: that.measures._state()\n                      };\n                      var result = configuratorReducer(state, action);\n\n                      if (that.dataSource.cubeSchema && result.measureAxes && result.measureAxes.length &&\n                        result.measureAxes.length > state.measureAxes.length) {\n                          that.dataSource.cubeSchema.restoreMeasure(result.measureAxes, dataItem);\n                      }\n\n                      if (dataItem.defaultHierarchy && dataItem.items && dataItem.items.length) {\n                          that._checkMembers([{ name: dataItem.defaultHierarchy }], dataItem.items);\n                          dataItem.items.trigger(\"change\");\n                      }\n\n                      if (result.columnAxes) {\n                          that.columns._state(result.columnAxes);\n                          that.columns._redraw();\n                      }\n                      if (result.rowAxes) {\n                          that.rows._state(result.rowAxes);\n                          that.rows._redraw();\n                      }\n                      if (result.measureAxes) {\n                          that.measures._state(result.measureAxes);\n                          that.measures._redraw();\n                      }\n                    },\n                    dataSource: this._treeViewDataSource()\n                 })\n                .data(\"kendoTreeView\");\n\n            this.treeView.wrapper.off(\"click\", this.treeView._clickHandler);\n        },\n\n        _treeViewDataSource: function() {\n            var that = this;\n\n            return kendo.data.HierarchicalDataSource.create({\n                schema: {\n                    model: {\n                        id: \"uniqueName\",\n                        hasChildren: function(item) {\n                            if (that.dataSource.cubeSchema && item.uniqueName !== \"Measures\") {\n                                item.local = true;\n                                return false;\n                            }\n                            return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                        }\n                    }\n                },\n                transport: {\n                    read: function(options) {\n                        var node;\n                        var transport = that.dataSource.transport;\n                        var catalog = transport.catalog();\n                        var cube = transport.cube();\n                        var fetchOptions = {\n                            url: transport.options.read\n                        };\n                        var columns = that.columns._state();\n                        var rows = that.rows._state();\n                        var measures = that.measures._state();\n                        var members = columns.concat(rows).concat(measures);\n                        var fields;\n                        var dsMeasures;\n                        var fetchOpts;\n\n                        if ($.isEmptyObject(options.data)) {\n                            if (that.dataSource.cubeSchema) {\n                                fields = that.dataSource.cubeSchema.dimensions();\n                                that._checkMembers(members, fields);\n                                options.success(fields);\n                            } else {\n                                fetchOpts = {\n                                    connection: {\n                                        catalog: catalog,\n                                        cube: cube\n                                    },\n                                    restrictions: {\n                                        catalogName: catalog,\n                                        cubeName: cube\n                                    },\n                                    command: 'schemaDimensions'\n                                };\n\n                                fetchDiscover(fetchOptions, fetchOpts)\n                                    .then(function(newFields) {\n                                        that._checkMembers(members, newFields);\n                                        addKPI(newFields);\n                                        options.success(newFields);\n                                     });\n                            }\n                        } else {\n                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                            if (that.dataSource.cubeSchema) {\n                                dsMeasures = that.dataSource.measures();\n                                that._checkMembers(members, dsMeasures);\n                                options.success(dsMeasures);\n                            } else {\n                                if (node.uniqueName === \"[KPIs]\") {\n                                    fetchDiscover(fetchOptions, that._getKPIOptions(catalog, cube))\n                                    .then(function(newFields) {\n                                        options.success(normalizeKPIs(newFields));\n                                    });\n                                } else if (node.type == \"kpi\") {\n                                    options.success(buildKPImeasures(node));\n                                } else {\n                                    fetchDiscover(fetchOptions ,that._loadFieldsCommand(node, catalog, cube))\n                                    .then(function(newFields) {\n                                        that._checkMembers(members, newFields);\n                                        options.success(newFields);\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        },\n\n        _checkMembers: function(members, newData) {\n            var hash = {};\n            var index = 0;\n\n            for (index = 0; index < members.length; index++) {\n                hash[members[index].name] = true;\n            }\n\n            for (index = 0; index < newData.length; index++) {\n                if (hash[newData[index].uniqueName]) {\n                    newData[index].checked = true;\n                }\n            }\n        },\n\n        _getKPIOptions: function(catalog, cube) {\n            return {\n                connection: {\n                    catalog: catalog,\n                    cube: cube\n                },\n                restrictions: {\n                    catalogName: catalog,\n                    cubeName: cube\n                },\n                command: 'schemaKPIs'\n            };\n        },\n\n        _loadFieldsCommand: function(field, catalog, cube) {\n            var command;\n            var dimensionUniqueName;\n            var hierarchyUniqueName;\n\n            if (field.type === 2) {\n                command = 'schemaMeasures';\n            } else if (field.dimensionUniqueName) {\n                command = 'schemaLevels';\n                hierarchyUniqueName = field.uniqueName;\n            } else {\n                command = 'schemaHierarchies';\n                dimensionUniqueName = field.uniqueName;\n            }\n\n            var options = {\n                connection: {\n                    catalog: catalog,\n                    cube: cube\n                },\n                restrictions: {\n                    catalogName: catalog,\n                    cubeName: cube,\n                    hierarchyUniqueName: hierarchyUniqueName,\n                    dimensionUniqueName: dimensionUniqueName\n                },\n                command: command\n            };\n\n            return options;\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.element, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(\"change\", this._refreshHandler);\n\n            this.element.off(ns);\n\n            this.rows.destroy();\n            this.columns.destroy();\n            this.measures.destroy();\n            this.treeView.destroy();\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        refresh: function() {\n            if (this.treeView) {\n                this.treeView.dataSource.fetch();\n            }\n\n            this._progress(false);\n        }\n\n    });\n\n    ui.plugin(PivotConfiguratorV2);\n\n    var PivotConfigurator = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this.element.addClass(\"k-pivotgrid-configurator-panel kendo-jquery\");\n\n            if (this.options.height) {\n                this.element.outerHeight(this.options.height);\n            }\n\n            this._dataSource();\n\n            this._layout();\n\n            this.refresh();\n\n            kendo.notify(this);\n        },\n\n        events: [],\n\n        options: {\n            name: \"PivotConfigurator\",\n            filterable: false,\n            sortable: false,\n            messages: {\n                measures: \"Drop Data Fields Here\",\n                columns: \"Drop Column Fields Here\",\n                rows: \"Drop Rows Fields Here\",\n                measuresLabel: \"Measures\",\n                columnsLabel: \"Columns\",\n                rowsLabel: \"Rows\",\n                fieldsLabel: \"Fields\"\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler)\n                               .unbind(\"error\", that._errorHandler)\n                               .unbind(\"progress\", that._progressHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n            that.dataSource.bind(\"change\", that._refreshHandler)\n                           .bind(\"error\", that._errorHandler)\n                           .bind(\"progress\", that._progressHandler);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measures) {\n                this.measures.setDataSource(dataSource);\n            }\n\n            if (this.rows) {\n                this.rows.setDataSource(dataSource);\n            }\n\n            if (this.columns) {\n                this.columns.setDataSource(dataSource);\n            }\n\n            this.refresh();\n        },\n\n        _treeViewDataSource: function() {\n            var that = this;\n\n            return kendo.data.HierarchicalDataSource.create({\n                schema: {\n                    model: {\n                        id: \"uniqueName\",\n                        hasChildren: function(item) {\n                            return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                        }\n                    }\n                },\n                transport: {\n                    read: function(options) {\n                        var promise;\n                        var node;\n                        var kpi;\n\n                        if ($.isEmptyObject(options.data)) {\n                            promise = that.dataSource.schemaDimensions();\n\n                            promise.done(function(data) {\n                                        if (!that.dataSource.cubeBuilder) {\n                                            addKPI(data);\n                                        }\n                                        options.success(data);\n                                    })\n                                    .fail(options.error);\n                        } else {\n                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                            if (node.uniqueName === \"[KPIs]\") {\n                                kpi = true;\n                                promise = that.dataSource.schemaKPIs();\n                                promise.done(function(data) {\n                                            options.success(normalizeKPIs(data));\n                                       })\n                                       .fail(options.error);\n                            } else if (node.type == \"kpi\") {\n                                kpi = true;\n                                options.success(buildKPImeasures(node));\n                            }\n\n                            if (!kpi) {\n                                if (node.type == 2) { //measure\n                                    promise = that.dataSource.schemaMeasures();\n                                } else if (node.dimensionUniqueName) { // hierarchy\n                                    promise = that.dataSource.schemaLevels(options.data.uniqueName);\n                                } else { // dimension\n                                    promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n                                }\n\n                                promise.done(options.success)\n                                        .fail(options.error);\n                            }\n                        }\n                    }\n                }\n            });\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.element, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _layout: function() {\n            $('<div class=\"k-pivotgrid-configurator\"><div class=\"k-pivotgrid-configurator-content\"></div></div>').appendTo(this.element);\n            this.form = this.element.find('.k-pivotgrid-configurator-content');\n\n            this._fields();\n            this._targets();\n        },\n\n        _fields: function() {\n            var container = $('<div class=\"k-pivotgrid-fields k-pivotgrid-configurator-section\"><strong>' + this.options.messages.fieldsLabel + '</strong><div class=\"k-fields-list-wrapper\"></div></div>').appendTo(this.form);\n\n            var template = ({ item }) => {\n                var result = '';\n\n                if (item.type == 2 || item.uniqueName == \"[KPIs]\") {\n                    result += kendo.ui.icon(item.type == 2 ? \"sum\" : \"caret-alt-expand\"/* \"kpi\" */);\n                } else if (item.type && item.type !== \"kpi\") {\n                    result += kendo.ui.icon(\"arrows-axes\");\n                }\n\n                result += `${encode(item.caption || item.name)}`;\n\n                return result;\n            };\n\n            this.treeView = $(\"<div/>\").appendTo(container.find('.k-fields-list-wrapper'))\n                .kendoTreeView({\n                    template: template,\n                    dataTextField: \"caption\",\n                    dragAndDrop: true,\n                    autoBind: false,\n                    dataSource: this._treeViewDataSource(),\n                    dragstart: function(e) {\n                        var dataItem = this.dataItem(e.sourceNode);\n\n                        if ((!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure) || (dataItem.type == 2) || dataItem.uniqueName === \"[KPIs]\") {\n                            e.preventDefault();\n                        }\n                    },\n                    drag: function(e) {\n                        var status = \"cancel\";\n                        var setting = settingTargetFromNode(e.dropTarget);\n\n                        if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n                            status = \"plus\";\n                        }\n\n                        e.setStatusClass(status);\n                    },\n                    drop: function(e) {\n                        e.preventDefault();\n\n                        var setting = settingTargetFromNode(e.dropTarget);\n                        var node = this.dataItem(e.sourceNode);\n                        var idx, length, measures;\n                        var name;\n\n                        if (setting && setting.validate(node)) {\n                            name = node.defaultHierarchy || node.uniqueName;\n\n                            if (node.type === \"kpi\") {\n                                measures = buildKPImeasures(node);\n                                length = measures.length;\n                                name = [];\n\n                                for (idx = 0; idx < length; idx++) {\n                                    name.push(kpiNode(measures[idx]));\n                                }\n                            } else if (node.kpi) {\n                                name = [kpiNode(node)];\n                            }\n\n                            setting.add(name);\n                        }\n                    }\n                 })\n                .data(\"kendoTreeView\");\n        },\n\n        _createTarget: function(element, options) {\n            var template;\n\n            template = ({ name, sortIcon }) => ''\n                + `<div class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${name}\">`\n                    + '<span class=\"k-chip-content\">'\n                        + `<span class=\"k-chip-label\">${name}</span>`\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">'\n                    + getIcons(sortIcon, options)\n                    + '</span>'\n                + '</div>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`\n            }, options));\n        },\n\n        _targets: function() {\n            var container = $('<div class=\"k-pivotgrid-targets\"/>').appendTo(this.form);\n\n            var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.columnsLabel, icon: \"columns\" })).appendTo(container);\n            var columns = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(columnsContainer.find('.k-pivotgrid-target-wrap'));\n\n            var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.rowsLabel, icon: \"rows\" })).appendTo(container);\n            var rows = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(rowsContainer.find('.k-pivotgrid-target-wrap'));\n\n            var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.measuresLabel, icon: \"sum\" })).appendTo(container);\n            var measures = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(measuresContainer.find('.k-pivotgrid-target-wrap'));\n\n            var options = this.options;\n\n            this.columns = this._createTarget(columns, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                connectWith: rows,\n                messages: {\n                    empty: options.messages.columns,\n                    fieldMenu: options.messages.fieldMenu\n                }\n            });\n\n            this.rows = this._createTarget(rows, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                setting: \"rows\",\n                connectWith: columns,\n                messages: {\n                    empty: this.options.messages.rows,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.measures = this._createTarget(measures, {\n                setting: \"measures\",\n                messages: {\n                    empty: options.messages.measures\n                }\n            });\n\n            columns\n                .add(rows)\n                .add(measures)\n                .on(HOVER_EVENTS, \".k-item:not(.k-empty)\", this._toggleHover);\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).closest(\":not(path,svg)\").toggleClass(\"k-hover\", e.type === \"mouseenter\");\n        },\n\n        _resize: function() {\n            var element = this.element;\n            var height = this.options.height;\n\n            if (!height) {\n                return;\n            }\n\n            element.outerHeight(height);\n        },\n\n        refresh: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n                this.treeView.dataSource.fetch();\n            }\n\n            this._catalog = this.dataSource.catalog();\n            this._cube = this.dataSource.cube();\n\n            this._resize();\n\n            this._progress(false);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(\"change\", this._refreshHandler);\n\n            this.form.find(\".k-pivot-setting\").off(ns);\n\n            this.rows.destroy();\n            this.columns.destroy();\n            this.measures.destroy();\n            this.treeView.destroy();\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    function kpiMeasure(name, measure, type) {\n        return {\n            hierarchyUniqueName: name,\n            uniqueName: measure,\n            caption: measure,\n            measure: measure,\n            name: measure,\n            type: type,\n            kpi: true\n        };\n    }\n\n    function buildKPImeasures(node) {\n        var name = node.name;\n        return [\n            kpiMeasure(name, node.value, \"value\"),\n            kpiMeasure(name, node.goal, \"goal\"),\n            kpiMeasure(name, node.status, \"status\"),\n            kpiMeasure(name, node.trend, \"trend\")\n        ];\n    }\n\n    kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n    kendo.cssProperties.registerValues(\"HTMLChip\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(PivotConfigurator);\n\n})(window.kendo.jQuery);\n"]}