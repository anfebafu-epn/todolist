{"version":3,"file":"kendo.upload.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","antiForgeryTokens","logToConsole","rFileExtension","NS","SELECT","UPLOAD","SUCCESS","ERROR","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","VALIDATIONERRORS","INVALIDMAXFILESIZE","INVALIDMINFILESIZE","INVALIDFILEEXTENSION","HOVER_STATE","FOCUS_STATE","PROGRESSBAR_CLASS","PROGRESSBAR_SELECTOR","TABINDEX","headerStatusIconName","Upload","extend","init","element","options","that","this","progressbars","fn","call","multiple","directory","localization","activeInput","wrapper","closest","length","_wrapInput","_activeInput","toggle","enabled","ns","_ns","guid","on","_onParentFormSubmit","bind","_onParentFormReset","_initUploadModule","_toggleDropZone","_onUploadButtonKeydown","_onFileAction","_onClearSelected","_onUploadSelected","_onKeyDown","_focusout","val","_onInputChange","target","events","showFileList","template","files","async","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","allowedExtensions","maxFileSize","minFileSize","dropZone","saveUrl","_module","_supportsFormData","formDataUploadModule","iframeUploadModule","_async","initialFiles","_renderInitialFiles","syncUploadModule","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","trigger","destroy","customDropZone","document","add","forEach","progressbar","fileEntry","onPause","pauseIcon","find","icon","parent","onResume","playIcon","upload","onSaveSelected","getFiles","filesData","allFiles","listItems","i","data","j","push","clearAllFiles","each","index","file","_removeFileByDomElement","removeAllFiles","removeFileByUid","uid","_removeFileByUid","clearFileByUid","shouldSendRemoveRequest","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","input","clone","insertAfter","prefix","hide","removeAttr","e","preventDefault","addClass","removeClass","_adjustFocusState","focusedItem","toFocus","_arrowKeyNavigation","key","kendoKeys","keys","DOWN","stopPropagation","first","next","UP","prev","RIGHT","LEFT","_preventFocusRemove","_asyncCommandKeyNavigation","eventArgs","_retryClicked","ESC","_checkAllComplete","SPACEBAR","ENTER","is","chunkSize","concurrent","finish","show","metaData","prepareChunk","onRetry","_commandKeyNavigation","hasValidationErrors","_filesContainValidationErrors","headers","DELETE","TAB","commandKeys","keyCode","indexOf","assignGuidToFiles","_inputFiles","_isAsyncNonBatch","validateFiles","onSelect","last","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","concat","resolve","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","dt","originalEvent","dataTransfer","droppedFiles","stopEvent","directoryDrop","webkitGetAsEntry","entry","getAllFileInfo","splice","hasErrors","batch","idx","currentFile","_enqueueFile","fileNames","_supportsRemove","_fileAction","_prepareTemplateData","templateData","totalSize","size","_createProgressbarWapper","_createFileIconWrapper","fileTypeIcon","iconClass","_progressbarInit","kendoProgressBar","animation","showStatus","_prepareDefaultSingleFileEntryTemplate","fileSize","getTotalFilesSizeMessage","fileGroup","getFileGroup","extension","errors","isError","invalidClass","fileDetails","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","isProgressbar","fileUid","fileList","progressbarSelector","appendTo","angular","elements","value","_removeFileEntry","_hideActionButtons","fileElement","actionKey","skipClear","firstActionButton","iconsNameDictionary","hasOwnProperty","_clearFileAction","firstActionIcon","append","_renderAction","_fileState","stateKey","currentState","uploading","text","uploaded","failed","iconName","actionText","empty","button","_onFileProgress","percentComplete","progressBar","prepend","getFileEntry","_onUploadSuccess","response","xhr","fileInfo","operation","XMLHttpRequest","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","module","responseText","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","totalChunks","Math","round","delay","fadeOut","_showActionButtons","actionsWrapper","uploadButton","clearButton","html","renderButton","themeColor","_showHeaderUploadStatus","isUploading","headerUploadStatus","headerUploadStatusIcon","currentlyUploading","not","currentlyFailed","currentlyPaused","onAbort","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","toLowerCase","test","navigator","_setupDropZone","dropEffect","bindDragEventWrappers","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","_submitRemove","onSuccess","onError","removeField","params","jQuery","ajax","type","dataType","dataFilter","normalizeJSON","url","traditional","success","error","xhrFields","hasLabel","wrap","prependTo","tabindex","inputFiles","prototype","filesContainErrors","relatedInput","getFileName","iframes","_frameId","prepareUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","fileValidation","cleanupFrame","unregisterFrame","body","dataInput","one","onIframeLoad","submit","started","isFileUploadStarted","contents","ex","processResponse","fakeXHR","tryParseJSON","jsonResult","statusText","status","stopFrameSubmit","removeUploadedFile","action","stop","execCommand","grep","position","cancelled","paused","map","join","$input","slashIndex","lastIndexOf","substr","getFileExtension","rawFiles","fileName","rawFile","htmlEncode","matches","match","unique","validationInfo","extensions","ext","substring","parseAllowedExtensions","validateFileExtension","validateFileSize","validationErrors","inArray","toFixed","shouldRemoveFileEntry","textStatus","json","JSON","parse","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","Date","setInterval","clearInterval","sourceElement","fileEntries","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","removeFileEntry","populateFormData","FileReader","postFormData","reader","onload","fileArrayBuffer","_appendBuffer","result","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","FormData","chunk","serializedMetaData","stringify","raiseError","cleanupFileEntry","_resetChunkIndex","uploadComplete","isUploadButtonVisible","loaded","total","abort","chunkIndex","contentType","ceil","uploadUid","_decreaseChunkIndex","methodToInvoke","oldPosition","_getChunker","mozSlice","webkitSlice","plugin"],"sources":["kendo.upload.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.progressbar.js';\nimport './kendo.icons.js';\nimport './kendo.html.button.js';\n\nvar __meta__ = {\n    id: \"upload\",\n    name: \"Upload\",\n    category: \"web\",\n    description: \"The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.\",\n    depends: [\"core\", \"progressbar\", \"icons\", \"html.button\"]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        antiForgeryTokens = kendo.antiForgeryTokens,\n        logToConsole = kendo.logToConsole,\n        rFileExtension = /\\.([^\\.]+)$/,\n        NS = \".kendoUpload\",\n        SELECT = \"select\",\n        UPLOAD = \"upload\",\n        SUCCESS = \"success\",\n        ERROR = \"error\",\n        COMPLETE = \"complete\",\n        CANCEL = \"cancel\",\n        CLEAR = \"clear\",\n        PAUSE = \"pause\",\n        RESUME = \"resume\",\n        PROGRESS = \"progress\",\n        REMOVE = \"remove\",\n        VALIDATIONERRORS = \"validationErrors\",\n        INVALIDMAXFILESIZE = \"invalidMaxFileSize\",\n        INVALIDMINFILESIZE = \"invalidMinFileSize\",\n        INVALIDFILEEXTENSION = \"invalidFileExtension\",\n        PROGRESSHIDEDELAY = 1000,\n        PROGRESSHIDEDURATION = 2000,\n        HOVER_STATE = \"k-hover\",\n        FOCUS_STATE = \"k-focus\",\n        PROGRESSBAR_CLASS = \"k-progressbar\",\n        PROGRESSBAR_SELECTOR = \".\" + PROGRESSBAR_CLASS,\n        PROGRESSBAR_TEMPLATE_SELECTOR = \".k-progress\",\n        TABINDEX = \"tabindex\",\n        WARNINGICON_SELECTOR = `.k-i-exclamation-circle,.k-svg-i-exclamation-circle`;\n\n    var headerStatusIconName = {\n        loading: \"upload\",\n        warning: \"exclamation-circle\",\n        success: \"check\"\n    };\n\n    var Upload = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            that.progressbars = [];\n\n            Widget.fn.init.call(that, element, options);\n\n            that.name = element.name;\n            that.multiple = that.options.multiple;\n            that.directory = that.options.directory;\n            that.localization = that.options.localization;\n\n            var activeInput = that.element;\n            that.wrapper = activeInput.closest(\".k-upload\");\n            if (that.wrapper.length === 0) {\n                that.wrapper = that._wrapInput(activeInput);\n            }\n\n            that._activeInput(activeInput);\n            that.toggle(that.options.enabled);\n\n            var ns = that._ns = NS + \"-\" + kendo.guid();\n            activeInput.closest(\"form\")\n                .on(\"submit\" + ns, that._onParentFormSubmit.bind(that))\n                .on(\"reset\" + ns, that._onParentFormReset.bind(that));\n\n            that._initUploadModule();\n\n            that._toggleDropZone();\n\n            that.wrapper\n                .on(\"keydown\", \".k-upload-button\", that._onUploadButtonKeydown.bind(that))\n                .on(\"click\", \".k-upload-action\", that._onFileAction.bind(that))\n                .on(\"click\", \".k-clear-selected\", that._onClearSelected.bind(that))\n                .on(\"click\", \".k-upload-selected\", that._onUploadSelected.bind(that))\n                .on(\"keydown\", that._onKeyDown.bind(that))\n                .on(\"focusout\", that._focusout.bind(that));\n\n            if (that.element.val()) {\n                that._onInputChange({ target: that.element });\n            }\n        },\n\n        events: [\n            SELECT,\n            UPLOAD,\n            SUCCESS,\n            ERROR,\n            COMPLETE,\n            CANCEL,\n            CLEAR,\n            PROGRESS,\n            REMOVE,\n            PAUSE,\n            RESUME\n        ],\n\n        options: {\n            name: \"Upload\",\n            enabled: true,\n            multiple: true,\n            directory: false,\n            showFileList: true,\n            template: \"\",\n            files: [],\n            async: {\n                autoRetryAfter: 0,\n                bufferChunkSize: 10000000,\n                maxAutoRetries: 1,\n                removeVerb: \"POST\",\n                autoUpload: true,\n                withCredentials: true,\n                accept: \"*/*; q=0.5, application/json\",\n                useArrayBuffer: false\n            },\n            localization: {\n                \"select\": \"Select files...\",\n                \"cancel\": \"Cancel\",\n                \"retry\": \"Retry\",\n                \"remove\": \"Remove\",\n                \"pause\": \"Pause\",\n                \"resume\": \"Resume\",\n                \"clearSelectedFiles\": \"Clear\",\n                \"uploadSelectedFiles\": \"Upload\",\n                \"dropFilesHere\": \"Drop files here to upload\",\n                \"invalidFiles\": \"Invalid file(s). Please check file upload requirements.\",\n                \"statusUploading\": \"uploading\",\n                \"statusUploaded\": \"uploaded\",\n                \"statusWarning\": \"warning\",\n                \"statusFailed\": \"failed\",\n                \"headerStatusUploading\": \"Uploading...\",\n                \"headerStatusPaused\": \"Paused\",\n                \"headerStatusUploaded\": \"Done\",\n                \"uploadSuccess\": \"File(s) uploaded successfully.\",\n                \"uploadFail\": \"File(s) failed to upload.\",\n                \"invalidMaxFileSize\": \"File size too large.\",\n                \"invalidMinFileSize\": \"File size too small.\",\n                \"invalidFileExtension\": \"File type not allowed.\"\n            },\n            validation: {\n                allowedExtensions: [],\n                maxFileSize: 0,\n                minFileSize: 0\n            },\n            dropZone: \"\"\n        },\n\n        _initUploadModule: function() {\n            var that = this,\n                options = that.options;\n\n            if (options.async.saveUrl) {\n                that._module = that._supportsFormData() ?\n                new formDataUploadModule(that) :\n                new iframeUploadModule(that);\n                that._async = true;\n\n                var initialFiles = options.files;\n                if (initialFiles.length > 0) {\n                    that._renderInitialFiles(initialFiles);\n                }\n\n            } else {\n                that._module = new syncUploadModule(that);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                activeInput = that.element;\n\n            $(that.options.dropZone).off(that._ns);\n\n            Widget.fn.setOptions.call(that, options);\n\n            that.multiple = that.options.multiple;\n            that.directory = that.options.directory;\n\n            activeInput.attr(\"multiple\", that._supportsMultiple() ? that.multiple : false);\n            if (that.directory) {\n                activeInput.attr(\"webkitdirectory\", that.directory);\n                activeInput.attr(\"directory\", that.directory);\n            }\n            that.toggle(that.options.enabled);\n\n            that._initUploadModule();\n\n            that._toggleDropZone();\n        },\n\n        enable: function(enable) {\n            enable = typeof (enable) === \"undefined\" ? true : enable;\n            this.toggle(enable);\n        },\n\n        disable: function() {\n            this.toggle(false);\n        },\n\n        toggle: function(enable) {\n            enable = typeof (enable) === \"undefined\" ? enable : !enable;\n            this.wrapper.toggleClass(\"k-disabled\", enable);\n            this.element.prop(\"disabled\", enable);\n        },\n\n        focus: function() {\n            this.element.trigger(\"focus\");\n        },\n\n        destroy: function() {\n            var that = this;\n            var customDropZone = $(that.options.dropZone);\n\n            $(document)\n                .add($(\".k-dropzone\", that.wrapper))\n                .add(that.wrapper.closest(\"form\"))\n                .off(that._ns);\n\n            if (customDropZone.length > 0) {\n                customDropZone.off(that._ns);\n            }\n\n            $(that.element).off(NS);\n\n            if (that.progressbars) {\n                that.progressbars.forEach(progressbar => {\n                    progressbar.destroy();\n                });\n            }\n            Widget.fn.destroy.call(that);\n        },\n        pause: function(fileEntry) {\n            this._module.onPause({ target: $(fileEntry, this.wrapper) });\n\n            var pauseIcon = fileEntry.find(\".k-i-pause-sm,.k-svg-i-pause-sm\");\n            kendo.ui.icon(pauseIcon, { icon: \"play-sm\" });\n            pauseIcon.attr(\"title\", this.localization.resume);\n            $(pauseIcon).parent().attr(\"aria-label\", this.localization.resume);\n        },\n        resume: function(fileEntry) {\n            this._module.onResume({ target: $(fileEntry, this.wrapper) });\n\n            var playIcon = fileEntry.find(\".k-i-play-sm,.k-svg-i-play-sm\");\n            kendo.ui.icon(playIcon, { icon: \"pause-sm\" });\n            playIcon.attr(\"title\", this.localization.pause);\n            $(playIcon).parent().attr(\"aria-label\", this.localization.pause);\n        },\n        upload: function() {\n            var that = this;\n\n            that._module.onSaveSelected();\n        },\n\n        getFiles: function() {\n            var that = this;\n            var filesData;\n            var allFiles = [];\n            var listItems = that.wrapper.find(\".k-file\");\n\n            for (var i = 0; i < listItems.length; i++) {\n                filesData = $(listItems[i]).data(\"fileNames\");\n\n                if (filesData) {\n                    for (var j = 0; j < filesData.length; j++) {\n                        allFiles.push(filesData[j]);\n                    }\n                }\n            }\n\n            return allFiles;\n        },\n\n        clearAllFiles: function() {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n\n            files.each(function(index, file) {\n                that._removeFileByDomElement(file, false);\n            });\n        },\n\n        removeAllFiles: function() {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n\n            files.each(function(index, file) {\n                that._removeFileByDomElement(file, true);\n            });\n        },\n\n        removeFileByUid: function(uid) {\n            this._removeFileByUid(uid, true);\n        },\n\n        clearFileByUid: function(uid) {\n            this._removeFileByUid(uid, false);\n        },\n\n        _removeFileByUid: function(uid, shouldSendRemoveRequest) {\n            var that = this;\n            var fileEntry;\n\n            if (typeof uid !== 'string') { return; }\n\n            fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n\n            if (fileEntry.length > 0) {\n                that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n            }\n        },\n\n        clearFile: function(callback) {\n            this._removeFile(callback, false);\n        },\n\n        removeFile: function(callback) {\n            this._removeFile(callback, true);\n        },\n\n        _removeFile: function(callback, shouldSendRemoveRequest) {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n            var fileData;\n\n            if (typeof callback === \"function\") {\n                files.each(function(index, file) {\n                    fileData = $(file).data(\"fileNames\");\n\n                    if (callback(fileData)) {\n                        that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                    }\n                });\n            }\n        },\n\n        _removeFileByDomElement: function(fileEntry, shouldSendRemoveRequest) {\n            var that = this;\n            var fileData = {\n                target: $(fileEntry, that.wrapper)\n            };\n            var allFiles;\n\n            if (that.options.async.saveUrl) {\n                if ($(fileEntry).hasClass(\"k-file-progress\")) {\n                    that._module.onCancel(fileData);\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n\n                allFiles = $(\".k-file\", that.wrapper);\n\n                if (allFiles.length === 0) {\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            } else {\n                that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n            }\n        },\n\n        _addInput: function(sourceInput) {\n            //check if source input is a DOM element. Required for some unit tests\n            if (!sourceInput[0].nodeType) {\n                return;\n            }\n\n            var that = this,\n                input = sourceInput.clone().val(\"\");\n\n            input\n                .insertAfter(that.element)\n                .data(\"kendo\" + that.options.prefix + that.options.name, that);\n\n            $(that.element)\n                .hide()\n                .attr(TABINDEX, \"-1\")\n                .removeAttr(\"id\")\n                .off(NS);\n\n            that._activeInput(input);\n            that.element.trigger(\"focus\");\n        },\n\n        _activeInput: function(input) {\n            var that = this,\n                wrapper = that.wrapper;\n\n            that.element = input;\n\n            if (that.directory) {\n                input.attr(\"webkitdirectory\", that.directory);\n                input.attr(\"directory\", that.directory);\n            }\n\n            input\n                .attr(\"multiple\", that._supportsMultiple() ? that.multiple : false)\n                .attr(\"autocomplete\", \"off\")\n                .on(\"click\" + NS, function(e) {\n                    if (wrapper.hasClass(\"k-disabled\")) {\n                        e.preventDefault();\n                    }\n                })\n                .on(\"focus\" + NS, function() {\n                    $(this).parent().addClass(FOCUS_STATE);\n                })\n                .on(\"blur\" + NS, function() {\n                    $(this).parent().removeClass(FOCUS_STATE);\n                })\n                .on(\"change\" + NS, that._onInputChange.bind(that));\n        },\n\n        _adjustFocusState: function(focusedItem, toFocus) {\n            focusedItem.removeClass(FOCUS_STATE);\n            focusedItem.attr(TABINDEX, -1);\n            toFocus.addClass(FOCUS_STATE);\n            toFocus.attr(TABINDEX, 0);\n        },\n\n        _arrowKeyNavigation: function(e, key, focusedItem) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                toFocus;\n\n            if (key === kendoKeys.DOWN) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                toFocus = that.wrapper.find(\".k-upload-files .k-file\").first();\n\n                if (focusedItem.length > 0) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        focusedItem = focusedItem.closest(\".k-file\");\n                    }\n\n                    toFocus = focusedItem.next();\n                }\n\n                that._adjustFocusState(focusedItem, toFocus);\n\n                if (!toFocus || toFocus.length === 0) {\n                    toFocus = that.wrapper.find(\".k-clear-selected\");\n                }\n            } else if (key === kendoKeys.UP) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                toFocus = that.wrapper.find(\".k-upload-files .k-file:last\");\n\n                if (focusedItem.length > 0) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        focusedItem = focusedItem.closest(\".k-file\");\n                    }\n\n                    toFocus = focusedItem.prev();\n                }\n\n                that._adjustFocusState(focusedItem, toFocus);\n            } else if (key === kendoKeys.RIGHT) {\n                if (focusedItem.hasClass(\"k-upload-action\")) {\n                    toFocus = focusedItem.next(\".k-upload-action\");\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = focusedItem.parent().find(\".k-upload-action:first\");\n                    }\n                } else if (focusedItem.length > 0) {\n                    toFocus = focusedItem.find(\".k-upload-action:first\");\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    toFocus.addClass(FOCUS_STATE);\n                }\n            } else if (key === kendoKeys.LEFT) {\n                if (focusedItem.hasClass(\"k-upload-action\")) {\n                    toFocus = focusedItem.prev(\".k-upload-action\");\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = focusedItem.parent().find(\".k-upload-action:last\");\n                    }\n                } else if (focusedItem.length > 0) {\n                    toFocus = focusedItem.find(\".k-upload-action:last\");\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    toFocus.addClass(FOCUS_STATE);\n                }\n            }\n\n            if ((!toFocus || toFocus.length === 0) && (key === kendoKeys.UP || key === kendoKeys.DOWN)) {\n                toFocus = that.element;\n            }\n\n            if (toFocus && toFocus.length > 0) {\n                that._preventFocusRemove = true;\n                toFocus.trigger(\"focus\");\n            }\n        },\n\n        _asyncCommandKeyNavigation: function(key, focusedItem, eventArgs) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                fileEntry = $(focusedItem, that.wrapper);\n\n            that._retryClicked = false;\n\n            if (key === kendoKeys.ESC && focusedItem.find(\".k-i-cancel,.k-svg-i-cancel\").length > 0) {\n                that.trigger(CANCEL, eventArgs);\n                that._module.onCancel({ target: fileEntry });\n                that._checkAllComplete();\n                that._updateHeaderUploadStatus();\n                that._preventFocusRemove = true;\n                that.element.trigger(\"focus\");\n            } else if (key === kendoKeys.SPACEBAR) {\n                if (focusedItem.find(\".k-i-pause-sm,.k-svg-i-pause-sm\").length > 0) {\n                    that.trigger(PAUSE, eventArgs);\n                    that.pause(focusedItem);\n                    that._updateHeaderUploadStatus();\n                } else if (focusedItem.find(\".k-i-play-sm,.k-svg-i-play-sm\").length > 0) {\n                    that.trigger(RESUME, eventArgs);\n                    that.resume(focusedItem);\n                }\n            } else if (key === kendoKeys.ENTER && !focusedItem.is(\".k-file-progress, .k-file-success, .k-file-invalid\")) {\n                if (that.options.async.chunkSize && !that.options.async.concurrent && $('.k-file-progress', that.wrapper).length > 0) {\n                    return;\n                }\n\n                $(WARNINGICON_SELECTOR, focusedItem).remove();\n                $(PROGRESSBAR_SELECTOR, focusedItem).finish().show();\n\n                if (!that._module.metaData[fileEntry.data(\"uid\")]) {\n                    that._module.prepareChunk(fileEntry);\n                }\n\n                that._module.onRetry({ target: fileEntry });\n                that._retryClicked = true;\n            }\n        },\n\n        _commandKeyNavigation: function(key, focusedItem) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                files = focusedItem.data(\"fileNames\"),\n                hasValidationErrors = that._filesContainValidationErrors(files),\n                eventArgs = {\n                    files: files,\n                    headers: {}\n                };\n\n            if (key === kendoKeys.DELETE) {\n                if (!that.trigger(REMOVE, eventArgs)) {\n                    that._module.onRemove({ target: $(focusedItem, that.wrapper) }, eventArgs, !hasValidationErrors);\n                    that._preventFocusRemove = true;\n                    that.element.trigger(\"focus\");\n                }\n            } else if (key === kendoKeys.TAB) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n            } else if (!!that.options.async.saveUrl) {\n                that._asyncCommandKeyNavigation(key, focusedItem, eventArgs);\n            }\n        },\n\n        _focusout: function() {\n            var focusedItem = this.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE);\n\n            if (!this._preventFocusRemove) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n            } else {\n                this._preventFocusRemove = false;\n            }\n        },\n\n        _onKeyDown: function(e) {\n            var that = this,\n                focusedItem = that.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE + \",\" + \".k-upload-action.\" + FOCUS_STATE),\n                kendoKeys = kendo.keys,\n                commandKeys = [kendoKeys.DELETE, kendoKeys.ESC, kendoKeys.ENTER, kendoKeys.SPACEBAR, kendoKeys.TAB],\n                key = e.keyCode;\n\n            if (key === kendoKeys.DOWN || key === kendoKeys.UP || key === kendoKeys.LEFT || key === kendoKeys.RIGHT) {\n                that._arrowKeyNavigation(e, key, focusedItem);\n            } else if (focusedItem.length > 0 && focusedItem.hasClass(\"k-file\") && commandKeys.indexOf(key) > -1 && !that.wrapper.hasClass(\"k-disabled\")) {\n                if (key === kendoKeys.SPACEBAR) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n\n                that._commandKeyNavigation(key, focusedItem);\n            }\n        },\n\n        _onInputChange: function(e) {\n            var that = this;\n            var input = $(e.target);\n            var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n\n            validateFiles(files, that.options.validation);\n\n            var prevented = that.trigger(SELECT, { files: files });\n            if (prevented) {\n                that._addInput(input);\n                input.remove();\n            } else {\n                that._module.onSelect({ target: input }, files);\n            }\n        },\n\n        _onUploadButtonKeydown: function(e) {\n            var key = e.keyCode,\n                kendoKeys = kendo.keys;\n\n            if (key === kendoKeys.ENTER || key === kendoKeys.SPACEBAR) {\n                this.wrapper.find(\".k-upload-button-wrap input\").last().trigger(\"click\");\n            }\n        },\n\n        _readDirectory: function(item) {\n            var deferred = new $.Deferred();\n            var dirReader = item.createReader();\n            var allFolderFiles = [];\n\n            var readEntries = function() {\n                dirReader.readEntries(function(entries) {\n                    if (!entries.length) {\n                        deferred.resolve(allFolderFiles);\n                    } else {\n                        allFolderFiles = allFolderFiles.concat(entries);\n                        readEntries();\n                    }\n                }, deferred.reject);\n            };\n\n            readEntries();\n\n             return deferred.promise();\n        },\n\n        _readFile: function(item) {\n            var that = this;\n            var fullpath = item.fullPath;\n\n            item.file(function(file) {\n                    file.relativePath = fullpath.slice(1);\n                    that.droppedFolderFiles.push(file);\n                    that.droppedFolderCounter --;\n                    if (that.droppedFolderCounter === 0) {\n                        setTimeout(function() {\n                            if (that.droppedFolderCounter === 0) {\n                                if (that.droppedFolderFiles.length) {\n                                    that._proceedDroppedItems(that.droppedFolderFiles);\n                                    that.droppedFolderFiles = [];\n                                }\n                            }\n                        },0);\n                    }\n            }, function() {\n                logToConsole(\"File error.\");\n            });\n        },\n\n        _traverseFileTree: function(item, skipCounter) {\n            var that = this;\n            if (!skipCounter) {\n                that.droppedFolderCounter--;\n            }\n\n            this._readDirectory(item).then(function(items) {\n                that.droppedFolderCounter += items.length;\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].isFile) {\n                        that._readFile(items[i]);\n                    } else if (items[i].isDirectory) {\n                        that._traverseFileTree(items[i]);\n                    }\n                }\n            });\n        },\n\n        _onDrop: function(e) {\n            var dt = e.originalEvent.dataTransfer;\n            var that = this;\n            var droppedFiles = dt.files;\n            var length;\n\n            stopEvent(e);\n           if (that.options.directoryDrop && dt.items) {\n                length = dt.items.length;\n                that.droppedFolderCounter = 0;\n                that.droppedFolderFiles = [];\n\n                for (var i = 0; i < length; i++) {\n                    if (dt.items[i].webkitGetAsEntry) {\n                        var entry = dt.items[i].webkitGetAsEntry();\n\n                        if (entry.isDirectory) {\n                            that._traverseFileTree(entry, true);\n                        } else if (entry.isFile) {\n                            that.droppedFolderFiles.push(dt.files[i]);\n                        }\n                    } else {\n                         that._proceedDroppedItems(droppedFiles);\n                    }\n                }\n           } else {\n               that._proceedDroppedItems(droppedFiles);\n           }\n        },\n\n        _proceedDroppedItems: function(droppedFiles) {\n            var that = this;\n            var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n\n              if (droppedFiles.length > 0 && !that.wrapper.hasClass(\"k-disabled\")) {\n                if (!that.multiple && files.length > 1) {\n                    files.splice(1, files.length - 1);\n                }\n\n                validateFiles(files, that.options.validation);\n\n                var prevented = that.trigger(SELECT, { files: files });\n                if (!prevented) {\n                    that._module.onSelect({ target: $(\".k-dropzone\", that.wrapper) }, files);\n                }\n            }\n        },\n\n        _filesContainValidationErrors: function(files) {\n            var hasErrors = false;\n\n            $(files).each(function(index, file) {\n                if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                    hasErrors = true;\n                    return false;\n                }\n            });\n\n            return hasErrors;\n        },\n\n        _isAsyncNonBatch: function() {\n            return (this._async && !this.options.async.batch) || false;\n        },\n\n        _renderInitialFiles: function(files) {\n            var that = this;\n            var idx = 0;\n            files = assignGuidToFiles(files, true);\n\n            for (idx = 0; idx < files.length; idx++) {\n                var currentFile = files[idx];\n\n                var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                fileEntry.addClass(\"k-file-success\").data(\"files\", [files[idx]]);\n\n                if (that._supportsRemove()) {\n                    that._fileAction(fileEntry, REMOVE);\n                }\n            }\n        },\n\n        _prepareTemplateData: function(name, data) {\n            var filesData = data.fileNames,\n                templateData = {},\n                totalSize = 0,\n                idx = 0;\n\n            for (idx = 0; idx < filesData.length; idx++) {\n                totalSize += filesData[idx].size;\n            }\n\n            templateData.name = name;\n            templateData.size = totalSize;\n            templateData.files = data.fileNames;\n\n            return templateData;\n        },\n\n        _createProgressbarWapper: function() {\n            return \"<div class='\" + PROGRESSBAR_CLASS + \" k-hidden'></div>\";\n        },\n\n        _createFileIconWrapper: function(fileTypeIcon) {\n            return \"<span class='k-file-icon-wrapper'>\" +\n                kendo.ui.icon({ icon: fileTypeIcon, iconClass: \"k-file-icon\", size: \"xxlarge\" }) +\n                \"<span class='k-file-state'></span>\" +\n                \"</span>\";\n        },\n\n        _progressbarInit: function(wrapper) {\n            let progressbar = wrapper.kendoProgressBar({\n                animation: false,\n                showStatus: false\n            }).data(\"kendoProgressBar\");\n            this.progressbars.push(progressbar);\n        },\n\n        _prepareDefaultSingleFileEntryTemplate: function(data) {\n            var that = this;\n            var file = data.fileNames[0];\n            var fileSize = getTotalFilesSizeMessage(data.fileNames);\n            var fileGroup = kendo.getFileGroup(file.extension, true);\n            var errors = file[VALIDATIONERRORS];\n            var isError = errors && errors.length > 0;\n            var invalidClass = isError ? \" k-file-invalid k-file-error\" : \"\";\n            var fileDetails = isError ?\n                    \"<span class='k-file-validation-message' aria-live='polite'>\" + that.localization[errors[0]] + \"</span>\" :\n                    \"<span class='k-file-size'>\" + fileSize + \"</span>\";\n            var template = \"\";\n\n            template += \"<li class='k-file\" + invalidClass + \"'>\" +\n                this._createProgressbarWapper() +\n                this._createFileIconWrapper(fileGroup) +\n                \"<span class='k-file-info'>\" +\n                    \"<span class='k-file-name' title='\" + file.name + \"'>\" + file.name + \"</span>\" +\n                    fileDetails +\n                \"</span>\";\n\n            template += \"<span class='k-upload-actions'></span>\";\n\n            return $(template);\n        },\n\n        _prepareDefaultMultipleFileEntriesTemplate: function(data) {\n            var that = this;\n            var files = data.fileNames;\n            var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n            var totalFileSize = getTotalFilesSizeMessage(files);\n            var template = \"\";\n            var i, currentFile;\n            var invalidClass = filesHaveValidationErrors ? \" k-file-invalid k-file-error\" : \"\";\n\n            template += \"<li class='k-file\" + invalidClass + \"'>\" +\n                this._createProgressbarWapper() +\n                this._createFileIconWrapper(\"files\");\n\n            files.sort(function(a, b) {\n                if (a[VALIDATIONERRORS]) { return -1; }\n\n                if (b[VALIDATIONERRORS]) { return 1; }\n\n                return 0;\n            });\n\n            template += \"<span class='k-multiple-files-wrapper'>\";\n            for (i = 0; i < files.length; i++) {\n                currentFile = files[i];\n                var fileSize = getTotalFilesSizeMessage([currentFile]);\n\n                template += \"<span class='k-file-name-size-wrapper'>\";\n                if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                    template += \"<span class='k-file-name k-file-name-invalid' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                } else {\n                    template += \"<span class='k-file-name' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                }\n                template += \"<span class='k-file-size'>\" + fileSize + \"</span></span>\";\n            }\n\n            if (filesHaveValidationErrors) {\n                template += \"<span class='k-file-validation-message' aria-live='polite'>\" + that.localization.invalidFiles + \"</span>\";\n            } else {\n                template += \"<span class='k-file-summary'>Total: \" + files.length + \" files, \" + totalFileSize + \"</span>\";\n            }\n\n            template += \"</span><span class='k-upload-actions'></span>\";\n\n            return $(template);\n        },\n\n        _enqueueFile: function(name, data) {\n            var that = this;\n            var existingFileEntries;\n            var fileEntry;\n            var fileUid = data.fileNames[0].uid;\n            var fileList = $(\".k-upload-files\", that.wrapper);\n            var options = that.options;\n            var template = options.template;\n            var templateData;\n            var removeEventArgs;\n            var progressbarSelector = template ? PROGRESSBAR_TEMPLATE_SELECTOR : PROGRESSBAR_SELECTOR;\n            var progressbar;\n            var isProgressbar;\n\n            if (fileList.length === 0) {\n                fileList = $(\"<ul class='k-upload-files k-reset'></ul>\").appendTo(that.wrapper);\n                if (!that.options.showFileList) {\n                    fileList.hide();\n                }\n\n                that.wrapper.removeClass(\"k-upload-empty\");\n            }\n\n            existingFileEntries = $(\".k-file\", fileList);\n\n            if (!template) {\n                if (data.fileNames.length === 1) {\n                    fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                } else {\n                    fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                }\n            } else {\n                templateData = that._prepareTemplateData(name, data);\n                template = kendo.template(template);\n\n                fileEntry = $(\"<li class='k-file'>\" + template(templateData) + \"</li>\");\n                fileEntry.find(\".k-upload-action\").addClass(\"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n\n                that.angular(\"compile\", function() {\n                    return {\n                        elements: fileEntry,\n                        data: [ templateData ]\n                    };\n                });\n            }\n\n            progressbar = $(progressbarSelector, fileEntry[0]);\n            isProgressbar = progressbar.length > 0;\n\n            if (isProgressbar) {\n                that._progressbarInit(progressbar);\n            }\n\n            fileEntry\n                .attr(kendo.attr(\"uid\"), fileUid)\n                .appendTo(fileList)\n                .data(data);\n\n            if (!that._async && isProgressbar) {\n                progressbar.data(\"kendoProgressBar\").value(100);\n            }\n\n            if (!that.multiple && existingFileEntries.length > 0) {\n                removeEventArgs = {\n                    files: existingFileEntries.data(\"fileNames\"),\n                    headers: {}\n                };\n                if (!that.trigger(REMOVE, removeEventArgs)) {\n                    that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                }\n            }\n\n            return fileEntry;\n        },\n\n        _removeFileEntry: function(fileEntry) {\n            var that = this;\n            var fileList = fileEntry.closest(\".k-upload-files\");\n            var allFiles, allCompletedFiles, allInvalidFiles;\n\n            fileEntry.remove();\n            allFiles = $(\".k-file\", fileList);\n            allCompletedFiles = $(\".k-file-success, .k-file-error\", fileList);\n\n            if (allCompletedFiles.length === allFiles.length) {\n                this._hideActionButtons();\n            }\n\n            if (allFiles.length === 0) {\n                fileList.remove();\n                that.wrapper.addClass(\"k-upload-empty\");\n                that._hideHeaderUploadstatus();\n            } else {\n                that._updateHeaderUploadStatus();\n            }\n        },\n\n        _fileAction: function(fileElement, actionKey, skipClear) {\n            var iconsNameDictionary = { remove: \"x\", cancel: \"cancel\", retry: \"arrow-rotate-cw-small\", pause: \"pause-sm\" };\n            var firstActionButton;\n\n            if (!iconsNameDictionary.hasOwnProperty(actionKey)) {\n                return;\n            }\n            if (!skipClear) {\n                this._clearFileAction(fileElement);\n            }\n            if (!this.options.template) {\n                if (!skipClear) {\n                    fileElement.find(\".k-upload-action\").remove();\n                }\n                fileElement.find(\".k-upload-actions\").append(\n                    this._renderAction(iconsNameDictionary[actionKey], this.localization[actionKey], actionKey == \"retry\" ? \"k-i-retry\" : \"\")\n                );\n            } else {\n                firstActionButton = fileElement.find(\".k-upload-action\").first();\n                if (!firstActionButton.find(\".k-icon,.k-svg-icon\").length) {\n                    let firstActionIcon = kendo.ui.icon($(`<span title=\"${this.localization[actionKey]}\" aria-label=\"${this.localization[actionKey]}\"></span>`), {\n                        icon: iconsNameDictionary[actionKey],\n                        iconClass: \"k-button-icon\" + (actionKey == \"retry\" ? \" k-i-retry\" : \"\")\n                    });\n                    firstActionButton\n                        .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                        .append(firstActionIcon)\n                        .show();\n                } else if (firstActionButton.next(\".k-upload-action\").length) {\n                    let firstActionIcon = kendo.ui.icon($(`<span title=\"${this.localization[actionKey]}\" aria-label=\"${this.localization[actionKey]}\"></span>`), {\n                        icon: iconsNameDictionary[actionKey],\n                        iconClass: \"k-button-icon\" + (actionKey == \"retry\" ? \" k-i-retry\" : \"\")\n                    });\n                    firstActionButton.next(\".k-upload-action\")\n                        .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                        .append(firstActionIcon)\n                        .show();\n                }\n            }\n        },\n\n        _fileState: function(fileEntry, stateKey) {\n            var localization = this.localization,\n                states = {\n                    uploading: {\n                        text: localization.statusUploading\n                    },\n                    uploaded: {\n                        text: localization.statusUploaded\n                    },\n                    failed: {\n                        text: localization.statusFailed\n                    }\n                },\n                currentState = states[stateKey];\n\n            if (currentState) {\n                $(\"span.k-file-state\", fileEntry).text(currentState.text);\n            }\n        },\n\n        _renderAction: function(iconName, actionText, iconClass) {\n            if (iconName !== \"\") {\n                return $(\n                \"<button type='button' class='k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-upload-action' aria-hidden='true' aria-label='\" + actionText + \"' tabindex='-1'>\" +\n                    kendo.ui.icon($(`<span title=\"${actionText}\"></span>`), { icon: iconName, iconClass: \"k-button-icon\" + (iconClass ? ` ${iconClass}` : \"\") }) +\n                \"</button>\"\n                ).on(\"focus\", function() { $(this).addClass(FOCUS_STATE); })\n                 .on(\"blur\", function() { $(this).removeClass(FOCUS_STATE); });\n            }\n            else {\n                return $(\n                \"<button type='button' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'>\" +\n                    '<span class=\"k-button-text\">' +\n                        actionText +\n                    '</span>' +\n                \"</button>\"\n                );\n            }\n        },\n\n        _clearFileAction: function(fileElement) {\n            $(\".k-upload-action\", fileElement).empty().hide();\n        },\n\n        _onFileAction: function(e) {\n            var that = this;\n            if (!that.wrapper.hasClass(\"k-disabled\")) {\n                var button = $(e.target).closest(\".k-upload-action\");\n                var icon = button.find(\".k-icon,.k-svg-icon\");\n                var fileEntry = button.closest(\".k-file\");\n                var files = fileEntry.data(\"fileNames\");\n                var hasValidationErrors = that._filesContainValidationErrors(files);\n                var eventArgs = {\n                    files: files,\n                    headers: {}\n                };\n\n                that._retryClicked = false;\n\n                if (icon.is(\".k-i-x,.k-svg-i-x\")) {\n                    if (!that.trigger(REMOVE, eventArgs)) {\n                        that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        that.element.trigger(\"focus\");\n                    }\n                } else if (icon.is(\".k-i-cancel,.k-svg-i-cancel\")) {\n                    that.trigger(CANCEL, eventArgs);\n                    that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                    that._checkAllComplete();\n                    that._updateHeaderUploadStatus();\n                    that.element.trigger(\"focus\");\n                } else if (icon.is(\".k-i-pause-sm,.k-svg-i-pause-sm\")) {\n                    that.trigger(PAUSE, eventArgs);\n                    that.pause(fileEntry);\n                    that._updateHeaderUploadStatus();\n                } else if (icon.is(\".k-i-play-sm,.k-svg-i-play-sm\")) {\n                    that.trigger(RESUME, eventArgs);\n                    that.resume(fileEntry);\n                } else if (icon.hasClass(\"k-i-retry\")) {\n                    $(\".k-i-exclamation-circle\", fileEntry).remove();\n                    $(PROGRESSBAR_SELECTOR, fileEntry).finish().show();\n                    that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                    that._retryClicked = true;\n                }\n\n                fileEntry.addClass(FOCUS_STATE);\n            }\n\n            return false;\n        },\n\n        _onUploadSelected: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            if (!wrapper.hasClass(\"k-disabled\")) {\n                this._module.onSaveSelected();\n            }\n\n            return false;\n        },\n\n        _onClearSelected: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            var clearEventArgs = { };\n            if (!wrapper.hasClass(\"k-disabled\") && !that.trigger(CLEAR, clearEventArgs)) {\n                that.clearAllFiles();\n            }\n\n            return false;\n        },\n\n        _onFileProgress: function(e, percentComplete) {\n            var progressPct;\n            var progressBar = $(PROGRESSBAR_SELECTOR, e.target).data(\"kendoProgressBar\");\n\n            if (percentComplete > 100) {\n                percentComplete = 100;\n            }\n\n            $(PROGRESSBAR_SELECTOR, e.target).removeClass('k-hidden');\n\n            if (!this.options.template) {\n                progressPct = $(\".k-upload-pct\", e.target);\n\n                if (progressPct.length === 0) {\n                    $(\".k-upload-actions\", e.target).prepend(\"<span class='k-upload-pct'></span>\");\n                }\n\n                if (percentComplete !== 100) {\n                    $(\".k-upload-pct\", e.target).text(percentComplete + \"%\");\n                } else {\n                    $(\".k-upload-pct\", e.target).remove();\n                }\n            }\n\n            if (progressBar) {\n                progressBar.value(percentComplete);\n            }\n\n            this.trigger(PROGRESS, {\n                files: getFileEntry(e).data(\"fileNames\"),\n                percentComplete: percentComplete\n            });\n        },\n\n        _onUploadSuccess: function(e, response, xhr) {\n            var that = this;\n            var fileEntry = getFileEntry(e);\n            var files = fileEntry.data(\"fileNames\");\n            var fileInfo = fileEntry.find('.k-file-summary');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            var prevented = that.trigger(SUCCESS, {\n                files: fileEntry.data(\"fileNames\"),\n                response: response,\n                operation: \"upload\",\n                XMLHttpRequest: xhr\n            });\n\n            if (prevented) {\n                that._setUploadErrorState(fileEntry);\n            } else {\n                that._fileState(fileEntry, \"uploaded\");\n                fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message\" aria-live=\"polite\">' + files.length + ' ' + that.localization.uploadSuccess + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message\" aria-live=\"polite\">' + that.localization.uploadSuccess + '</span>');\n                }\n\n                that._updateHeaderUploadStatus();\n\n                if (that._supportsRemove()) {\n                    that._fileAction(fileEntry, REMOVE);\n                } else {\n                    that._clearFileAction(fileEntry);\n                }\n            }\n\n            that._hideUploadProgress(fileEntry);\n\n            that._checkAllComplete();\n        },\n\n        _onUploadError: function(e, xhr) {\n            var that = this;\n            var module = that._module;\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n\n            that._setUploadErrorState(fileEntry);\n\n            that.trigger(ERROR, {\n                operation: \"upload\",\n                files: fileEntry.data(\"fileNames\"),\n                XMLHttpRequest: xhr\n            });\n\n            logToConsole(\"Server response: \" + xhr.responseText);\n\n            if (!that.options.async.chunkSize) {\n                that._hideUploadProgress(fileEntry);\n            } else {\n                if (module._decreasePosition) {\n                    module._decreasePosition(fileUid);\n                }\n            }\n\n           that._checkAllComplete();\n\n            if (this.options.async.autoRetryAfter) {\n               this._autoRetryAfter(fileEntry);\n            }\n        },\n        _autoRetryAfter: function(fileEntry) {\n            var that = this;\n            var retries = this._module.retries;\n\n            if (!retries) {\n                return;\n            }\n\n            if (!retries[fileEntry.data(\"uid\")]) {\n                retries[fileEntry.data(\"uid\")] = 1;\n            }\n\n            if (retries[fileEntry.data(\"uid\")] <= this.options.async.maxAutoRetries) {\n                retries[fileEntry.data(\"uid\")]++;\n                setTimeout(function() {\n                    that._module.performUpload(fileEntry);\n                },this.options.async.autoRetryAfter);\n            }\n        },\n        _setUploadErrorState: function(fileEntry) {\n            var that = this,\n                uploadPercentage,\n                files = fileEntry.data(\"fileNames\"),\n                fileInfo = fileEntry.find('.k-file-summary'),\n                fileSize = fileEntry.find('.k-file-size');\n\n            that._fileState(fileEntry, \"failed\");\n            fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n\n            if (fileInfo.length > 0) {\n                fileInfo.addClass('k-hidden')\n                    .after('<span class=\"k-file-validation-message\" aria-live=\"polite\">' + files.length + ' ' + that.localization.uploadFail + '</span>');\n            } else if (fileSize.length > 0) {\n                fileSize.addClass('k-hidden')\n                    .after('<span class=\"k-file-validation-message\" aria-live=\"polite\">' + that.localization.uploadFail + '</span>');\n            }\n\n            that._updateUploadProgress(fileEntry);\n\n            uploadPercentage = $('.k-upload-pct', fileEntry);\n\n            if (uploadPercentage.length > 0) {\n                uploadPercentage.remove();\n            }\n\n            this._updateHeaderUploadStatus();\n            this._fileAction(fileEntry, \"retry\");\n            this._fileAction(fileEntry, REMOVE, true);\n\n            if (that._retryClicked) {\n                fileEntry.trigger(\"focus\");\n            }\n        },\n\n       _updateUploadProgress: function(fileEntry) {\n            var that = this;\n            var progressbar = $( PROGRESSBAR_SELECTOR, fileEntry);\n            var isProgressbar = progressbar.length > 0;\n\n            if (!that.options.async.chunkSize && isProgressbar) {\n                progressbar.data(\"kendoProgressBar\").value(100);\n            } else {\n                var fileUid = fileEntry.data(\"uid\");\n                if (that._module.metaData) {\n                    var fileMetaData = that._module.metaData[fileUid];\n\n                    if (fileMetaData) {\n                        var percentComplete = fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n\n                        that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                    }\n                }\n            }\n        },\n\n        _hideUploadProgress: function(fileEntry) {\n            $(PROGRESSBAR_SELECTOR, fileEntry)\n                .delay(PROGRESSHIDEDELAY)\n                .fadeOut(PROGRESSHIDEDURATION, function() {\n                    $(this).data(\"kendoProgressBar\").value(0);\n                });\n        },\n\n        _showActionButtons: function() {\n            var that = this;\n            var actionsWrapper = $(\".k-actions\", that.wrapper);\n            var uploadButton = $(\".k-upload-selected\", that.wrapper);\n            var clearButton = $(\".k-clear-selected\", that.wrapper);\n\n            if (uploadButton.length === 0) {\n                uploadButton = $(kendo.html.renderButton(`<button class='k-upload-selected'>${this.localization.uploadSelectedFiles}</button>`, {\n                        icon: 'upload',\n                        themeColor: 'primary'\n                    }));\n\n                clearButton = $(kendo.html.renderButton(`<button class='k-clear-selected'>${this.localization.clearSelectedFiles}</button>`, {\n                    icon: 'x'\n                }));\n\n            }\n\n            if (!actionsWrapper.length) {\n                actionsWrapper = $(\"<div />\")\n                    .addClass(\"k-actions\")\n                    .append(uploadButton, clearButton);\n            }\n\n\n            this.wrapper.append(actionsWrapper);\n        },\n\n        _hideActionButtons: function() {\n            $(\".k-actions\", this.wrapper).remove();\n        },\n\n        _showHeaderUploadStatus: function(isUploading) {\n            var that = this;\n            var localization = that.localization;\n            var dropZone = $(\".k-dropzone\", that.wrapper);\n            var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n\n            if (headerUploadStatus.length !== 0) {\n                headerUploadStatus.remove();\n            }\n\n            $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n\n            headerUploadStatus = '<span class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></span>';\n\n            if (isUploading) {\n                headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                kendo.ui.icon(headerUploadStatus.find(\".k-icon,.k-svg-icon\"), { icon: headerStatusIconName.loading });\n            } else {\n                headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                kendo.ui.icon(headerUploadStatus.find(\".k-icon,.k-svg-icon\"), { icon: headerStatusIconName.warning });\n            }\n\n            if (dropZone.length > 0) {\n                dropZone.append(headerUploadStatus);\n            } else {\n                $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n            }\n        },\n\n        _updateHeaderUploadStatus: function() {\n            var that = this;\n            var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n            var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error');\n            var currentlyFailed = $('.k-file-error', that.wrapper);\n            var currentlyPaused = $('.k-file', that.wrapper).find(\".k-i-play-sm,.k-svg-i-play-sm\");\n            var headerUploadStatusIcon;\n\n            if (currentlyPaused.length &&\n            (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                headerUploadStatusIcon = $('.k-icon,.k-svg-icon', headerUploadStatus).removeClass();\n\n                if (headerUploadStatusIcon.length) {\n                    kendo.ui.icon(headerUploadStatusIcon, { icon: \"pause-sm\" });\n\n                    headerUploadStatus.html(headerUploadStatusIcon)\n                        .append(that.localization.headerStatusPaused);\n                }\n            } else if (currentlyUploading.length === 0 || currentlyFailed.length > 0) {\n                headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                headerUploadStatusIcon = $('.k-icon,.k-svg-icon', headerUploadStatus).removeClass();\n\n                if (headerUploadStatusIcon.length) {\n\n                    kendo.ui.icon(headerUploadStatusIcon, { icon: currentlyFailed.length !== 0 ? headerStatusIconName.warning : headerStatusIconName.success });\n\n                    headerUploadStatus.html(headerUploadStatusIcon)\n                        .append(that.localization.headerStatusUploaded);\n                }\n            }\n        },\n\n        _hideHeaderUploadstatus: function() {\n            var that = this,\n                dropZone = that.options.dropZone;\n\n            $('.k-upload-status-total', this.wrapper).remove();\n\n            if (dropZone === \"\") {\n                $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n            }\n        },\n\n        _onParentFormSubmit: function() {\n            var upload = this,\n                element = upload.element;\n\n            if (typeof this._module.onAbort !== 'undefined') {\n                this._module.onAbort();\n            }\n\n            if (!element.value) {\n                var input = $(element);\n\n                // Prevent submitting an empty input\n                input.attr(\"disabled\", \"disabled\");\n\n                window.setTimeout(function() {\n                    // Restore the input so the Upload remains functional\n                    // in case the user cancels the form submit\n                    input.prop(\"disabled\", false);\n                }, 0);\n            }\n        },\n\n        _onParentFormReset: function() {\n            $(\".k-upload-files\", this.wrapper).remove();\n        },\n\n        _supportsFormData: function() {\n            return typeof(FormData) != \"undefined\";\n        },\n\n        _supportsMultiple: function() {\n            var windows = this._userAgent().indexOf(\"Windows\") > -1;\n\n            return !kendo.support.browser.opera &&\n                   !(kendo.support.browser.safari && windows);\n        },\n\n        _supportsDrop: function() {\n            var userAgent = this._userAgent().toLowerCase();\n            var isChrome = /chrome/.test(userAgent);\n            var isSafari = !isChrome && /safari/.test(userAgent);\n            var isWindowsSafari = isSafari && /windows/.test(userAgent);\n\n            return !isWindowsSafari && this._supportsFormData() && (this.options.async.saveUrl);\n        },\n\n        _userAgent: function() {\n            return navigator.userAgent;\n        },\n\n        _setupDropZone: function() {\n            var that = this;\n\n            var ns = that._ns;\n            var dropZone = $(\".k-dropzone\", that.wrapper)\n\n                .on(\"dragenter\" + ns, stopEvent)\n                .on(\"dragover\" + ns, function(e) {\n                    if (e.originalEvent) {\n                        e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                    }\n                    e.preventDefault();\n                 })\n                .on(\"drop\" + ns, that._onDrop.bind(that));\n\n            if (!dropZone.find(\".k-dropzone-hint\").length) {\n                dropZone.append($(\"<span class='k-dropzone-hint'>\" + that.localization.dropFilesHere + \"</span>\"));\n            }\n\n            bindDragEventWrappers(dropZone, ns,\n                function() {\n                    if (!dropZone.closest('.k-upload').hasClass(\"k-disabled\")) {\n                        dropZone.addClass(HOVER_STATE);\n                    }\n                },\n                function() { dropZone.removeClass(HOVER_STATE); });\n\n            that._bindDocumentDragEventWrappers(dropZone);\n        },\n\n        _setupCustomDropZone: function() {\n            var that = this;\n            var dropZone = $(that.options.dropZone);\n\n            if (!that.wrapper.find(\".k-dropzone-hint\").length) {\n                $(\".k-dropzone\", that.wrapper)\n                    .append($(\"<span class='k-dropzone-hint k-hidden'>\" + that.localization.dropFilesHere + \"</span>\"));\n            } else {\n                // Dropzone hint in upload should be hidden if customDropZone is used\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n            }\n\n            var ns = that._ns;\n            dropZone.on(\"dragenter\" + ns, stopEvent)\n                    .on(\"dragover\" + ns, function(e) {\n                        if (e.originalEvent) {\n                            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                        }\n                        e.preventDefault();\n                    })\n                    .on(\"drop\" + ns, that._onDrop.bind(that));\n\n            bindDragEventWrappers(dropZone, ns,\n                function(e) {\n                    if (!that.wrapper.hasClass(\"k-disabled\")) {\n                        dropZone.removeClass(HOVER_STATE);\n                        dropZone.addClass(HOVER_STATE);\n                        $(e.target).addClass(HOVER_STATE);\n                    }\n                },\n                function() {\n                    dropZone.removeClass(HOVER_STATE);\n                }\n            );\n\n            that._bindDocumentDragEventWrappers(dropZone);\n        },\n\n        _bindDocumentDragEventWrappers: function(dropZone) {\n            var that = this;\n            var ns = that._ns;\n\n            bindDragEventWrappers($(document), ns,\n                function() {\n                    if (!that.wrapper.hasClass(\"k-disabled\")) {\n                        dropZone.addClass(\"k-dropzone-active\");\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                        dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                    }\n                },\n                function() {\n                    dropZone.removeClass(\"k-dropzone-active\");\n                    dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                }\n            );\n        },\n\n        _toggleDropZone: function() {\n            var that = this,\n                dropZone = that.options.dropZone;\n\n            if (!that._supportsDrop()) {\n                return;\n            }\n\n            $(dropZone).off(that._ns);\n            $(\".k-dropzone\", that.wrapper).off(that._ns);\n\n            if (dropZone !== \"\") {\n                that._setupCustomDropZone();\n            } else {\n                that._setupDropZone();\n            }\n        },\n\n        _supportsRemove: function() {\n            return !!this.options.async.removeUrl;\n        },\n\n        _submitRemove: function(fileNames, eventArgs, onSuccess, onError) {\n            var upload = this,\n                removeField = upload.options.async.removeField || \"fileNames\",\n                params = $.extend(eventArgs.data, antiForgeryTokens());\n\n            params[removeField] = fileNames;\n\n            jQuery.ajax({\n                  type: this.options.async.removeVerb,\n                  dataType: \"json\",\n                  dataFilter: normalizeJSON,\n                  url: this.options.async.removeUrl,\n                  traditional: true,\n                  data: params,\n                  headers: eventArgs.headers,\n                  success: onSuccess,\n                  error: onError,\n                  xhrFields: {\n                    withCredentials: this.options.async.withCredentials\n                  }\n            });\n        },\n\n        _wrapInput: function(input) {\n            var that = this;\n            var options = that.options;\n            var hasLabel = !!input.attr(\"id\") && $(\"[for='\" + input.attr(\"id\") + \"']\").length > 0;\n            var uploadButton = $(\"<div class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button' tabindex='0' role='button'><span class='k-button-text'></span></div>\");\n\n            uploadButton.find('.k-button-text').text(that.localization.select);\n\n            input.wrap(\"<div class='k-upload' role='application'><div class='k-dropzone k-upload-dropzone'><div class='k-upload-button-wrap'></div></div></div>\");\n            uploadButton.prependTo(input.parent());\n\n            if (!options.async.saveUrl) {\n                input.closest(\".k-upload\").addClass(\"k-upload-sync\");\n            } else {\n                input.closest(\".k-upload\").addClass(\"k-upload-async\");\n            }\n\n            input.closest(\".k-upload\").addClass(\"k-upload-empty\");\n\n            if (!hasLabel && !input.attr(\"aria-label\")) {\n                input.attr(\"aria-label\", that.localization.select);\n            }\n\n            input.attr({\n                tabindex: -1,\n                \"aria-hidden\": true\n            });\n\n            return input.closest(\".k-upload\");\n        },\n\n        _checkAllComplete: function() {\n            if ($(\".k-file.k-file-progress\", this.wrapper).length === 0) {\n                this.trigger(COMPLETE);\n            }\n        },\n\n        _inputFiles: function(sourceInput) {\n            return inputFiles(sourceInput);\n        }\n    });\n\n    // Synchronous upload module\n    var syncUploadModule = function(upload) {\n        this.name = \"syncUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.element\n            .closest(\"form\")\n                .attr(\"enctype\", \"multipart/form-data\")\n                .attr(\"encoding\", \"multipart/form-data\");\n    };\n\n    syncUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var sourceInput = $(e.target);\n            var filesContainErrors = upload._filesContainValidationErrors(files);\n\n            upload._addInput(sourceInput);\n\n            var fileData = { \"fileNames\": files };\n\n            if (filesContainErrors) {\n                sourceInput.remove();\n            } else {\n                fileData.relatedInput = sourceInput;\n            }\n\n            var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n            if (filesContainErrors) {\n                upload._hideUploadProgress(file);\n            }\n\n            upload._fileAction(file, REMOVE);\n        },\n\n        onRemove: function(e) {\n            var fileEntry = getFileEntry(e);\n            var relatedInput = fileEntry.data(\"relatedInput\");\n\n            if (relatedInput) {\n                relatedInput.remove();\n            }\n\n            this.upload._removeFileEntry(fileEntry);\n        }\n    };\n\n    var iframeUploadModule = function(upload) {\n        this.name = \"iframeUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.iframes = [];\n    };\n\n    Upload._frameId = 0;\n\n    iframeUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var sourceInput = $(e.target);\n            var hasValidationErrors = upload._filesContainValidationErrors(files);\n\n            var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n\n            if (upload.options.async.autoUpload) {\n                if (!hasValidationErrors) {\n                    this.performUpload(fileEntry);\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n                    upload._showHeaderUploadStatus(false);\n                }\n            } else {\n                upload._fileAction(fileEntry, REMOVE);\n\n                if (!hasValidationErrors) {\n                    upload._showActionButtons();\n                } else {\n                    upload._updateHeaderUploadStatus();\n                }\n            }\n\n            if (hasValidationErrors) {\n                upload._hideUploadProgress(fileEntry);\n            }\n        },\n\n        prepareUpload: function(sourceInput, files, hasValidationErrors) {\n            var upload = this.upload;\n            var activeInput = $(upload.element);\n            var name = upload.options.async.saveField || sourceInput.attr(\"name\");\n            var fileEntry, fileData, iframe, form;\n\n            upload._addInput(sourceInput);\n            sourceInput.attr(\"name\", name);\n\n            if (!hasValidationErrors) {\n                iframe = this.createFrame(upload.name + \"_\" + Upload._frameId++);\n                this.registerFrame(iframe);\n\n                form = this.createForm(upload.options.async.saveUrl, iframe.attr(\"name\"))\n                    .append(activeInput);\n\n                fileData = { \"frame\": iframe, \"relatedInput\": activeInput, \"fileNames\": files };\n            } else {\n                sourceInput.remove();\n\n                fileData = { \"fileNames\": files };\n            }\n\n            fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n            if (iframe) {\n                iframe.data({ \"form\": form, \"file\": fileEntry });\n            }\n\n            return fileEntry;\n        },\n\n        performUpload: function(fileEntry) {\n            var e = { files: fileEntry.data(\"fileNames\") };\n            var iframe = fileEntry.data(\"frame\");\n            var upload = this.upload;\n            var fileValidation = fileEntry.find('.k-file-validation-message');\n            var fileInfo = fileEntry.find('.k-file-summary');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            if (!upload.trigger(UPLOAD, e)) {\n                upload._hideActionButtons();\n                upload._showHeaderUploadStatus(true);\n\n                iframe.appendTo(document.body);\n\n                var form = iframe.data(\"form\")\n                    .attr(\"action\", upload.options.async.saveUrl)\n                    .appendTo(document.body);\n\n                e.data = $.extend({ }, e.data, antiForgeryTokens());\n                for (var key in e.data) {\n                    var dataInput = form.find(\"input[name='\" + key + \"']\");\n                    if (dataInput.length === 0) {\n                        dataInput = $(\"<input>\", { type: \"hidden\", name: key })\n                            .prependTo(form);\n                    }\n                    dataInput.val(e.data[key]);\n                }\n\n                upload._fileAction(fileEntry, CANCEL);\n                upload._fileState(fileEntry, \"uploading\");\n                $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                if (fileValidation.length > 0) {\n                    fileValidation.remove();\n                }\n\n                if (fileInfo.length > 0) {\n                    fileInfo.removeClass('k-hidden');\n                } else if (fileSize.length > 0) {\n                    fileSize.removeClass('k-hidden');\n                }\n\n                iframe\n                    .one(\"load\", this.onIframeLoad.bind(this));\n\n                form[0].submit();\n            } else {\n                upload._removeFileEntry(iframe.data(\"file\"));\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n            }\n        },\n\n        onSaveSelected: function() {\n            var module = this;\n            var upload = module.upload;\n\n            $(\".k-file\", this.element).each(function() {\n                var fileEntry = $(this);\n                var started = isFileUploadStarted(fileEntry);\n                var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                if (!started && !hasValidationErrors) {\n                    module.performUpload(fileEntry);\n                }\n            });\n        },\n\n        onIframeLoad: function(e) {\n            var iframe = $(e.target),\n                responseText;\n\n            try {\n                responseText = iframe.contents().text();\n            } catch (ex) {\n                responseText = \"Error trying to get server response: \" + ex;\n            }\n\n            this.processResponse(iframe, responseText);\n        },\n\n        processResponse: function(iframe, responseText) {\n            var fileEntry = iframe.data(\"file\"),\n                module = this,\n                fakeXHR = {\n                    responseText: responseText\n                };\n            tryParseJSON(responseText,\n                function(jsonResult) {\n                    $.extend(fakeXHR, { statusText: \"OK\", status: \"200\" });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                },\n                function() {\n                    $.extend(fakeXHR, { statusText: \"error\", status: \"500\" });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                }\n            );\n        },\n\n        onCancel: function(e) {\n            var iframe = $(e.target).data(\"frame\");\n\n            this.stopFrameSubmit(iframe);\n            this.cleanupFrame(iframe);\n            this.unregisterFrame(iframe);\n            this.upload._removeFileEntry(iframe.data(\"file\"));\n        },\n\n        onRetry: function(e) {\n            var fileEntry = getFileEntry(e);\n            this.performUpload(fileEntry);\n        },\n\n        onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n            var module = this;\n            var upload = module.upload;\n            var fileEntry = getFileEntry(e);\n            var iframe = fileEntry.data(\"frame\");\n\n            if (iframe) {\n                module.unregisterFrame(iframe);\n                upload._removeFileEntry(fileEntry);\n                module.cleanupFrame(iframe);\n            } else {\n                if (fileEntry.hasClass(\"k-file-success\")) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    upload._removeFileEntry(fileEntry);\n                }\n            }\n        },\n\n        onAbort: function() {\n            var element = this.element,\n                module = this;\n\n            $.each(this.iframes, function() {\n                $(\"input\", this.data(\"form\")).appendTo(element);\n                module.stopFrameSubmit(this[0]);\n                this.data(\"form\").remove();\n                this.remove();\n            });\n\n            this.iframes = [];\n        },\n\n        createFrame: function(id) {\n            return $(\n                \"<iframe\" +\n                \" name='\" + id + \"'\" +\n                \" id='\" + id + \"'\" +\n                \" style='display:none;' />\"\n            );\n        },\n\n        createForm: function(action, target) {\n            return $(\n                \"<form enctype='multipart/form-data' method='POST'\" +\n                \" action='\" + action + \"'\" +\n                \" target='\" + target + \"'\" +\n                \"/>\");\n        },\n\n        stopFrameSubmit: function(frame) {\n            if (typeof(frame.stop) != \"undefined\") {\n                frame.stop();\n            } else if (frame.document) {\n                frame.document.execCommand(\"Stop\");\n            }\n        },\n\n        registerFrame: function(frame) {\n            this.iframes.push(frame);\n        },\n\n        unregisterFrame: function(frame) {\n            this.iframes = $.grep(this.iframes, function(value) {\n                return value.attr(\"name\") != frame.attr(\"name\");\n            });\n        },\n\n        cleanupFrame: function(frame) {\n            var form = frame.data(\"form\");\n\n            frame.data(\"file\").data(\"frame\", null);\n\n            setTimeout(function() {\n                form.remove();\n                frame.remove();\n            }, 1);\n        }\n    };\n\n    // FormData upload module\n    var formDataUploadModule = function(upload) {\n        this.name = \"formDataUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.position = {};\n        this.metaData = {};\n        this.cancelled = {};\n        this.resume = {};\n        this.paused = {};\n        this.retries = {};\n    };\n\n    formDataUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var module = this;\n            var sourceElement = $(e.target);\n            var fileEntries = this.prepareUpload(sourceElement, files);\n            var hasValidationErrors;\n            var prev;\n\n            $.each(fileEntries, function(index) {\n                hasValidationErrors = upload._filesContainValidationErrors($(this.data(\"fileNames\")));\n\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        if (upload.options.async.chunkSize) {\n                            module.prepareChunk(this);\n                            prev = this.prev();\n\n                            if (upload.options.async.concurrent || (index === 0 && !prev.length) ||\n                             (index === 0 && prev.hasClass(\"k-file-success\"))) {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            module.performUpload(this);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(this, REMOVE);\n\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                        this.addClass(\"k-toupload\");\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(this);\n                }\n            });\n        },\n\n        prepareUpload: function(sourceElement, files) {\n            var fileEntries = this.enqueueFiles(files);\n\n            if (sourceElement.is(\"input\")) {\n                $.each(fileEntries, function() {\n                    $(this).data(\"relatedInput\", sourceElement);\n                });\n                sourceElement.data(\"relatedFileEntries\", fileEntries);\n                this.upload._addInput(sourceElement);\n            }\n\n            return fileEntries;\n        },\n\n        enqueueFiles: function(files) {\n            var upload = this.upload;\n            var name;\n            var i;\n            var filesLength = files.length;\n            var currentFile;\n            var fileEntry;\n            var fileEntries = [];\n\n            if (upload.options.async.batch === true) {\n                name = $.map(files, function(file) { return file.name; }).join(\", \");\n\n                if (upload.directory || upload.options.directoryDrop) {\n                    $(files).each(function() {\n                        if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                            this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                        }\n                    });\n                }\n\n                fileEntry = upload._enqueueFile(name, { fileNames: files });\n                fileEntry.data(\"files\", files);\n\n                fileEntries.push(fileEntry);\n            } else {\n                for (i = 0; i < filesLength; i++) {\n                    currentFile = files[i];\n                    name = currentFile.name;\n                    if (upload.directory || upload.options.directoryDrop) {\n                        if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                            currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                        }\n                    }\n                    fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                    fileEntry.data(\"files\", [currentFile]);\n\n                    fileEntries.push(fileEntry);\n                }\n            }\n\n            return fileEntries;\n        },\n\n        performUpload: function(fileEntry) {\n            var upload = this.upload,\n                formData = this.createFormData(),\n                xhr = this.createXHR(),\n                e = {\n                    files: fileEntry.data(\"fileNames\"),\n                    XMLHttpRequest: xhr\n                },\n                files;\n            var fileValidation = fileEntry.find('.k-file-validation-message');\n            var fileInfo = fileEntry.find('.k-file-summary');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            if (!upload.trigger(UPLOAD, e)) {\n                if (fileEntry.find(\".k-i-cancel,.k-svg-i-cancel\").length === 0) {\n                    if (upload.options.async.chunkSize) {\n                        upload._fileAction(fileEntry, PAUSE);\n                    }\n                    upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                }\n\n                if (!upload.wrapper.find(\".k-toupload\").length) {\n                    upload._hideActionButtons();\n                }\n\n                upload._showHeaderUploadStatus(true);\n\n                if (e.formData) {\n                    formData = e.formData;\n                } else {\n                    e.data = $.extend({ }, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        formData.append(key, e.data[key]);\n                    }\n\n                    files = fileEntry.data(\"files\");\n                    if (files) {\n                        this.populateFormData(formData, files);\n                    }\n                }\n\n                upload._fileState(fileEntry, \"uploading\");\n                $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                if (fileValidation.length > 0) {\n                    fileValidation.remove();\n                }\n\n                if (fileInfo.length > 0) {\n                    fileInfo.removeClass('k-hidden');\n                } else if (fileSize.length > 0) {\n                    fileSize.removeClass('k-hidden');\n                }\n\n                if (upload.options.async.useArrayBuffer && window.FileReader) {\n                    this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                } else {\n                    this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                }\n            } else {\n                this.removeFileEntry(fileEntry);\n            }\n        },\n\n        _readFile: function(saveUrl, formData, fileEntry, xhr) {\n            var that = this;\n            var upload = that.upload;\n            var file = fileEntry.data(\"files\")[0];\n\n            var reader = new FileReader();\n            reader.onload = function(e) {\n                try {\n                    if (!that.fileArrayBuffer) {\n                        that.fileArrayBuffer = e.target.result;\n                    } else {\n                        that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                    }\n                } catch (err) {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                    return;\n                }\n\n                if (that.position[file.uid] > file.size) {\n                    that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                    that.fileArrayBuffer = null;\n                } else {\n                    that._readFile(saveUrl, formData, fileEntry, xhr);\n                }\n            };\n            reader.onerror = function() {\n                upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n            };\n            reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n        },\n\n        _appendBuffer: function(buffer1, buffer2) {\n            var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n\n            tmp.set(new Uint8Array(buffer1), 0);\n            tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n\n            return tmp.buffer;\n        },\n\n        onSaveSelected: function() {\n            var module = this;\n            var upload = module.upload;\n\n            $(\".k-toupload\", this.element).filter(function() {\n                var fileEntry = $(this);\n                var started = isFileUploadStarted(fileEntry);\n                var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                return !started && !hasValidationErrors;\n            }).each(function(index) {\n                var fileEntry = $(this);\n                var prevEntry = fileEntry.prev();\n\n                fileEntry.removeClass(\"k-toupload\");\n                if (upload.options.async.chunkSize) {\n                    module.prepareChunk(fileEntry);\n\n                    if (upload.options.async.concurrent || (index === 0 && !prevEntry.length) ||\n                        (index === 0 && prevEntry.hasClass(\"k-file-success\") || prevEntry.hasClass(\"k-file-error:not(k-file-invalid)\"))) {\n                        module.performUpload(fileEntry);\n                    }\n                } else {\n                    module.performUpload(fileEntry);\n                }\n            });\n        },\n\n        onCancel: function(e) {\n            var fileEntry = getFileEntry(e);\n\n            if (this.upload.options.async.chunkSize) {\n                this.cancelled[fileEntry.data(\"uid\")] = true;\n            }\n            this.stopUploadRequest(fileEntry);\n            this.removeFileEntry(fileEntry);\n        },\n\n        onPause: function(e) {\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileUid] = async.maxAutoRetries + 1;\n                this.paused[fileUid] = true;\n                this.resume[fileUid] = false;\n            }\n        },\n\n        onResume: function(e) {\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n\n            if (this.upload.options.async.chunkSize) {\n                delete this.paused[fileUid];\n                this.resume[fileUid] = true;\n                this.retries[fileEntry.data(\"uid\")] = 1;\n                this._increaseChunkIndex(fileUid);\n                this.performUpload(fileEntry);\n            }\n        },\n\n        onRetry: function(e) {\n            var fileEntry = getFileEntry(e);\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n                delete this.paused[fileEntry.data(\"uid\")];\n            }\n\n            this.performUpload(fileEntry);\n        },\n\n        onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n            var module = this;\n            var upload = module.upload;\n            var fileEntry = getFileEntry(e);\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n            }\n\n            if (fileEntry.hasClass(\"k-file-success\")) {\n                removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n            } else {\n                module.removeFileEntry(fileEntry);\n            }\n        },\n\n        createXHR: function() {\n            return new XMLHttpRequest();\n        },\n\n        postFormData: function(url, data, fileEntry, xhr) {\n            var module = this;\n\n            fileEntry.data(\"request\", xhr);\n\n            xhr.addEventListener(\"load\", function(e) {\n                module.onRequestSuccess.call(module, e, fileEntry);\n            }, false);\n\n            xhr.addEventListener(ERROR, function(e) {\n                module.onRequestError.call(module, e, fileEntry);\n            }, false);\n\n            xhr.upload.addEventListener(\"progress\", function(e) {\n                module.onRequestProgress.call(module, e, fileEntry);\n            }, false);\n\n            xhr.open(\"POST\", url, true);\n            xhr.withCredentials = this.upload.options.async.withCredentials;\n\n            var accept = this.upload.options.async.accept;\n            if (accept) {\n                xhr.setRequestHeader(\"Accept\", accept);\n            }\n\n            xhr.send(data);\n        },\n\n        createFormData: function() {\n            return new FormData();\n        },\n\n        populateFormData: function(data, files) {\n            var chunk;\n            var i;\n            var length = files.length;\n            var uid;\n            var upload = this.upload;\n\n            if (upload.options.async.chunkSize) {\n                 uid = files[0].uid;\n                 chunk = this._getCurrentChunk(files[0].rawFile, uid);\n\n                data.append(\n                    upload.options.async.saveField || upload.name,\n                    chunk\n                );\n\n                var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                data.append(\"metadata\", serializedMetaData);\n            } else {\n                 for (i = 0; i < length; i++) {\n                    data.append(\n                        upload.options.async.saveField || upload.name,\n                        files[i].rawFile\n                    );\n                 }\n            }\n\n            return data;\n        },\n\n        onRequestSuccess: function(e, fileEntry) {\n            var xhr = e.target,\n                module = this;\n\n            function raiseError() {\n                module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n            }\n\n            function parseSuccess(jsonResult) {\n                var batch = module.upload.options.async.batch;\n                var chunkSize = module.upload.options.async.chunkSize;\n                var concurrent = module.upload.options.async.concurrent;\n                var fileUid = jsonResult.fileUid;\n\n                if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                    return;\n                }\n\n                delete module.retries[fileUid];\n\n                if (chunkSize && !batch && !jsonResult.uploaded) {\n\n                    module._increaseChunkIndex(fileUid);\n                    module.performUpload(fileEntry);\n                } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass(\"k-toupload\")) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module._resetChunkIndex(fileUid);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n\n                        module.performUpload(fileEntry.next());\n                } else {\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                    module.cleanupFileEntry(fileEntry);\n                }\n            }\n\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                tryParseJSON(xhr.responseText,\n                    parseSuccess,\n                    raiseError\n                );\n            } else {\n                raiseError();\n            }\n        },\n\n        onRequestError: function(e, fileEntry) {\n            var xhr = e.target;\n\n            this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n        },\n\n        cleanupFileEntry: function(fileEntry) {\n            var relatedInput = fileEntry.data(\"relatedInput\"),\n                uploadComplete = true;\n\n            if (relatedInput) {\n                $.each(relatedInput.data(\"relatedFileEntries\") || [], function() {\n                    // Exclude removed file entries and self\n                    if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                        uploadComplete = uploadComplete && this.hasClass(\"k-file-success\");\n                    }\n                });\n\n                if (uploadComplete) {\n                    relatedInput.remove();\n                }\n            }\n        },\n\n        removeFileEntry: function(fileEntry) {\n            var chunkSize = this.upload.options.async.chunkSize;\n            var concurrent = this.upload.options.async.concurrent;\n            var isUploadButtonVisible = this.upload.wrapper.find(\".k-upload-selected\").length > 0;\n\n            this.cleanupFileEntry(fileEntry);\n            if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                 if (fileEntry.next().length) {\n                     this.performUpload(fileEntry.next());\n                 }\n            }\n            this.upload._removeFileEntry(fileEntry);\n        },\n\n        onRequestProgress: function(e, fileEntry) {\n            var percentComplete = Math.round(e.loaded * 100 / e.total);\n            var fileUid = fileEntry.data(\"uid\");\n            var fileMetaData;\n\n            if (this.upload.options.async.chunkSize) {\n                fileMetaData = this.metaData[fileUid];\n                percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n            }\n            this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n        },\n\n        stopUploadRequest: function(fileEntry) {\n            if (fileEntry.data(\"request\")) {\n                fileEntry.data(\"request\").abort();\n            }\n        },\n\n        prepareChunk: function(fileEntry) {\n            var file = fileEntry.data(\"files\")[0];\n            var rawFile = file.rawFile;\n            var uid = file.uid;\n            var chunkSize = this.upload.options.async.chunkSize;\n            this.position[uid] = 0;\n\n            this.metaData[uid] = {\n                chunkIndex: 0,\n                contentType: rawFile.type,\n                fileName: rawFile.name,\n                relativePath: file.name,\n                totalFileSize: rawFile.size,\n                totalChunks: Math.ceil(rawFile.size / chunkSize),\n                uploadUid: uid\n            };\n        },\n\n        _decreaseChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex--;\n        },\n\n        _increaseChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex++;\n        },\n\n        _resetChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex = 0;\n        },\n\n        _decreasePosition: function(uid) {\n            this.position[uid] -= this.upload.options.async.chunkSize;\n        },\n\n        _getCurrentChunk: function(file, uid) {\n            var oldPosition = this.position[uid];\n            var methodToInvoke;\n            var async = this.upload.options.async;\n            var chunkSize = async.chunkSize || async.bufferChunkSize;\n\n            if (!this.position[uid]) {\n                this.position[uid] = 0;\n            }\n            this.position[uid] += chunkSize;\n\n            if (!!(methodToInvoke = this._getChunker(file))) {\n                return file[methodToInvoke](oldPosition, this.position[uid]);\n            } else {\n                return file;\n            }\n        },\n\n        _getChunker: function(file) {\n            if (file.slice) {\n                return \"slice\";\n            } else if (file.mozSlice) {\n                return \"mozSlice\";\n            } else if (file.webkitSlice) {\n                    return \"webkitSlice\";\n            } else {\n                return null;\n            }\n        }\n    };\n\n    // Helper functions\n    function getFileName(input) {\n        return $.map(inputFiles(input), function(file) {\n            return file.name;\n        }).join(\", \");\n    }\n\n    function inputFiles($input) {\n        var input = $input[0];\n\n        if (input.files) {\n            return getAllFileInfo(input.files);\n        } else {\n            return [{\n                name: stripPath(input.value),\n                extension: getFileExtension(input.value),\n                size: null\n            }];\n        }\n    }\n\n    function getAllFileInfo(rawFiles) {\n        return $.map(rawFiles, function(file) {\n            return getFileInfo(file);\n        });\n    }\n\n    function getFileInfo(rawFile) {\n        // Older Firefox versions (before 3.6) use fileName and fileSize\n        var fileName = rawFile.name || rawFile.fileName;\n        return {\n            name: kendo.htmlEncode(fileName),\n            extension: getFileExtension(fileName),\n            size: typeof rawFile.size == \"number\" ? rawFile.size : rawFile.fileSize, //rawFile.size || rawFile.fileSize,\n            rawFile: rawFile\n        };\n    }\n\n    function getFileExtension(fileName) {\n        var matches = fileName.match(rFileExtension);\n        return matches ? matches[0] : \"\";\n    }\n\n    function stripPath(name) {\n        var slashIndex = name.lastIndexOf(\"\\\\\");\n        return (slashIndex != -1) ? name.substr(slashIndex + 1) : name;\n    }\n\n    function assignGuidToFiles(files, unique) {\n        var uid = kendo.guid();\n\n        return $.map(files, function(file) {\n            file.uid = unique ? kendo.guid() : uid;\n\n            return file;\n        });\n    }\n\n    function validateFiles(files, validationInfo) {\n        var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n        var maxFileSize = validationInfo.maxFileSize;\n        var minFileSize = validationInfo.minFileSize;\n\n        for (var i = 0; i < files.length; i++) {\n            validateFileExtension(files[i], allowedExtensions);\n            validateFileSize(files[i], minFileSize, maxFileSize);\n        }\n    }\n\n    function parseAllowedExtensions(extensions) {\n        var allowedExtensions = $.map(extensions, function(ext) {\n            var parsedExt = (ext.substring(0, 1) === \".\") ? ext : (\".\" + ext);\n            return parsedExt.toLowerCase();\n        });\n\n        return allowedExtensions;\n    }\n\n    function validateFileExtension(file, allowedExtensions) {\n        if (allowedExtensions.length > 0) {\n            if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDFILEEXTENSION);\n                }\n            }\n        }\n    }\n\n    function validateFileSize(file, minFileSize, maxFileSize) {\n        if (minFileSize !== 0 && file.size < minFileSize) {\n            file.validationErrors = file.validationErrors || [];\n            if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                file.validationErrors.push(INVALIDMINFILESIZE);\n            }\n        }\n\n        if (maxFileSize !== 0 && file.size > maxFileSize) {\n            file.validationErrors = file.validationErrors || [];\n            if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                file.validationErrors.push(INVALIDMAXFILESIZE);\n            }\n        }\n    }\n\n    function getTotalFilesSizeMessage(files) {\n        var totalSize = 0;\n\n        if (typeof files[0].size == \"number\") {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size) {\n                    totalSize += files[i].size;\n                }\n            }\n        } else {\n            return \"\";\n        }\n\n        totalSize /= 1024;\n\n        if (totalSize < 1024) {\n            return totalSize.toFixed(2) + \" KB\";\n        } else {\n            return (totalSize / 1024).toFixed(2) + \" MB\";\n        }\n    }\n\n    function shouldRemoveFileEntry(upload) {\n        return !upload.multiple && $(\".k-file\", upload.wrapper).length > 1;\n    }\n\n    function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n        if (!upload._supportsRemove()) {\n            if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                upload._removeFileEntry(fileEntry);\n            }\n\n            return;\n        }\n\n        var files = fileEntry.data(\"fileNames\");\n        var fileNames = $.map(files, function(file) { return file.name; });\n\n        if (shouldSendRemoveRequest === false) {\n            upload._removeFileEntry(fileEntry);\n\n            return;\n        }\n\n        upload._submitRemove(fileNames, eventArgs,\n            function onSuccess(data, textStatus, xhr) {\n                var prevented = upload.trigger(SUCCESS, {\n                    operation: \"remove\",\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n\n                if (!prevented) {\n                    upload._removeFileEntry(fileEntry);\n                }\n            },\n\n            function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n\n                upload.trigger(ERROR, {\n                    operation: \"remove\",\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n\n                logToConsole(\"Server response: \" + xhr.responseText);\n            }\n        );\n    }\n\n    function tryParseJSON(input, onSuccess, onError) {\n        var success = false,\n            json = \"\";\n\n        try {\n            json = JSON.parse(normalizeJSON(input));\n            success = true;\n        } catch (e) {\n            onError();\n        }\n\n        if (success) {\n            onSuccess(json);\n        }\n    }\n\n    function normalizeJSON(input) {\n        if (typeof input === \"undefined\" || input === \"\") {\n            input = \"{}\";\n        }\n\n        return input;\n    }\n\n    function stopEvent(e) {\n        if (e.originalEvent) {\n            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n        }\n        e.stopPropagation(); e.preventDefault();\n    }\n\n    function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n        var hideInterval, lastDrag;\n\n        element\n            .on(\"dragenter\" + namespace, function(e) {\n                onDragEnter(e);\n                lastDrag = new Date();\n\n                if (!hideInterval) {\n                    hideInterval = setInterval(function() {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            })\n            .on(\"dragover\" + namespace, function() {\n                lastDrag = new Date();\n            });\n    }\n\n    function isFileUploadStarted(fileEntry) {\n        return fileEntry.is(\".k-file-progress, .k-file-success, .k-file-error:not(.k-file-invalid)\");\n    }\n\n    function getFileEntry(e) {\n        return $(e.target).closest(\".k-file\");\n    }\n\n    kendo.ui.plugin(Upload);\n})(window.kendo.jQuery);\n"]}