{"version":3,"file":"kendo.treeview.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","TreeView","subGroup","nodeContents","nodeIcon","spriteRe","kendo","window","ui","data","encode","htmlEncode","extend","template","isArray","Array","Widget","HierarchicalDataSource","keys","NS","TEMP_NS","SELECT","CHECK","NAVIGATE","CHANGE","ERROR","CHECKED","INDETERMINATE","DRAGSTART","DRAG","DROP","DRAGEND","DATABOUND","ITEMSLOADED","LOADCOMPLETED","REQUESTEND","CLICK","UNDEFINED","KSTATEHOVER","KTREEVIEW","NODE","TOGGLE_ICON","TOGGLE_ICON_ELM","STRING","ARIA_CHECKED","ARIA_SELECTED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","DISABLED","bindings","text","url","spriteCssClass","imageUrl","isDomElement","o","HTMLElement","nodeType","nodeName","contentChild","filter","node","result","children","length","checkboxes","find","insertAction","indexOffset","nodeData","referenceNode","parentNode","group","closest","parent","is","this","_dataSourceMove","dataSource","model","referenceItem","dataItem","referenceNodeIndex","indexOf","index","_insert","updateNodeHtml","wrapper","toggleButton","checkbox","innerWrapper","hasClass","prependTo","remove","removeAttr","appendTo","append","eq","addClass","container","tmp","toLowerCase","nextSibling","nodeValue","trim","test","className","insertBefore","firstChild","appendChild","moveContents","DataBoundWidget","init","element","options","inferred","list","that","hasDataSource","loadOnDemand","prototype","call","_dataSourceUids","_animation","_accessors","_templates","root","_wrapper","_group","_applyCssClasses","_tabindex","attr","_dataSource","_attachEvents","_dragging","_syncHtmlAndDataSource","autoBind","_progress","fetch","_attemptLoadCompleted","bind","checkChildren","updateIndeterminate","_ariaId","format","guid","notify","clickableItems","MOUSEENTER","_clickHandler","_click","on","e","preventDefault","removeClass","_toggleButtonClick","_keydown","_keypress","_focus","_blur","_mousedown","_checkboxChange","_retryRequest","target","focus","i","item","uid","itemCheckbox","view","uidAttr","expandedAttr","checkboxesEnabled","items","expanded","hasChildren","checked","prop","next","animationOptions","animation","hasCollapseAnimation","collapse","expand","reverse","effects","hide","enabled","dragAndDrop","dragging","widget","HierarchicalDragAndDrop","reorderable","$angular","autoScroll","allowedContainers","itemSelector","hintText","_hintText","contains","source","destination","dropHintContainer","itemFromTarget","content","first","last","dropPositionFrom","dropHint","prevAll","dragstart","trigger","sourceNode","drag","originalEvent","dropTarget","pageY","pageX","statusClass","status","setStatusClass","setStatus","drop","navigationTarget","_tempPreventNavigation","destinationNode","valid","setValid","state","dropPosition","position","dragend","triggerDragEnd","current","insertAfter","destroy","ev","off","templates","dragClue","treeview","fieldAccessor","_fieldAccessor","encoded","_checkboxes","setAttributes","attributes","hasOwnProperty","wrapperCssClass","firstLevel","cssClass","groupLength","textClass","isLink","selected","checkboxClass","toggleButtonClass","toggleIcon","icon","support","isRtl","groupAttributes","groupCssClass","r","renderItems","itemContent","itemElement","tag","textAttr","toJSON","loading","messages","retry","requestFailed","setDataSource","one","_bindDataSource","_refreshHandler","refresh","_errorHandler","_error","_loadCompletedHandler","_loadCompleted","_requestEndHandler","_dsRequestEnd","_loadedNodes","setTimeout","type","_loadCompletedFired","concat","nodes","_unbindDataSource","unbind","silentRead","fields","field","create","recursiveRead","_initChildren","events","duration","dataTextField","size","textField","fieldName","fieldBindings","count","getter","map","x","d","Math","min","level","setOptions","fn","_trigger","eventName","_setChecked","datasource","value","isFunction","_setCheckedValue","_setIndeterminate","siblings","all","indeterminate","subnodes","_bubbleIndeterminate","skipDownward","_skip","set","isChecked","_preventChange","currentTarget","toggle","browser","msie","edge","_clickTarget","_focusable","select","clickTarget","touch","_nextVisible","scrollContainer","containers","offsets","documentElement","document","scrollHeight","clientHeight","push","scrollTop","focusElement","_enabled","skipSelf","wrapperRe","itemRe","_expanded","nextParent","_previousVisible","lastChild","prev","key","keyCode","focused","rtl","RIGHT","LEFT","DOWN","UP","HOME","END","ENTER","SPACEBAR","matchToFocus","focusedNode","get","_match","clearTimeout","_matchTimer","_matchNextByText","startIndex","contents","href","wrap","_getSelectedNode","groupElement","css","_nodes","groupData","each","_updateNodeClasses","defaultTemplate","html","renderCheckBox","rounded","replace","textWrap","_processNodes","callback","getByUid","_dataItem","_insertNode","insertCallback","collapsed","childrenData","updatedGroupLength","nodeHtml","_renderItem","angular","elements","_renderGroup","_updateNodes","nodeWrapper","isCollapsed","context","render","setCheckedState","findByUid","toggleClass","end","_toggle","ns","_appendItems","dataItems","viewItems","rootItems","_refreshChildren","child","empty","_refreshRoot","groupHtml","parentElement","_angularItems","action","bubble","_remove","_loaded","load","retryHtml","replaceWith","loaded","enable","arguments","_current","_updateActiveDescendant","direction","height","kendoStop","kendoAnimate","reset","complete","force","showProgress","loadingText","_objectOrSelf","referenceDataItem","destTreeview","destDataSource","loadPromise","Deferred","resolve","promise","_toObservableData","obj","jQuery","ObservableArray","splice","apply","success","loadModel","inserted","done","max","add","noop","keepData","prevSibling","detach","findByText","getAttribute","expandPath","path","nodeIds","slice","nodeElement","then","proceed","shift","_parentIds","parents","unshift","expandTo","Node","len","cssProperties","registerPrefix","plugin"],"sources":["kendo.treeview.js"],"mappings":"MAAO,wBACA,wCACA,8BACA,mBAEP,IAAIA,SAAW,CACXC,GAAI,WACJC,KAAM,WACNC,SAAU,MACVC,YAAa,wIACbC,QAAS,CAAE,OAAQ,aAAc,SACjCC,SAAU,CAAC,CACPL,GAAI,oBACJC,KAAM,cACNE,YAAa,0BACbC,QAAS,CAAE,4BAKnB,SAAUE,EAAGC,GACT,IA8CIC,EACAC,EAAUC,EAAcC,EACxBC,EAhDAC,EAAQC,OAAOD,MACfE,EAAKF,EAAME,GACXC,EAAOH,EAAMG,KACbC,EAASJ,EAAMK,WACfC,EAASb,EAAEa,OACXC,EAAWP,EAAMO,SACjBC,EAAUC,MAAMD,QAChBE,EAASR,EAAGQ,OACZC,EAAyBR,EAAKQ,uBAC9BC,EAAOZ,EAAMY,KACbC,EAAK,iBACLC,EAAU,qBACVC,EAAS,SACTC,EAAQ,QACRC,EAAW,WAEXC,EAAS,SACTC,EAAQ,QACRC,EAAU,UACVC,EAAgB,gBAEhBC,EAAY,YACZC,EAAO,OACPC,EAAO,OACPC,EAAU,UACVC,EAAY,YACZC,EAAc,cACdC,EAAgB,gBAChBC,EAAa,aACbC,EAAQ,QAERC,EAAY,YACZC,EAAc,UACdC,EAAY,aAEZC,EAAO,UACPC,EAAc,gBACdC,EAAkB,gBAAgBD,aAClCE,EAAS,SACTC,EAAe,eACfC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAY,YACZC,EAAW,aAIXC,EAAW,CACPC,KAAM,gBACNC,IAAK,eACLC,eAAgB,0BAChBC,SAAU,qBAKdC,EAAe,SAASC,GACpB,MAC2B,iBAAhBC,YAA2BD,aAAaC,YAC/CD,GAAkB,iBAANA,GAAiC,IAAfA,EAAEE,iBAAyBF,EAAEG,WAAajB,CAEhF,EAEJ,SAASkB,EAAaC,GAClB,OAAO,SAASC,GACZ,IAAIC,EAASD,EAAKE,SAAS,0BAM3B,OAJKD,EAAOE,SACRF,EAASD,GAGNC,EAAOC,SAASH,EAC3B,CACJ,CAYA,SAASK,EAAWJ,GACf,OAAOA,EAAKK,KAAK,iDACtB,CAEA,SAASC,EAAaC,GAClB,OAAO,SAASC,EAAUC,GAGtB,IACIC,EADAC,GAFJF,EAAgBA,EAAcG,QAAQnC,IAEZoC,SAO1B,OAJIF,EAAME,SAASC,GAAG,QAClBJ,EAAaC,EAAME,UAGhBE,KAAKC,gBAAgBR,EAAUG,EAAOD,GAAY,SAASO,EAAYC,GAC1E,IAAIC,EAAgBJ,KAAKK,SAASX,GAC9BY,EAAqBF,GAAiBV,EAAcI,SAASX,WAAWC,SAAWgB,EAAcN,SAASV,OAASgB,EAAcN,SAASS,QAAQH,GAAiBV,EAAcc,QAErL,OAAOR,KAAKS,QAAQP,EAAWvE,OAAQwE,EAAOG,EAAqBd,EACvE,GACJ,CACJ,CAuBA,SAASkB,GAAezB,GACpB,IAAI0B,EAAU1B,EAAKE,SAAS,OACxBS,EAAQX,EAAKE,SAAS,MACtByB,EAAeD,EAAQrB,KAAK,yBAAyB3B,KACrDkD,EAAW5B,EAAKE,SAAS,wBACzB2B,EAAeH,EAAQxB,SAAS,SAEhCF,EAAK8B,SAAS,gBAIbJ,EAAQvB,SACTuB,EAAU1F,EAAE,WAAW+F,UAAU/B,KAGhC2B,EAAaxB,QAAUQ,EAAMR,OAC9BwB,EAAe3F,EAAE,mCAAmC2C,YAA0BoD,UAAUL,GAChFf,EAAMR,QAAWQ,EAAMT,WAAWC,SAC1CwB,EAAad,SAASmB,SACtBrB,EAAMqB,SACNhC,EAAKiC,WAAWjD,IAGhB4C,EAASzB,QACTnE,EAAE,uCAAuCkG,SAASR,GAASS,OAAOP,GAGjEC,EAAa1B,UACd0B,EAAe7B,EAAKE,SAAS,KAAKkC,GAAG,GAAGC,SAAS,gBAE/BlC,SACd0B,EAAe7F,EAAE,0CAGrB6F,EAAaK,SAASR,GAElBA,EAAQvB,QAvDpB,SAAsBH,EAAMsC,GAGxB,IAFA,IAAIC,EAEGvC,GAAuC,MAA/BA,EAAKH,SAAS2C,eACzBD,EAAMvC,EACNA,EAAOA,EAAKyC,YAEQ,GAAhBF,EAAI3C,WACJ2C,EAAIG,UAAYnG,EAAMoG,KAAKJ,EAAIG,YAG/BpG,EAASsG,KAAKL,EAAIM,WAClBP,EAAUQ,aAAaP,EAAKD,EAAUS,YAEtCT,EAAUU,YAAYT,EAGlC,CAuCYU,CAAavB,EAAQ,GAAGe,YAAaZ,EAAa,KAG9D,CA3FA1F,EAAW2D,EAAa,YACxB1D,EAAe0D,EAAa,uBAC5BzD,EAAW,SAAS2D,GAChB,OAAOA,EAAKE,SAAS,OAAOG,KAAK,yBAAyB3B,IAC9D,EA0BApC,EAAW,WA+DXJ,EAAWK,EAAME,GAAGyG,gBAAgBrG,OAAO,CACvCsG,KAAM,SAASC,EAASC,GACpB,IACIC,EAEAC,EAHAC,EAAOzC,KAEP0C,EAAgBJ,KAAaA,EAAQpC,WAGrClE,EAAQsG,KACRA,EAAU,CAAEpC,WAAYoC,IAGxBA,UAAkBA,EAAQK,cAAgBpF,GAAavB,EAAQsG,EAAQpC,cACvEoC,EAAQK,cAAe,GAG3BzG,EAAO0G,UAAUR,KAAKS,KAAKJ,EAAMJ,EAASC,GAE1CD,EAAUI,EAAKJ,QACfC,EAAUG,EAAKH,QAEfG,EAAKK,gBAAkB,CAAC,EAExBN,EAAQH,EAAQtC,GAAG,OAASsC,GACpBA,EAAQtB,SAAStD,IAAc4E,EAAQlD,SAAS,OAExDoD,GAAYG,GAAiBF,EAAKpD,UAG9BkD,EAAQpC,WAAWsC,KAAOA,GAG9BC,EAAKM,aAELN,EAAKO,aAELP,EAAKQ,aAGAZ,EAAQtB,SAAStD,IASlBgF,EAAK9B,QAAU0B,EACfI,EAAKS,KAAOb,EAAQlD,SAAS,MAAMkC,GAAG,KATtCoB,EAAKU,WAEDX,IACAC,EAAKS,KAAOb,EACZI,EAAKW,OAAOX,EAAK9B,WAQzB8B,EAAKY,mBACLZ,EAAKa,YAELb,EAAK9B,QAAQ4C,KAAK,OAAQ,QAC1Bd,EAAK9B,QAAQrB,KAAK,OAAOiE,KAAK,OAAQ,QAEtCd,EAAKe,YAAYjB,GAEjBE,EAAKgB,gBAELhB,EAAKiB,YAEAnB,EAMDE,EAAKkB,yBALDrB,EAAQsB,WACRnB,EAAKoB,WAAU,GACfpB,EAAKvC,WAAW4D,MAAM9D,KAAK+D,sBAAsBC,KAAKhE,QAM1DsC,EAAQjD,YAAciD,EAAQjD,WAAW4E,eACzCxB,EAAKyB,sBAGLzB,EAAKJ,QAAQ,GAAG1H,GAChB8H,EAAK0B,QAAU3I,EAAM4I,OAAO,gBAAiB3B,EAAKJ,QAAQ,GAAG1H,IAE7D8H,EAAK0B,QAAU3I,EAAM6I,OAAS,aAGlC7I,EAAM8I,OAAO7B,EACjB,EAEAgB,cAAe,WACX,IAAIhB,EAAOzC,KACPuE,EAAiB,qCACjBC,EAAa,aAEjB/B,EAAKgC,cAAgBhC,EAAKiC,OAAOV,KAAKvB,GAEtCA,EAAK9B,QACAgE,GAAGH,EAAanI,EAAI,oBAAoB,SAASuI,GAAKA,EAAEC,gBAAkB,IAC1EF,GAAGH,EAAanI,EAAIkI,GAAgB,WAAatJ,EAAE+E,MAAMsB,SAAS9D,EAAc,IAChFmH,GAAG,aAAetI,EAAIkI,GAAgB,WAAatJ,EAAE+E,MAAM8E,YAAYtH,EAAc,IACrFmH,GAAGrH,EAAQjB,EAAIkI,EAAgB9B,EAAKgC,eACpCE,GAAG,WAAatI,EAAI,yBAA0BoG,EAAKsC,mBAAmBf,KAAKvB,IAC3EkC,GAAGrH,EAAQjB,EAAI,IAAIsB,IAAe8E,EAAKsC,mBAAmBf,KAAKvB,IAC/DkC,GAAG,UAAYtI,EAAIoG,EAAMA,EAAKuC,SAAShB,KAAKvB,IAC5CkC,GAAG,WAAatI,EAAIoG,EAAKwC,UAAUjB,KAAKvB,IACxCkC,GAAG,QAAUtI,EAAIoG,EAAKyC,OAAOlB,KAAKvB,IAClCkC,GAAG,OAAStI,EAAIoG,EAAK0C,MAAMnB,KAAKvB,IAChCkC,GAAG,YAActI,EAAI,wCAAwCsB,IAAe8E,EAAK2C,WAAWpB,KAAKvB,IACjGkC,GAAG,SAAWtI,EAAI,gCAAiCoG,EAAK4C,gBAAgBrB,KAAKvB,IAC7EkC,GAAG,QAAUtI,EAAI,mBAAoBoG,EAAK6C,cAActB,KAAKvB,IAC7DkC,GAAG,QAAUtI,EAAI,sBAAsB,SAASuI,GAAKA,EAAEC,gBAAkB,IACzEF,GAAG,QAAUtI,GAAI,SAASuI,GACvB,IAAIW,EAAStK,EAAE2J,EAAEW,QAEZA,EAAOxF,GAAG,oBAAuBwF,EAAOjG,KAAK,uCAAuCS,GAAG,oBACxF0C,EAAK+C,OAEb,GACR,EAEA7B,uBAAwB,SAAST,EAAMhD,GACnCgD,EAAOA,GAAQlD,KAAKkD,KAEpB,IAKIuC,EACAC,EACArF,EACAsF,EACAC,EATAjK,GADJuE,EAAaA,GAAcF,KAAKE,YACV2F,OAClBC,EAAUtK,EAAM+H,KAAK,OACrBwC,EAAevK,EAAM+H,KAAK,YAC1ByC,EAAoBhG,KAAKsC,QAAQjD,WACjC4G,EAAQ/C,EAAK/D,SAAS,MAO1B,IAAKsG,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAE1BE,GADAtF,EAAW1E,EAAK8J,IACDE,KACfD,EAAOO,EAAM5E,GAAGoE,IACXlC,KAAK,OAAQ,YACbA,KAAKuC,EAASH,GACdpC,KAAKxF,EAAe2H,EAAK3E,SAAS,eAEvCV,EAAS6F,SAAuC,SAA5BR,EAAKnC,KAAKwC,GAE1B1F,EAAS8F,aACTT,EAAKnC,KAAKtF,EAAeoC,EAAS6F,UAGlCF,IACAJ,EAAevG,EAAWqG,GAC1BrF,EAAS+F,QAAUR,EAAaS,KAAKzJ,GACrCgJ,EAAarC,KAAK,KAAM,IAAMoC,GAC9BC,EAAaU,KAAK,qBAAqB/C,KAAK,MAAO,IAAMoC,GAEzDD,EAAKnC,KAAKzF,EAAc4H,EAAKU,UAGjCpG,KAAK2D,uBAAuB+B,EAAKvG,SAAS,MAAOkB,EAASlB,SAElE,EAEA4D,WAAY,WACR,IAAIT,EAAUtC,KAAKsC,QACfiE,EAAmBjE,EAAQkE,UAC3BC,EAAuBF,EAAiBG,UAAY,YAAaH,EAAiBG,SAClFA,EAAW5K,EAAO,CAAC,EAAGyK,EAAiBI,OAAQJ,EAAiBG,UAE/DD,IACDC,EAAW5K,EAAO4K,EAAU,CAAEE,SAAS,MAGlB,IAArBL,IACAA,EAAmB,CACfI,OAAQ,CAAEE,QAAS,CAAC,GACpBH,SAAU,CAAEI,MAAM,EAAMD,QAAS,CAAC,KAI1CN,EAAiBG,SAAW5K,EAAO4K,EAAU,CAAEI,MAAM,IACrDxE,EAAQkE,UAAYD,CACxB,EAEA7C,UAAW,WACP,IAAIqD,EAAU/G,KAAKsC,QAAQ0E,YACvBC,EAAWjH,KAAKiH,SAEpB,GAAIF,IAAYE,EAAU,CACtB,IAAIC,EAASlH,KAEbA,KAAKiH,SAAW,IAAIvL,EAAGyL,wBAAwBnH,KAAKqC,QAAS,CACzD+E,aAAa,EACbC,SAAUrH,KAAKsC,QAAQ+E,SACvBC,WAAYtH,KAAKsC,QAAQgF,WACzBtI,OAAQ,6BACRuI,kBAAmB,cACnBC,aAAc,sBACdC,SAAUzH,KAAK0H,UAAU1D,KAAKhE,MAC9B2H,SAAU,SAASC,EAAQC,GACvB,OAAO5M,EAAE0M,SAASC,EAAQC,EAC9B,EACAC,kBAAmB,SAASpC,GACxB,OAAOA,CACX,EACAqC,eAAgB,SAASxC,GACrB,IAAIG,EAAOH,EAAO1F,QAAQ,mDAC1B,MAAO,CACH6F,KAAMA,EACNsC,QAASzC,EAAO1F,QAAQ,SACxBoI,MAAOvC,EAAK3E,SAAS,kBACrBmH,KAAMxC,EAAK3E,SAAS,kBAE5B,EACAoH,iBAAkB,SAASC,GACvB,OAAOA,EAASC,QAAQ,SAASjJ,OAAS,EAAI,QAAU,QAC5D,EACAkJ,UAAW,SAASV,GAEhB,OADAV,EAAOvG,QAAQ4C,KAAK/H,EAAM+H,KAAK,eAAe,GACvC2D,EAAOqB,QAAQzL,EAAW,CAAE0L,WAAYZ,EAAO,IAC1D,EACAa,KAAM,SAASnG,GACX4E,EAAOqB,QAAQxL,EAAM,CACjB2L,cAAepG,EAAQoG,cACvBF,WAAYlG,EAAQsF,OAAO,GAC3Be,WAAYrG,EAAQiD,OAAO,GAC3BqD,MAAOtG,EAAQsG,MACfC,MAAOvG,EAAQuG,MACfC,YAAaxG,EAAQyG,OACrBC,eAAgB1G,EAAQ2G,WAEhC,EACAC,KAAM,SAAS5G,GACX,IACI6G,EADalO,EAAEqH,EAAQqG,YACO9I,QAAQ,KAM1C,OAJIsJ,GAAoBA,EAAiB5F,KAAK,SAC1C2D,EAAOkC,uBAAuBD,GAG3BjC,EAAOqB,QAAQvL,EAAM,CACxB0L,cAAepG,EAAQoG,cACvBF,WAAYlG,EAAQsF,OACpByB,gBAAiB/G,EAAQuF,YACzByB,MAAOhH,EAAQgH,MACfC,SAAU,SAASC,GACfxJ,KAAKsJ,MAAQE,EACblH,EAAQiH,SAASC,EACrB,EACAb,WAAYrG,EAAQqG,WACpBc,aAAcnH,EAAQoH,UAE9B,EACAC,QAAS,SAASrH,GACd,IAAIsF,EAAStF,EAAQsF,OACjBC,EAAcvF,EAAQuF,YACtB6B,EAAWpH,EAAQoH,SAIvB,SAASE,EAAehC,GAChBV,EAAO5E,QAAQjD,YAAc6H,EAAO5E,QAAQjD,WAAW4E,eACvDiD,EAAOhD,sBAGXgD,EAAO2C,QAAQjC,GACfV,EAAO7E,QAAQmD,QAEf0B,EAAOqB,QAAQtL,EAAS,CACpByL,cAAepG,EAAQoG,cACvBF,WAAYZ,GAAUA,EAAO,GAC7ByB,gBAAiBxB,EAAY,GAC7B4B,aAAcC,GAEtB,CAhBAxC,EAAOvG,QAAQO,WAAW1F,EAAM+H,KAAK,eAoBrB,QAAZmG,EACAxC,EAAO9F,OAAOwG,EAAQC,EAAa+B,IAEnB,UAAZF,EACA9B,EAASV,EAAOnF,aAAa6F,EAAQC,GAClB,SAAZ6B,IACP9B,EAASV,EAAO4C,YAAYlC,EAAQC,IAGxC+B,EAAehC,GAEvB,GAER,MAAYb,GAAWE,IACnBA,EAAS8C,UACT/J,KAAKiH,SAAW,KAExB,EAEAmC,uBAAwB,SAASnK,GAC7BA,EAAK0F,GAAGrH,EAAQjB,EAAKC,GAAS,SAAS0N,GACnCA,EAAGnF,iBACH5F,EAAKgL,IAAI3M,EAAQjB,EAAKC,EAC1B,GACJ,EAEAoL,UAAW,SAASzI,GAChB,OAAOe,KAAKkK,UAAUC,SAAS,CAC3BzE,KAAM1F,KAAKK,SAASpB,GACpBmL,SAAUpK,KAAKsC,SAEvB,EAEAW,WAAY,WACR,IAAIR,EAAOzC,KACPsC,EAAUG,EAAKH,QACf+H,EAAgB5H,EAAK6H,eAAetG,KAAKvB,GAEzCH,EAAQvG,iBAAmBuG,EAAQvG,UAAY8B,EAC/CyE,EAAQvG,SAAWA,EAASuG,EAAQvG,UAC5BuG,EAAQvG,WAChBuG,EAAQvG,SAAW,EAAG2J,WAClB,IAAIpH,EAAO+L,EAAc,OAAdA,CAAsB3E,GAEjC,YAA2B,IAAhBA,EAAK6E,UAA2C,IAAjB7E,EAAK6E,QACpC,sCAAsCjM,WAG1C,sCAAsC1C,EAAO0C,WAAc,GAI1EmE,EAAK+H,cAEL/H,EAAKyH,UAAY,CACbO,cAAe,SAAS/E,GACpB,IAAIxG,EAAS,GACTwL,EAAahF,EAAKnC,MAAQ,CAAC,EAE/B,IAAK,IAAIA,KAAQmH,EACTA,EAAWC,eAAepH,IAAkB,UAATA,IACnCrE,GAAUqE,EAAO,KAAQmH,EAAWnH,GAAQ,MAIpD,OAAOrE,CACX,EACA0L,gBAAiB,SAAShL,EAAO8F,GAC7B,IAAIxG,EAAS,yBACTsB,EAAQkF,EAAKlF,MAUjB,OARIZ,EAAMiL,YAAwB,IAAVrK,IACpBtB,GAAU,YAGVsB,GAASZ,EAAMR,OAAS,IACxBF,GAAU,WAGPA,CACX,EACA4L,SAAU,SAASlL,EAAO8F,GACtB,IAAIxG,EAAS,GACTsB,EAAQkF,EAAKlF,MACbuK,EAAcnL,EAAMR,OAAS,EAcjC,OAZIQ,EAAMiL,YAAwB,IAAVrK,IACpBtB,GAAU,mBAIVA,GADU,IAAVsB,GAAeA,GAASuK,EACd,iBACHvK,GAASuK,EACN,iBAEA,gBAIlB,EACAC,UAAW,SAAStF,EAAMuF,GACtB,IAAI/L,EAAS,uBAcb,OAZI+L,IACA/L,GAAU,YAGO,IAAjBwG,EAAKqB,UACL7H,GAAU,gBAGQ,IAAlBwG,EAAKwF,WACLhM,GAAU,eAGPA,CACX,EACAiM,cAAe,SAASzF,GACpB,IAAIxG,EAAS,aAMb,OAJqB,IAAjBwG,EAAKqB,UACL7H,GAAU,eAGPA,CACX,EACAkM,kBAAmB,SAAS1F,GACxB,IAAIxG,EAAS,oBAMb,OAJqB,IAAjBwG,EAAKqB,UACL7H,GAAU,eAGPA,CACX,EACAmM,WAAY,SAASC,EAAM5F,GACvB,OAAsB,IAAlBA,EAAKQ,SACExK,EAAG4P,KAAKA,EAAM,CAAEA,KAAM,cAAa9P,EAAM+P,QAAQC,MAAM/I,EAAKJ,SAAW,OAAS,WAEhF3G,EAAG4P,KAAKA,EAAM,CAAEA,KAAM,kBAErC,EACAG,gBAAiB,SAAS7L,GACtB,IAAI8K,EAAa,GAMjB,OAJK9K,EAAMiL,aACPH,EAAa,gBAGVA,IAAiC,IAAnB9K,EAAMsG,SAAoB,wBAA0B,GAC7E,EACAwF,cAAe,SAAS9L,GACpB,IAAIkL,EAAW,2BAMf,OAJIlL,EAAMiL,aACNC,GAAY,qBAGTA,CACX,EACAX,SAAWxO,GAASA,EAAKyO,SAASrO,SAASJ,GAC3CiE,MAAQjE,GACR,cAAcA,EAAKgQ,EAAED,cAAc/P,EAAKiE,UAAUjE,EAAKgQ,EAAEF,gBAAgB9P,EAAKiE,UAC1EjE,EAAKiQ,YAAYjQ,GACrB,QACAkQ,YAAclQ,IACV,IAAI8C,EAAW4L,EAAc,WAAdA,CAA0B1O,EAAK+J,MAC1ClH,EAAiB6L,EAAc,iBAAdA,CAAgC1O,EAAK+J,MACtDxG,EAAS,GAYb,OAVIT,IACAS,GAAU,oCAAoCT,OAG9CD,IACAU,GAAU,yBAAyBV,cAGvCU,GAAUvD,EAAKyO,SAASrO,SAASJ,EAEpB,EAEjBmQ,YAAcnQ,IACV,IACI+J,EAAO/J,EAAK+J,KACZiG,EAAIhQ,EAAKgQ,EACTpN,EAAM8L,EAAc,MAAdA,CAAqB3E,GAC3BqG,EAAMxN,EAAM,IAAM,OAClByN,EAAWzN,EAAM,UAAYA,EAAM,IAAM,GACzCW,EAAS,eAAeyM,EAAEb,SAASnP,EAAKiE,MAAO8F,OAoBnD,OAlBIA,EAAKS,cACLjH,GAAU,gBAAgByM,EAAEP,kBAAkB1F,OAClCiG,EAAEN,WAAWpQ,EAAE2C,GAAkB8H,GACnC,WAGV/J,EAAKyO,SAAS/K,aACdH,GAAU,wDACEvD,EAAKyO,SAAS/K,WAAWtD,SAASJ,GACpC,WAGduD,GAAU,IAAI6M,YAAcJ,EAAEX,UAAUtF,IAAQnH,MAAQyN,KAC3CL,EAAEE,YAAYlQ,GACjB,KAAKoQ,KAEf7M,GAAU,QAEG,EAEjBwG,KAAO/J,IACH,IAAI+J,EAAO/J,EAAK+J,KACZiG,EAAIhQ,EAAKgQ,EACTzM,EACA,8BAA8ByM,EAAEf,gBAAgBjP,EAAKiE,MAAO8F,MACzDlK,EAAM+H,KAAK,WAAWmC,EAAKC,OAC3BgG,EAAElB,cAAc/E,EAAKuG,OAASvG,EAAKuG,SAAWvG,MAoBrD,OAlBI/J,EAAKyO,SAAS/K,aACdH,GACI,iBAAiBwG,EAAKU,QAAU,OAAS,aAGjDlH,GACI,kBAAkBwG,EAAKwF,SAAW,OAAS,cACnB,IAAjBxF,EAAKqB,QAAoB,uBAAyB,IAEzDrB,EAAKS,cACLjH,GAAU,kBAAkBwG,EAAKQ,SAAW,OAAS,aAGzDhH,GACI,kBAAkBwG,EAAKQ,SAAW,OAAS,aAC3CyF,EAAEG,YAAYnQ,GACd,OAES,EAEjBuQ,QAAS,EAAGC,cACR,0CAA0CvQ,EAAOuQ,EAASD,WAC9DE,MAAO,EAAGD,cACN,GAAGvQ,EAAOuQ,EAASE,mJACiHzQ,EAAOuQ,EAASC,yBAEhK,EAEAnG,MAAO,WACH,OAAOjG,KAAKqC,QAAQ/C,KAAK,4BAC7B,EAEAgN,cAAe,SAASpM,GACpB,IAAIoC,EAAUtC,KAAKsC,QAEnBA,EAAQpC,WAAaA,EAErBF,KAAK8C,gBAAkB,CAAC,EAExB9C,KAAKwD,cAEDlB,EAAQjD,YAAciD,EAAQjD,WAAW4E,eACzCjE,KAAKE,WAAWqM,IAAI,SAAUvM,KAAKkE,oBAAoBF,KAAKhE,KAAM,OAGlEA,KAAKsC,QAAQsB,UACb5D,KAAKE,WAAW4D,MAAM9D,KAAK+D,sBAAsBC,KAAKhE,MAE9D,EAEAwM,gBAAiB,WACb,IAAI/J,EAAOzC,KAEXyC,EAAKgK,gBAAkBhK,EAAKiK,QAAQ1I,KAAKvB,GACzCA,EAAKkK,cAAgBlK,EAAKmK,OAAO5I,KAAKvB,GACtCA,EAAKoK,sBAAwBpK,EAAKqK,eAAe9I,KAAKvB,GACtDA,EAAKsK,mBAAqBtK,EAAKuK,cAAchJ,KAAKvB,GAClDA,EAAKwK,aAAe,GAEpBxK,EAAKvC,WAAW8D,KAAKtH,EAAQ+F,EAAKgK,iBAClChK,EAAKvC,WAAW8D,KAAKrH,EAAO8F,EAAKkK,eAEjClK,EAAKvC,WAAW8D,KAAK7G,EAAasF,EAAKoK,uBACvCpK,EAAKvC,WAAW8D,KAAK3G,EAAYoF,EAAKsK,mBAC1C,EAEAC,cAAe,SAASpI,GACpB,IAAInC,EAAOzC,KAEXkN,YAAW,WACQ,SAAXtI,EAAEuI,MAAoB1K,EAAK2K,qBAC3B3K,EAAKsB,uBAEb,GACJ,EAEA+I,eAAgB,SAASlI,GACrB,IAAInC,EAAOzC,KACXyC,EAAKwK,aAAexK,EAAKwK,aAAaI,OAAOzI,EAAE0I,OAE1C7K,EAAKvC,WAAWgM,YAA2C,IAA9BzJ,EAAKH,QAAQK,eAC3CF,EAAK8F,QAAQnL,EAAe,CAAEkQ,MAAO7K,EAAKwK,eAC1CxK,EAAKwK,aAAe,GAE5B,EAEAlJ,sBAAuB,WACnB,IAEI8F,EAASpE,EAFThD,EAAOzC,KACPiG,EAAQxD,EAAKvC,WAAW2F,OAG5B,IAAkC,IAA9BpD,EAAKH,QAAQK,aAAwB,CACrC,IAAK8C,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAE1B,IADAoE,EAAU5D,EAAMR,IACJU,eAAiB0D,EAAQ1K,WAAa0K,EAAQ1K,SAASxD,QAA6C,IAAnCkO,EAAQ1K,SAASxD,OAAOyD,QACjG,OAIRqD,EAAK2K,qBAAsB,EAC3B3K,EAAK8F,QAAQnL,EAAe,CAAEkQ,MAAO,IACzC,CACJ,EAEAC,kBAAmB,WACf,IAAIrN,EAAaF,KAAKE,WAElBA,IACAA,EAAWsN,OAAO9Q,EAAQsD,KAAKyM,iBAC/BvM,EAAWsN,OAAO7Q,EAAOqD,KAAK2M,eAC9BzM,EAAWsN,OAAOrQ,EAAa6C,KAAK6M,uBACpC3M,EAAWsN,OAAOnQ,EAAY2C,KAAK+M,oBAE3C,EAEAvJ,YAAa,SAASiK,GAClB,IAAIhL,EAAOzC,KAEPE,EADUuC,EAAKH,QACMpC,WAYzBA,EAAalE,EAAQkE,GAAc,CAAEvE,KAAMuE,GAAeA,EAE1DuC,EAAK8K,oBAEArN,EAAWwN,SACZxN,EAAWwN,OAAS,CAChB,CAAEC,MAAO,QACT,CAAEA,MAAO,OACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,cAIjBlL,EAAKvC,WAAaA,EAAa/D,EAAuByR,OAAO1N,GAEzDuN,IACAvN,EAAW4D,QA1Bf,SAAS+J,EAAclS,GACnB,IAAK,IAAI8J,EAAI,EAAGA,EAAI9J,EAAKyD,OAAQqG,IAC7B9J,EAAK8J,GAAGqI,gBAERnS,EAAK8J,GAAGtG,SAAS2E,QAEjB+J,EAAclS,EAAK8J,GAAGtG,SAAS0G,OAEvC,CAoBIgI,CAAc3N,EAAW2F,SAG7BpD,EAAK+J,iBACT,EAEAuB,OAAQ,CACJjR,EACAC,EACAC,EACAC,EAEAC,EACAE,EA3yBK,SAKE,WA0yBPb,EACAG,EACAD,EACAD,EAnyBW,gBAuyBf8F,QAAS,CACL1H,KAAM,WACNsF,WAAY,CAAC,EACbsG,UAAW,CACPG,OAAQ,CACJE,QAAS,kBACTmH,SAAU,KACXtH,SAAU,CACTsH,SAAU,MAGlB7B,SAAU,CACND,QAAS,aACTG,cAAe,kBACfD,MAAO,SAEXpF,aAAa,EACb3H,YAAY,EACZuE,UAAU,EACV0D,YAAY,EACZ3E,cAAc,EACd5G,SAAU,GACVkS,cAAe,KACfC,KAAM,UAGVlL,WAAY,WACR,IAEIyC,EAAGkI,EAAOQ,EADV7L,EADOtC,KACQsC,QAEfD,EAHOrC,KAGQqC,QAEnB,IAAKoD,KAAKpH,EACNsP,EAAQrL,EAAQjE,EAASoH,IACzB0I,EAAY9L,EAAQkB,KAAK/H,EAAM+H,KAAKkC,EAAI,YAEnCkI,GAASQ,IACVR,EAAQQ,GAGPR,IACDA,EAAQlI,GAGPzJ,EAAQ2R,KACTA,EAAQ,CAACA,IAGbrL,EAAQjE,EAASoH,IAAMkI,CAE/B,EAGArD,eAAgB,SAAS8D,GACrB,IAAIC,EAAgBrO,KAAKsC,QAAQjE,EAAS+P,IACtCE,EAAQD,EAAcjP,OAE1B,OAAO,SAAUsG,GACb,OAAc,IAAV4I,EACO9S,EAAM+S,OAAOH,EAAb5S,CAAwBkK,GAG5BzK,EAAEuT,IAAIH,GAAe,SAASI,GACjC,OAAO,SAASC,GAAK,OAAOlT,EAAM+S,OAAOE,EAAbjT,CAAgBkT,EAAI,CACpD,IAAGC,KAAKC,IAAIlJ,EAAKmJ,QAASP,EAAQ,IAAI5I,EACzC,CACL,EAEAoJ,WAAY,SAASxM,GACjBpG,EAAO6S,GAAGD,WAAWjM,KAAK7C,KAAMsC,GAEhCtC,KAAK+C,aAEL/C,KAAK0D,YAEL1D,KAAKgD,aAELhD,KAAKiD,YACT,EAEA+L,SAAU,SAASC,EAAWhQ,GAC1B,OAAOe,KAAKuI,QAAQ0G,EAAW,CAC3BhQ,KAAMA,EAAKY,QAAQnC,GAAM,IAEjC,EAEAwR,YAAa,SAASC,EAAYC,GAC9B,GAAKD,GAAe3T,EAAM6T,WAAWF,EAAWtJ,MAIhD,IAAK,IAAIJ,EAAI,EAAG6H,EAAQ6B,EAAWtJ,OAAQJ,EAAI6H,EAAMlO,OAAQqG,KAChC,IAArB6H,EAAM7H,GAAGsB,SACT/G,KAAKsP,iBAAiBhC,EAAM7H,GAAI2J,GAGhC9B,EAAM7H,GAAGtG,UACTa,KAAKkP,YAAY5B,EAAM7H,GAAGtG,SAAUiQ,EAGhD,EAEAE,iBAAkB,SAASrQ,EAAMmQ,GAC7BnQ,EAAKrC,GAAWwS,CACpB,EAEAG,kBAAmB,SAAStQ,GACxB,IACIuQ,EAAUpQ,EAEVqG,EAHA7F,EAAQxE,EAAS6D,GAEjBwQ,GAAM,EAGV,GAAK7P,EAAMR,SAMXA,GAFAoQ,EAAWnQ,EAAWO,EAAMT,aAEVC,QAElB,CAEO,GAAIA,EAAS,GAChB,IAAKqG,EAAI,EAAGA,EAAIrG,EAAQqG,IACpB,GAAI+J,EAAS/J,GAAGW,SAAWoJ,EAAS/J,EAAI,GAAGW,SACvCoJ,EAAS/J,GAAGiK,eAAiBF,EAAS/J,EAAI,GAAGiK,cAAe,CAC5DD,GAAM,EACN,KACJ,OAGJA,GAAOD,EAAS,GAAGE,cAKvB,OAFAzQ,EAAKsE,KAAKzF,EAAc2R,EAAMD,EAAS,GAAGpJ,QAAU,SAE7C/G,EAAWJ,GACbtD,KAAKkB,GAAgB4S,GACrBpJ,KAAKxJ,GAAgB4S,GACrBpJ,KAAKzJ,EAAS6S,GAAOD,EAAS,GAAGpJ,QAPtC,CAQJ,EAEAlC,oBAAqB,SAASjF,GAE1BA,EAAOA,GAAQe,KAAKW,QAEpB,IACI8E,EACA5E,EACAR,EAHAsP,EAAWvU,EAAS6D,GAAME,WAK9B,GAAIwQ,EAASvQ,OAAQ,CACjB,IAAKqG,EAAI,EAAGA,EAAIkK,EAASvQ,OAAQqG,IAC7BzF,KAAKkE,oBAAoByL,EAAStO,GAAGoE,IAGzC,GAAIxG,EAAKc,GAAG,eACR,OAGJc,EAAWb,KAAKuP,kBAAkBtQ,GAElCoB,EAAWL,KAAKK,SAASpB,GAErB4B,GAAYA,EAASwF,KAAKzJ,GAC1ByD,EAAS+F,SAAU,EAEf/F,UACOA,EAAS+F,OAG5B,CACJ,EAEAwJ,qBAAsB,SAAS3Q,EAAM4Q,GAEjC,GAAK5Q,EAAKG,OAAV,CAIKyQ,GAED7P,KAAKkE,oBAAoBjF,GAG7B,IACI4B,EADAlB,EAAaK,KAAKF,OAAOb,GAGzBU,EAAWP,SACXY,KAAKuP,kBAAkB5P,GAEvBkB,EAAWlB,EAAWR,SAAS,OAAOG,KAAK,4CAE3CU,KAAK8P,OAAQ,GACwB,IAAjCjP,EAASwF,KAAKxJ,GACdmD,KAAKK,SAASV,GAAYoQ,IAAInT,EAASiE,EAASwF,KAAKzJ,IAGrDoD,KAAKK,SAASV,GAAYoQ,IAAInT,GAAS,GAG3CoD,KAAK8P,OAAQ,EAEb9P,KAAK4P,qBAAqBjQ,GAAY,GAzB1C,CA2BJ,EAEA0F,gBAAiB,SAAST,GACtB,IACI/D,EAAW5F,EAAE2J,EAAEW,QACfyK,EAAYnP,EAASwF,KAAKzJ,GAC1BqC,EAAO4B,EAAShB,QAAQnC,GACxB2C,EAAWL,KAAKK,SAASpB,GAEzBe,KAAKiQ,iBAIL5P,EAAS+F,SAAW4J,IACpB3P,EAAS0P,IAAInT,EAASoT,GACtB/Q,EAAKsE,KAAKzF,EAAckS,GACxBhQ,KAAKgP,SAASxS,EAAOyC,IAGrB4B,EAASd,GAAG,YAhBLC,KAiBFgP,SAASvS,EAAUwC,GAjBjBe,KAkBFwF,SAEb,EAEAT,mBAAoB,SAASH,GACzB,IAAI3F,EAAOhE,EAAE2J,EAAEsL,eAAerQ,QAAQnC,GAElCuB,EAAKc,GAAG,2BAIZC,KAAKmQ,OAAOlR,EAChB,EAEAmG,WAAY,SAASR,GACjB,IAAInC,EAAOzC,KACPkQ,EAAgBjV,EAAE2J,EAAEsL,eACpBjR,EAAOhE,EAAE2J,EAAEsL,eAAerQ,QAAQnC,GAClC0S,EAAU5U,EAAM+P,QAAQ6E,QAExBnR,EAAKc,GAAG,6BAKPqQ,EAAQC,MAAQD,EAAQE,OAASJ,EAAcnQ,GAAG,eAC/CmQ,EAAc7J,KAAKxJ,IACnB4F,EAAKwN,gBAAiB,EAEtBC,EAAc7J,KAAKzJ,GAAUsT,EAAc7J,KAAKzJ,IAChDsT,EAAc3H,QAAQ7L,GAEtBwT,EAAcvL,GAAGrH,EAAQjB,GAAI,SAASuI,GAClCA,EAAEC,gBACN,IAEApC,EAAKwN,gBAAiB,IAEtBC,EAAcjG,IAAI3M,EAAQjB,GAC1BoG,EAAKwN,gBAAiB,IAI9BxN,EAAK8N,aAAetR,EACpBwD,EAAKoH,QAAQ5K,GACjB,EAEAuR,WAAY,SAASvR,GACjB,OAAOA,GAAQA,EAAKG,QAAUH,EAAKc,GAAG,cAAgBd,EAAKK,KAAK,SAAS2I,QAAQlH,SAAS3C,EAC9F,EAEA8G,OAAQ,WACJ,IAAI2E,EAAU7J,KAAKyQ,SACfC,EAAc1Q,KAAKuQ,aAGnB/U,EAAM+P,QAAQoF,QAIdD,GAAeA,EAAYtR,SAC3ByK,EAAU6G,GAGT1Q,KAAKwQ,WAAW3G,KACjBA,EAAU7J,KAAK6J,WAGd7J,KAAKwQ,WAAW3G,KACjBA,EAAU7J,KAAK4Q,aAAa3V,MAGhC+E,KAAK6J,QAAQA,GACjB,EAEArE,MAAO,WACH,IAKIC,EALA9E,EAAUX,KAAKW,QACfkQ,EAAkBlQ,EAAQ,GAC1BmQ,EAAa,GACbC,EAAU,GACVC,EAAkBC,SAASD,gBAG/B,IACIH,EAAkBA,EAAgBlR,YAEduR,aAAeL,EAAgBM,eAC/CL,EAAWM,KAAKP,GAChBE,EAAQK,KAAKP,EAAgBQ,kBAE5BR,GAAmBG,GAI5B,IAFAxV,EAAM8V,aAAa3Q,GAEd8E,EAAI,EAAGA,EAAIqL,EAAW1R,OAAQqG,IAC/BqL,EAAWrL,GAAG4L,UAAYN,EAAQtL,EAE1C,EAEAN,MAAO,WACHnF,KAAK6J,UAAUvK,KAAK,SAAS2I,QAAQnD,YAAY,UACrD,EAEAyM,SAAU,SAAStS,GACf,OAAQA,EAAKE,SAAS,OAAOA,SAAS,SAAS4B,SAAS3C,EAC5D,EAEA0B,OAAQ,SAASb,GACb,IAEIC,EACAsS,EAHAC,EAAY,sBACZC,EAAS,oBAIFzS,GAAQpB,IACfoB,EAAOe,KAAKqC,QAAQ/C,KAAKL,IAGxBP,EAAaO,KACdA,EAAOA,EAAK,IAGhBuS,EAAWE,EAAO7P,KAAK5C,EAAK6C,WAE5B,GACI7C,EAAOA,EAAKU,WAER+R,EAAO7P,KAAK5C,EAAK6C,aACb0P,EACAtS,EAASD,EAETuS,GAAW,UAGbC,EAAU5P,KAAK5C,EAAK6C,aAAe5C,GAE7C,OAAOjE,EAAEiE,EACb,EAEA0R,aAAc,SAAS3R,GACnB,IAEIC,EAFAuD,EAAOzC,KACPkG,EAAWzD,EAAKkP,UAAU1S,GAG9B,SAAS2S,EAAW3S,GAChB,KAAOA,EAAKG,SAAWH,EAAKqH,OAAOlH,QAC/BH,EAAOwD,EAAK3C,OAAOb,GAGvB,OAAIA,EAAKqH,OAAOlH,OACLH,EAAKqH,OAELrH,CAEf,CAeA,OAbKA,EAAKG,QAAWH,EAAKc,GAAG,YAElBmG,IACPhH,EAAS9D,EAAS6D,GAAME,WAAW8I,SAGvB7I,SAIZF,EAAS0S,EAAW3S,IATpBC,EAASuD,EAAKS,KAAK/D,WAAWkC,GAAG,GAY9BnC,CACX,EAEA2S,iBAAkB,SAAS5S,GACvB,IACI6S,EACA5S,EAFAuD,EAAOzC,KAIX,IAAKf,EAAKG,QAAUH,EAAK8S,OAAO3S,OAO5B,IALIF,EADAD,EAAKG,OACIH,EAAK8S,OAELtP,EAAKS,KAAK/D,WAAW+I,OAG3BzF,EAAKkP,UAAUzS,KAClB4S,EAAY1W,EAAS8D,GAAQC,WAAW+I,QAEzB9I,QAIfF,EAAS4S,OAGb5S,EAASuD,EAAK3C,OAAOb,IAASA,EAGlC,OAAOC,CACX,EAEA8F,SAAU,SAASJ,GACf,IAEIW,EAFA9C,EAAOzC,KACPgS,EAAMpN,EAAEqN,QAERC,EAAUzP,EAAKoH,UACf3D,EAAWzD,EAAKkP,UAAUO,GAC1BrR,EAAWqR,EAAQ5S,KAAK,uBAAuB2I,QAAQ3I,KAAK,aAC5D6S,EAAM3W,EAAM+P,QAAQC,MAAM/I,EAAKJ,SAE/BuC,EAAEW,QAAUX,EAAEsL,iBAIZiC,GAAOH,GAAO5V,EAAKgW,OAAWD,GAAOH,GAAO5V,EAAKiW,KAC/CnM,EACAX,EAAS9C,EAAKmO,aAAasB,GACnBA,EAAQ5S,KAAK,SAAS2I,QAAQlH,SAAS3C,IAC/CqE,EAAKkE,OAAOuL,IAEPC,GAAOH,GAAO5V,EAAKiW,MAAUF,GAAOH,GAAO5V,EAAKgW,MACrDlM,IAAagM,EAAQ5S,KAAK,SAAS2I,QAAQlH,SAAS3C,GACpDqE,EAAKiE,SAASwL,IAEd3M,EAAS9C,EAAK3C,OAAOoS,GAEhBzP,EAAK8O,SAAShM,KACfA,EAASrK,IAGV8W,GAAO5V,EAAKkW,KACnB/M,EAAS9C,EAAKmO,aAAasB,GACpBF,GAAO5V,EAAKmW,GACnBhN,EAAS9C,EAAKoP,iBAAiBK,GACxBF,GAAO5V,EAAKoW,KACnBjN,EAAS9C,EAAKmO,aAAa3V,KACpB+W,GAAO5V,EAAKqW,IACnBlN,EAAS9C,EAAKoP,iBAAiB5W,KACxB+W,GAAO5V,EAAKsW,OAAUR,EAAQ5S,KAAK,SAAS2I,QAAQlH,SAAS3C,GAM7D4T,GAAO5V,EAAKuW,UAAY9R,EAASzB,SACnC8S,EAAQ5S,KAAK,SAAS2I,QAAQlH,SAAS3C,KACxCyC,EAASwF,KAAKzJ,GAAUiE,EAASwF,KAAKzJ,IACjCjB,KAAKkB,GAAe,GACpBwJ,KAAKxJ,GAAe,GAEzB4F,EAAK4C,gBAAgB,CAAEE,OAAQ1E,KAEnC0E,EAAS2M,GAbJA,EAAQ5S,KAAK,SAAS2I,QAAQlH,SAAS,eACnC0B,EAAKuM,SAASzS,EAAQ2V,IACvBzP,EAAKgO,OAAOyB,GAcpB3M,IACAX,EAAEC,iBAEEqN,EAAQ,IAAM3M,EAAO,KACrB9C,EAAKuM,SAASvS,EAAU8I,GACxB9C,EAAKoH,QAAQtE,KAGzB,EAEAN,UAAW,SAASL,GAChB,IAGIgO,EAHAnQ,EAAOzC,KAEP6S,EAAcpQ,EAAKoH,UAAUiJ,IAAI,GAEjCd,EAAMpN,EAAEoN,IACqB,IAAfA,EAAI5S,SAMjBqD,EAAKsQ,SACNtQ,EAAKsQ,OAAS,IAGlBtQ,EAAKsQ,QAAUf,EACfgB,aAAavQ,EAAKwQ,aAClBxQ,EAAKwQ,YAAc/F,YAAW,WAC1BzK,EAAKsQ,OAAS,EAClB,GAlBY,MAoBZH,EAAeC,GACCpQ,EAAKyQ,iBACDjX,MAAM2G,UAAUrC,QAAQsC,KAAKJ,EAAKJ,QAAQ/C,KAAK,WAC/CuT,GAAcpQ,EAAKsQ,SAGrB3T,SACdwT,EAAenQ,EAAKyQ,kBAAkB,EAAGzQ,EAAKsQ,SAG9CH,EAAaE,IAAI,IAAMF,EAAaE,IAAI,KAAOD,IAC/CpQ,EAAKuM,SAASvS,EAAUmW,GACxBnQ,EAAKoH,QAAQ+I,IAErB,EAEAM,iBAAkB,SAASC,EAAY7U,GAQnC,OAPc0B,KAAKqC,QACK/C,KAAK,SAASN,QAAO,SAASyG,EAAGpD,GACrD,OAAQoD,EAAI0N,GACJlY,EAAEoH,GAAStC,GAAG,aACoC,IAAlD9E,EAAEoH,GAAS/D,OAAOmD,cAAclB,QAAQjC,EACpD,IAEiB+C,GAAG,GAAGxB,QAAQnC,EACnC,EAEAgH,OAAQ,SAASE,GACb,IACI3F,EAAOhE,EAAE2J,EAAEsL,eACXkD,EAAW/X,EAAa4D,EAAKY,QAAQnC,IACrC2V,EAAOpU,EAAKsE,KAAK,SAGjB8P,EACyB,KAARA,GAAeA,EAAK9S,QAAQ,IAAMP,KAAKqC,QAAQ1H,GAAK,MAAQ,EAE5DyY,EAAShU,SAAWgU,EAASjU,WAAWC,SAIzDwF,EAAEC,iBAGD5F,EAAK8B,SAAS,gBAhBRf,KAgBgCgP,SAASzS,EAAQ0C,IAhBjDe,KAiBFyQ,OAAOxR,EAEpB,EAEAkE,SAAU,WACN,IAEIxC,EAASuC,EAFTT,EAAOzC,KACPqC,EAAUI,EAAKJ,QAIfA,EAAQtC,GAAG,OACXY,EAAU0B,EAAQiR,KAAK,WAAWxT,SAClCoD,EAAOb,GAGPa,GADAvC,EAAU0B,GACKlD,SAAS,MAAMkC,GAAG,GAGrCoB,EAAK9B,QAAUA,EAAQW,SAVF,cAWrBmB,EAAKS,KAAOA,CAChB,EAEAqQ,iBAAkB,WACd,OAAOvT,KAAKqC,QAAQ/C,KAAK,eAAeO,QAAQnC,EACpD,EAEA0F,OAAQ,SAASsC,GACb,IAAIjD,EAAOzC,KACP6K,EAAanF,EAAK3E,SAAStD,GAC3BmC,EAAQ,CACJiL,WAAYA,EACZ3E,SAAU2E,GAAcpI,EAAKkP,UAAUjM,IAE3C8N,EAAe9N,EAAKvG,SAAS,MAEjCqU,EACKlS,SAASmB,EAAKyH,UAAUwB,cAAc9L,IACtC6T,IAAI,UAAW7T,EAAMsG,SAAW,GAAK,QAErC2E,GACD2I,EAAajQ,KAAK,OAAQ,SAG9Bd,EAAKiR,OAAOF,EAAc5T,EAC9B,EAEA8T,OAAQ,SAASF,EAAcG,GAC3B,IAEIlU,EAFAgD,EAAOzC,KACPsN,EAAQkG,EAAarU,SAAS,MAGlCwU,EAAY7X,EAAO,CAAEsD,OAAQkO,EAAMlO,QAAUuU,GAE7CrG,EAAMsG,MAAK,SAASnO,EAAGxG,GACnBA,EAAOhE,EAAEgE,GAETQ,EAAW,CAAEe,MAAOiF,EAAGS,SAAUzD,EAAKkP,UAAU1S,IAEhDyB,GAAezB,GAEfwD,EAAKoR,mBAAmB5U,EAAM0U,EAAWlU,GAGzCgD,EAAKW,OAAOnE,EAChB,GACJ,EAEAuL,YAAa,WACT,IAEIsJ,EAFAxR,EAAUtC,KAAKsC,QACfjD,EAAaiD,EAAQjD,WAGrBA,IAKAyU,GAJAA,EAAkBtY,EAAMuY,KAAKC,eAAe/Y,EAAE,YAAaA,EAAEa,OAAO,CAAC,EAAGwG,EAAS,CAC7E2R,QAAS,aAGqBC,QAAQ,IAAK,WAS/C7U,EAAavD,EAAO,CAChBC,SARO,EAAG2J,UACdoO,EACA,SAASpO,EAAKC,yDACXtG,EAAWzE,KAAO,SAAWyE,EAAWzE,KAAO,IAAM,IAAxD,MACqB,IAAjB8K,EAAKqB,QAAqB,WAAa,IAA3C,KACGrB,EAAKU,QAAU,UAAY,IAA9B,MAIG9D,EAAQjD,aAEWtD,UAAY8B,IAC9BwB,EAAWtD,SAAWA,EAASsD,EAAWtD,WAG9CuG,EAAQjD,WAAaA,EAE7B,EAEAwU,mBAAoB,SAAS5U,EAAM0U,EAAWlU,GAC1C,IAAIkB,EAAU1B,EAAKE,SAAS,OACxBS,EAAQX,EAAKE,SAAS,MACtB+K,EAAYlK,KAAKkK,UAErB,IAAIjL,EAAK8B,SAAS,cAAlB,EAIAtB,EAAWA,GAAY,CAAC,GACfyG,gBAAkBzG,EAASyG,UAAY3I,EAAYkC,EAASyG,SAAWlG,KAAK2R,UAAU1S,GAC/FQ,EAASe,aAAef,EAASe,OAASjD,EAAYkC,EAASe,MAAQvB,EAAKuB,QAC5Ef,EAASsH,eAAiBtH,EAASsH,SAAWxJ,EAAYkC,EAASsH,SAAWpG,EAAQxB,SAAS,SAAS4B,SAAS,eAEjH4S,EAAYA,GAAa,CAAC,GAChB9I,kBAAoB8I,EAAU9I,YAActN,EAAYoW,EAAU9I,WAAa5L,EAAKa,SAASA,SAASiB,SAAStD,GACzHkW,EAAUvU,cAAgBuU,EAAUvU,QAAU7B,EAAYoW,EAAUvU,OAASH,EAAKa,SAASX,WAAWC,OAGtGH,EAAK6F,YAAY,kBACZxD,SAAS4I,EAAUU,gBAAgB+I,EAAWlU,IAGnDkB,EAAQmE,YAAY,gDACZxD,SAAS4I,EAAUY,SAAS6I,EAAWlU,IAGhCkB,EAAQrB,KAAK,eACnBwF,YAAY,yBAAyBxD,SAAS4I,EAAUiB,cAAc1L,IAG/E,IAAI0U,EAAWxT,EAAQxB,SAAS,SAC5B8L,EAASkJ,EAAS,IAA4C,KAAtCA,EAAS,GAAGrV,SAAS2C,cAKjD,GAJA0S,EAASrP,YAAY,0BAChBxD,SAAS4I,EAAUc,UAAUvL,EAAUwL,IAGxCrL,EAAMR,QAA2C,QAAjCH,EAAKsE,KAAK,oBAA+B,CACzD,IAAI3C,EAAeD,EAAQrB,KAAK,sBAC5B+L,EAAazK,EAAazB,SAAS,IAAIxB,KAC3CiD,EAAakE,YAAY,gCAAgCxD,SAAS4I,EAAUkB,kBAAkB3L,IAG9FyK,EAAUmB,WAAWA,EAAY5L,GAGjCG,EAAM0B,SAAS,2BACnB,CAxCA,CAyCJ,EAGA8S,cAAe,SAAS9G,EAAO+G,GAG3B,IAFA,IACIpO,EADOjG,KACMqC,QAAQ/C,KAAKgO,GACrB7H,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAC9B4O,EAASxR,KAHF7C,KAGayF,EAAGxK,EAAEgL,EAAMR,IAAI5F,QAAQnC,GAEnD,EAEA2C,SAAU,SAASpB,GACf,IAAI0G,EAAM1K,EAAEgE,GAAMY,QAAQnC,GAAM6F,KAAK/H,EAAM+H,KAAK,QAC5CrD,EAAaF,KAAKE,WAEtB,OAAOA,GAAcA,EAAWoU,SAAS3O,EAC7C,EAEA4O,UAAW,SAAStV,GAChB,IAAI0G,EAAM1K,EAAEgE,GAAMY,QAAQnC,GAAM6F,KAAK/H,EAAM+H,KAAK,QAGhD,OAFiBvD,KAAKE,YAEDF,KAAK8C,gBAAgB6C,EAC9C,EAEA6O,YAAa,SAAS/U,EAAUe,EAAOb,EAAY8U,EAAgBC,GAC/D,IAGIC,EAKG1V,EAAMwG,EAAGC,EAAqB1D,EAAY8P,EAR7CrP,EAAOzC,KACPJ,EAAQxE,EAASuE,GACjBiV,EAAqBhV,EAAMT,WAAWC,OAAS,EAE/CuU,EAAY,CACR9I,WAAYlL,EAAWoB,SAAStD,GAChCyI,UAAWwO,EACXtV,OAAQwV,GACMC,EAAW,GAC7BzT,EAAS,SAASsE,EAAM9F,GACpB8F,EAAKvE,SAASvB,EAClB,EAEJ,IAAK6F,EAAI,EAAGA,EAAIhG,EAASL,OAAQqG,KAC7BC,EAAOjG,EAASgG,IAEXjF,MAAQA,EAAQiF,EAErBoP,GAAYpS,EAAKqS,YAAY,CACzBlV,MAAO+T,EACPjO,KAAMA,IAMd,IAFAzG,EAAOhE,EAAE4Z,IAECzV,OAAV,CAmCA,IA/BAqD,EAAKsS,QAAQ,WAAW,WACpB,MAAO,CACHC,SAAU/V,EAAK6T,MACfnX,KAAM8D,EAAS+O,KAAI,SAAS9I,GACxB,MAAO,CAAErF,SAAUqF,EACvB,IAER,IAEK9F,EAAMR,SACPQ,EAAQ3E,EAAEwH,EAAKwS,aAAa,CACxBrV,MAAO+T,KACPxS,SAASxB,GAEbA,EAAW4D,KAAKtF,GAAe,IAGnCwW,EAAexV,EAAMW,GAEjBD,EAAWoB,SAAS,YACpBL,GAAef,GACf8C,EAAKoR,mBAAmBlU,EAAYgU,EAAW,CAAEzN,UAAWwO,KAGhE1S,EAAa/C,EAAK8S,OAAO9J,QACzB6J,EAAY7S,EAAKqH,OAAO4B,OAExBzF,EAAKoR,mBAAmB7R,EAAY,CAAC,EAAG,CAAEkE,SAAqD,QAA3ClE,EAAWuB,KAAK/H,EAAM+H,KAAK,eAC/Ed,EAAKoR,mBAAmB/B,EAAW,CAAC,EAAG,CAAE5L,SAAoD,QAA1C4L,EAAUvO,KAAK/H,EAAM+H,KAAK,eAGxEkC,EAAI,EAAGA,EAAIhG,EAASL,OAAQqG,KAC7BC,EAAOjG,EAASgG,IAEPU,cACLwO,EAAejP,EAAKvG,SAASxD,QAEZyD,QACbqD,EAAK+R,YAAYG,EAAcjP,EAAKlF,MAAOvB,EAAKoC,GAAGoE,GAAIrE,GAASsE,EAAKQ,UAKjF,OAAOjH,CA7CP,CA8CJ,EAEAiW,aAAc,SAASjP,EAAO0H,GAC1B,IACIlI,EAAGxG,EAAMkW,EAAazP,EAAMsK,EAAWoF,EADvC3S,EAAOzC,KAEPqV,EAAU,CAAEjL,SAAU3H,EAAKH,QAASoD,KAAMA,GAC1C4P,EAAkB,YAAT3H,GAAgC,WAATA,EAEpC,SAAS4H,EAAgBrS,EAAMsG,GACvBtG,EAAKnD,GAAG,aACRmD,EAAK5D,KAAK,gCAAgCiE,KAAKzF,EAAc0L,GAGjEtG,EAAK5D,KAAK,4DACL+G,KAAKzJ,EAAS4M,GACd7N,KAAKkB,GAAe,GACpBwJ,KAAKxJ,GAAe,EAC7B,CAEA,GAAa,YAAT8Q,EACAjI,EAAOO,EAAM,IAEbhH,EAAOwD,EAAK+S,UAAU9P,EAAKC,MAChBrG,KAAK,SAAS2I,QAErBnD,YAAY,WACX2Q,YAAY,aAAc/P,EAAKiI,IAC/B+H,MAEDhQ,EAAKiI,IACLlL,EAAKoH,QAAQ5K,GAGjBA,EAAKsE,KAAKxF,IAAiB2H,EAAKiI,QAC7B,CACH,IAAIqH,EAAW/Z,EAAEuT,IAAIvI,GAAO,SAASP,GACjC,OAAOjD,EAAK+S,UAAU9P,EAAKC,KAAKxG,SAAS,MAC7C,IAMA,IAJImW,GACA7S,EAAKsS,QAAQ,WAAW,WAAa,MAAO,CAAEC,SAAUA,EAAY,IAGnEvP,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAC1B4P,EAAQ3P,KAAOA,EAAOO,EAAMR,GAE5BxG,GADAkW,EAAcH,EAASvP,IACJ3F,SAEfwV,IACI9Z,EAAMgS,QACNhS,EAAMgS,OAAO2H,GAEjBA,EAAYhW,SAAS,SAChB4U,KAAKtR,EAAKyH,UAAU2B,YAAYwJ,KAGrC1H,GAAS/Q,GAGT2Y,EAAgBJ,EAFhBnF,EAAYtK,EAAKiI,IAIjB1O,EAAKsE,KAAKzF,EAAckS,GAEpBvN,EAAKH,QAAQjD,WAAW4E,gBACxBsR,EAAgBtW,EAAKE,SAAS,YAAa6Q,GAE3CvN,EAAKyM,YAAYxJ,EAAKvG,SAAU6Q,GAEhCvN,EAAKmN,qBAAqB3Q,KAEd,YAAT0O,EACPlL,EAAKkT,QAAQ1W,EAAMyG,EAAMA,EAAKiI,IACd,WAATA,IACP1O,EAAKK,KAAK,4CAA4C+G,KAAK,YAAaX,EAAKiI,IAE7EyH,GAAe/Z,EAAa4D,GAAMc,GAhpDxC,YAkpDMd,EAAKiC,WAAWlD,GAEX0H,EAAKiI,KACFjI,EAAKwF,UACLxF,EAAKqK,IAAI,YAAY,GAGrBrK,EAAKQ,UACLR,EAAKqK,IAAI,YAAY,GAGzBqF,GAAc,EACdnW,EAAKsE,KAAKxF,GAAe,GACpBwF,KAAKvF,GAAe,IAG7ByE,EAAKoR,mBAAmB5U,EAAM,CAAC,EAAG,CAAE8H,QAASrB,EAAKiI,GAAQzH,UAAWkP,KAGrED,EAAY/V,QACZY,KAAKuI,QAAQ,aAAc,CAAE7C,KAAMyP,EAAaxZ,KAAM+J,EAAMkQ,GAAIla,IAIpE4Z,GACA7S,EAAKsS,QAAQ,WAAW,WACpB,MAAO,CACHC,SAAUA,EACVrZ,KAAMV,EAAEuT,IAAIvI,GAAO,SAASP,GACxB,MAAO,CAAC,CAAErF,SAAUqF,GACxB,IAER,GAER,CACJ,EAEAmQ,aAAc,SAASrV,EAAOyF,EAAOtG,GACjC,IACIR,EADQ/D,EAASuE,GACAR,WACjBuV,GAAa1U,KAAK2R,UAAUhS,GAEhC,GAAIK,KAAKqC,UAAY1C,EAAY,CAC7B,IAAImW,EAAY9V,KAAKE,WAAWvE,OAC5Boa,EAAY/V,KAAKE,WAAW2F,OAC5BmQ,EAAYD,EAAU3W,OAAS0W,EAAU1W,OAAS2W,EAAYD,EAClEtV,EAAQwV,EAAUzV,QAAQ0F,EAAM,GACpC,MAAWA,EAAM7G,SACboB,EAAQyF,EAAM,GAAGnG,SAASS,QAAQ0F,EAAM,YAGjCzF,GAASjD,IAChBiD,EAAQrB,EAASC,QAGrBY,KAAKwU,YAAYvO,EAAOzF,EAAOb,GAAY,SAAS+F,EAAM9F,GAElDY,GAASrB,EAASC,OAClBsG,EAAKvE,SAASvB,GAEd8F,EAAK3D,aAAa5C,EAASkC,GAAGb,GAEtC,GAAGkU,GAEEA,IACD1U,KAAK6T,mBAAmBlU,EAAY,CAAC,EAAG,CAAEuG,UAAWwO,IACrDtZ,EAASuE,GAAY8T,IAAI,UAAW,SAE5C,EAEAwC,iBAAkB,SAAStW,EAAYsG,EAAOzF,GAC1C,IAAIiF,EAAGtG,EAAU+W,EACb5T,EAAUtC,KAAKsC,QACfK,EAAeL,EAAQK,aACvBsB,EAAgB3B,EAAQjD,YAAciD,EAAQjD,WAAW4E,cAI7D,GAFA7I,EAASuE,GAAYwW,QAEhBlQ,EAAM7G,OAWP,IARAY,KAAK6V,aAAarV,EAAOyF,EAAOtG,GAEhCR,EAAW/D,EAASuE,GAAYR,WAE5BwD,GAAgBsB,GAChBjE,KAAK4P,qBAAqBzQ,EAAS+I,QAGlCzC,EAAI,EAAGA,EAAItG,EAASC,OAAQqG,IAC7ByQ,EAAQ/W,EAASkC,GAAGoE,GACpBzF,KAAKuI,QAAQ,aAAc,CACvB7C,KAAMwQ,EAAM/W,SAAS,OACrBxD,KAAMsK,EAAMR,GACZmQ,GAAIla,SAfZgF,GAAef,EAmBvB,EAEAyW,aAAc,SAASnQ,GACnB,IAAIoQ,EAAYrW,KAAKiV,aAAa,CAC1BhP,MAAOA,EACPrG,MAAO,CACHiL,YAAY,EACZ3E,UAAU,KAItB,GAAIlG,KAAKkD,KAAK9D,QAAUY,KAAKkD,KAAK,GAAGoT,cAAe,CAChDtW,KAAKuW,cAAc,WAEnB,IAAI3W,EAAQ3E,EAAEob,GAEdrW,KAAKkD,KACAK,KAAK,QAAS3D,EAAM2D,KAAK,UACzBwQ,KAAKnU,EAAMmU,OACpB,MACI/T,KAAKkD,KAAOlD,KAAKW,QAAQoT,KAAKsC,GAAWlX,SAAS,MAItD,IADA,IAAI6V,EAAWhV,KAAKkD,KAAK/D,SAAS,WACzBsG,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAC9BzF,KAAKuI,QAAQ,aAAc,CACvB7C,KAAMsP,EAAS3T,GAAGoE,GAClB9J,KAAMsK,EAAMR,GACZmQ,GAAIla,IAGZsE,KAAKuW,cAAc,UACvB,EAEA7J,QAAS,SAAS9H,GACd,IAOIa,EAPAxG,EAAO2F,EAAE3F,KACTuX,EAAS5R,EAAE4R,OACXvQ,EAAQrB,EAAEqB,MACVtG,EAAaK,KAAKW,QAClB2B,EAAUtC,KAAKsC,QACfK,EAAeL,EAAQK,aACvBsB,EAAgB3B,EAAQjD,YAAciD,EAAQjD,WAAW4E,cAG7D,IAAIjE,KAAK8P,MAAT,CAIA,IAAKrK,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAC1BzF,KAAK8C,gBAAgBmD,EAAMR,GAAGE,KAAOM,EAAMR,GAG/C,GAAIb,EAAE+I,MAAO,CACT,IAAK1H,EAAM,KAAOA,EAAM,GAAG4I,MACvB,OAGJ,OAAO7O,KAAKkV,aAAajP,EAAOrB,EAAE+I,MACtC,CAOA,GALI1O,IACAU,EAAaK,KAAKwV,UAAUvW,EAAK0G,KACjC3F,KAAK6D,UAAUlE,GAAY,IAG3BsE,GAA2B,UAAVuS,EAAoB,CACrC,IAAIC,GAAS,EAEb,IAAKhR,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAC1B,GAAI,YAAaQ,EAAMR,GAAI,CACvBgR,GAAS,EACT,KACJ,CAGJ,IAAKA,GAAUxX,GAAQA,EAAKmH,QACxB,IAAKX,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAC1BQ,EAAMR,GAAGW,SAAU,CAG/B,CAeA,GAbc,OAAVoQ,EACAxW,KAAK6V,aAAajR,EAAEpE,MAAOyF,EAAOtG,GACjB,UAAV6W,EACPxW,KAAK0W,QAAQ1W,KAAKwV,UAAUvP,EAAM,GAAGN,MAAM,GAC1B,cAAV6Q,EACPxW,KAAKkV,aAAajP,GACD,cAAVuQ,EACPxW,KAAKiW,iBAAiBtW,EAAYsG,EAAOrB,EAAEpE,QAE3CR,KAAKoW,aAAanQ,GAClBjG,KAAKqC,QAAQkB,KAAKpF,GAAW,IAGnB,UAAVqY,EACA,IAAK/Q,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,MACrB9C,GAAgBsD,EAAMR,GAAGS,UAAYD,EAAMR,GAAGkR,UAC/C1Q,EAAMR,GAAGmR,OAKrB5W,KAAKW,QAAQrB,KAAK,OAAOiE,KAAK,OAAQ,QAGtCvD,KAAKuI,QAAQrL,EAAW,CAAE+B,KAAMA,EAAOU,EAAazE,IAChD8E,KAAKE,WAAWlB,UAAYgB,KAAKsC,QAAQjD,WAAW4E,eACpDjE,KAAKkE,oBAAoBvE,EA9D7B,CAgEJ,EAEAiN,OAAQ,SAAShI,GACb,IAAI3F,EAAO2F,EAAE3F,MAAQe,KAAKwV,UAAU5Q,EAAE3F,KAAK0G,KACvCkR,EAAY7W,KAAKkK,UAAUkC,MAAM,CAAED,SAAUnM,KAAKsC,QAAQ6J,WAE1DlN,GACAe,KAAK6D,UAAU5E,GAAM,GACrBe,KAAK2R,UAAU1S,GAAM,GACrB3D,EAAS2D,GAAM6X,YAAYpb,EAAG4P,KAAKrQ,EAAE2C,GAAkB,CAAE0N,KAAM,qBAC/D1G,EAAE3F,KAAK8X,QAAO,KAEd/W,KAAK6D,WAAU,GACf7D,KAAKE,WAAWvE,KAAK,IACrBqE,KAAKqC,QAAQ0R,KAAK8C,GAE1B,EAEAvR,cAAe,SAASV,GACpBA,EAAEC,iBAEF7E,KAAKE,WAAW4D,MAAM9D,KAAK+D,sBAAsBC,KAAKhE,MAC1D,EAEA2G,OAAQ,SAAS2G,GACbtN,KAAKoU,cAAc9G,GAAO,SAAS9M,EAAOkF,GACtC1F,KAAKmQ,OAAOzK,GAAM,EACtB,GACJ,EAEAgB,SAAU,SAAS4G,GACftN,KAAKoU,cAAc9G,GAAO,SAAS9M,EAAOkF,GACtC1F,KAAKmQ,OAAOzK,GAAM,EACtB,GACJ,EAEAsR,OAAQ,SAAS1J,EAAO0J,GACC,kBAAV1J,GACP0J,EAAS1J,EACTA,EAAQtN,KAAKiG,SAEb+Q,EAA6B,GAApBC,UAAU7X,UAAgB4X,EAGvChX,KAAKoU,cAAc9G,GAAO,SAAS9M,EAAOkF,GACtC1F,KAAKK,SAASqF,GAAMqK,IAAI,UAAWiH,EACvC,GACJ,EAEAnN,QAAS,SAAS5K,GACd,IAAIwD,EAAOzC,KACP6J,EAAUpH,EAAKyU,SACf7U,EAAUI,EAAKJ,QAEnB,OAAI4U,UAAU7X,OAAS,GAAKH,GAAQA,EAAKG,QACjCyK,GACAA,EAAQvK,KAAK,SAAS2I,QAAQnD,YAAY,YAG9C+E,EAAUpH,EAAKyU,SAAWjc,EAAEgE,EAAMoD,GAASxC,QAAQnC,IAC3C4B,KAAK,SAAS2I,QAAQ3G,SAAS,gBACvCmB,EAAK0U,4BAKJtN,IACDA,EAAUpH,EAAKmO,aAAa3V,MAGzB4O,EACX,EAEAsN,wBAAyB,WACrB,IAAItN,EAAU7J,KAAKkX,SACfvc,EAAKkP,EAAQ,GAAGlP,IAAMqF,KAAKmE,QAC3B4N,EAAO/R,KAAKqC,QAAQ/C,KAAK,IAAMU,KAAKmE,SAEpC4N,EAAK3S,OAAS,GACd2S,EAAK7Q,WAAW,MAGpBlB,KAAKW,QAAQO,WAAWhD,GACxB2L,EAAQtG,KAAK,KAAM5I,GACnBqF,KAAKW,QAAQ4C,KAAKrF,EAAuBvD,EAC7C,EAEA8V,OAAQ,SAASxR,GACb,IAAIwD,EAAOzC,KACPqC,EAAUI,EAAKJ,QAEnB,IAAK4U,UAAU7X,OACX,OAAOiD,EAAQ/C,KAAK,eAAeO,QAAQnC,GAG/CuB,EAAOhE,EAAEgE,EAAMoD,GAASxC,QAAQnC,GAEhC2E,EAAQ/C,KAAK,eAAesU,MAAK,WAC7B,IAAIvT,EAAWoC,EAAKpC,SAASL,MACzBK,GACAA,EAAS0P,IAAI,YAAY,UAClB1P,EAAS6K,UAEhBjQ,EAAE+E,MAAM8E,YAAY,aAE5B,IAEI7F,EAAKG,SACLqD,EAAKpC,SAASpB,GAAM8Q,IAAI,YAAY,GACpCtN,EAAK8N,aAAetR,GAGxBwD,EAAK8F,QAAQ7L,EACjB,EAEAiZ,QAAS,SAAS1W,EAAMoB,EAAUsG,GAC9B,IAGIoQ,EAHAzU,EAAUtC,KAAKsC,QACf8Q,EAAW/X,EAAa4D,GACxBmY,EAAYzQ,EAAS,SAAW,WAGhCyM,EAASzX,KAAK,eAIlBob,EAAS1W,GAAYA,EAAS0W,SAE1BpQ,IAAWoQ,GACPzU,EAAQK,cACR3C,KAAK6D,UAAU5E,GAAM,GAGzBmU,EAASnS,SACTZ,EAASuW,SAET5W,KAAK6T,mBAAmB5U,EAAM,CAAC,EAAG,CAAEiH,SAAUS,IAEzCA,GACDyM,EAASK,IAAI,SAAUL,EAASiE,UAAU5D,IAAI,UAGlDL,EACKkE,WAAU,GAAM,GAChBC,aAAazb,EACV,CAAE0b,OAAO,GACTlV,EAAQkE,UAAU4Q,GAClB,CAAEK,SAAU,WACJ9Q,GACAyM,EAASK,IAAI,SAAU,GAE/B,MAIhB,EAEAtD,OAAQ,SAASlR,EAAM0H,GACnB1H,EAAOhE,EAAEgE,GAEJ3D,EAAS2D,KAIU,GAApBgY,UAAU7X,SACVuH,GAAU3G,KAAK2R,UAAU1S,IAG7Be,KAAK2R,UAAU1S,EAAM0H,GACzB,EAEAoD,QAAS,WACL,IAAItH,EAAOzC,KAEX9D,EAAO6S,GAAGhF,QAAQlH,KAAKJ,GAEvBA,EAAK9B,QAAQsJ,IAAI5N,GACjBoG,EAAK9B,QAAQrB,KAAK,iCAAiC2K,IAAI5N,GACvDoG,EAAKgC,cAAgB,KAErBhC,EAAK8K,oBAED9K,EAAKwE,UACLxE,EAAKwE,SAAS8C,UAGlBtH,EAAKK,gBAAkB,CAAC,EAExBtH,EAAMuO,QAAQtH,EAAKJ,SAEnBI,EAAKS,KAAOT,EAAK9B,QAAU8B,EAAKJ,QAAU,IAC9C,EAEAsP,UAAW,SAAS1S,EAAMmQ,EAAOsI,GAC7B,IACIrX,EADA0F,EAAevK,EAAM+H,KAAK,YAE1B2C,EAAWkJ,EACXgI,EAAYlR,EAAW,SAAW,WAEtC,GAAwB,GAApB+Q,UAAU7X,OAEV,OADAiB,EAAWL,KAAKuU,UAAUtV,GACS,SAA5BA,EAAKsE,KAAKwC,IAA6B1F,GAAYA,EAAS6F,SAGvE7F,EAAWL,KAAKK,SAASpB,GAErB5D,EAAa4D,GAAMtD,KAAK,eAIxB+b,GAAU1X,KAAKgP,SAASoI,EAAWnY,KAC/BiH,GACAjH,EAAKsE,KAAKwC,EAAc,QACxB9G,EAAKsE,KAAKtF,EAAe,UAEzBgB,EAAKiC,WAAW6E,GAChB9G,EAAKsE,KAAKtF,EAAe,UAGzBoC,IACAA,EAAS0P,IAAI,WAAY7J,GAEzBA,EAAW7F,EAAS6F,UAGhC,EAEArC,UAAW,SAAS5E,EAAM0Y,GACtB,IAAItV,EAAUrC,KAAKqC,QACfuV,EAAc5X,KAAKkK,UAAUgC,QAAQ,CAAEC,SAAUnM,KAAKsC,QAAQ6J,WAE1C,GAApB8K,UAAU7X,SACVuY,EAAe1Y,GAGXoD,EAAQ0R,KAAK6D,GAEbvV,EAAQ8T,QAGZ9T,EAAQkB,KAAKpF,EAAWwZ,KAExBrc,EAAS2D,GAAM6X,YACX7b,EAAE2C,GACG6X,YAAY,cAAekC,GAC3BlC,YAAY,SAAUkC,IAC/B1Y,EAAKsE,KAAKpF,EAAWwZ,GAE7B,EAEArZ,KAAM,SAASW,EAAMX,GACjB,IAAI+B,EAAWL,KAAKK,SAASpB,GACzBoP,EAAgBrO,KAAKsC,QAAQjE,EAASC,MACtCuQ,EAAQxO,EAASwO,QACjBzP,EAASiP,EAAcjP,OACvBuO,EAAQU,EAAcM,KAAKC,IAAIC,EAAOzP,EAAS,IAEnD,IAAId,EAGA,OAAO+B,EAASsN,GAFhBtN,EAAS0P,IAAIpC,EAAOrP,EAI5B,EAEAuZ,cAAe,SAAS5Y,GACpB,OAAOhE,EAAEgE,GAAMY,QAAQ,wBAAwBlE,KAAK,kBAAoBqE,IAC5E,EAEAC,gBAAiB,SAASR,EAAUG,EAAOD,EAAY0U,GACnD,IAAIyD,EACAC,EAAe/X,KAAK6X,cAAclY,GAAcC,GAChDoY,EAAiBD,EAAa7X,WAC9B+X,EAAchd,EAAEid,WAAWC,UAAUC,UAuBzC,OArBIzY,GAAcA,EAAW,IAAMoY,EAAa1V,QAAQ,MACpDyV,EAAoBC,EAAa1X,SAASV,IAEnBoX,WACnBgB,EAAalU,UAAUlE,GAAY,GACnCsY,EAAcH,EAAkBlB,QAGhCjX,GAAcK,KAAKkD,QACnB8U,EAAiBF,EAAkB3Y,WAEV6Y,aAA0B7b,IAC/C2b,EAAkBhK,gBAClBgK,EAAkBf,QAAO,GACzBiB,EAAiBF,EAAkB3Y,YAK/CM,EAAWO,KAAKqY,kBAAkB5Y,GAE3B4U,EAASxR,KAAKkV,EAAcC,EAAgBvY,EAAUwY,EACjE,EAEAI,kBAAmB,SAASpZ,GACxB,IAAqBiB,EAAYyF,EAvnET2S,EAunEpBjY,EAAWpB,EAYf,QAnoEwBqZ,EAynEHrZ,aAxnEEzD,EAAM+c,QAAY9c,OAAO8c,QAAUD,aAAe7c,OAAO8c,QAwnElD7Z,EAAaO,MACvCiB,EAAaF,KAAK6X,cAAc5Y,GAAMiB,WACtCyF,EAAM1K,EAAEgE,GAAMsE,KAAK/H,EAAM+H,KAAK,SAC9BlD,EAAWH,EAAWoU,SAAS3O,MAG3BtF,EAAWH,EAAWe,OAAOZ,KAI9BA,CACX,EAEAI,QAAS,SAAS9E,EAAMwE,EAAOK,GACrBL,aAAiB3E,EAAMG,KAAK6c,gBAM9BrY,EAAQA,EAAM8L,SALTjQ,EAAQmE,KACTA,EAAQ,CAACA,IAOjB,IAAIR,EAAahE,EAAKmE,SAStB,OAPIH,GAAcA,EAAWmO,gBACzBnO,EAAWwG,aAAc,EACzBxG,EAAWmO,iBAGfnS,EAAK8c,OAAOC,MAAM/c,EAAM,CAAE6E,EAAO,GAAI6M,OAAOlN,IAErCH,KAAKwV,UAAU7Z,EAAK6E,GAAOmF,IACtC,EAEAmE,YAAavK,EAAa,GAE1BwC,aAAcxC,EAAa,GAE3B6B,OAAQ,SAAS3B,EAAUE,EAAYgZ,GACnC,IAAI/Y,EAAQI,KAAKkD,KAEjB,KAAIvD,GAAcF,aAAoB8Y,QAAU5Y,EAAW,KAAOF,EAAS,IAU3E,OANAE,EAAaA,GAAcA,EAAWP,OAASO,EAAa,QAGxDC,EAAQxE,EAASuE,IAGdK,KAAKC,gBAAgBR,EAAUG,EAAOD,GAAY,SAASO,EAAYC,EAAOyY,GACjF,IAAIC,EACApW,EAAOzC,KAmBX,OANA4Y,EAAUE,MAAK,WACXD,EAZJ,WACQlZ,GACA8C,EAAKkP,UAAUhS,GAAY,GAAM,GAGrC,IAAIhE,EAAOuE,EAAWvE,OAClB6E,EAAQmO,KAAKoK,IAAIpd,EAAKyD,OAAQ,GAElC,OAAOqD,EAAKhC,QAAQ9E,EAAMwE,EAAOK,EACrC,CAGewY,IACXL,EAAUA,GAAW1d,EAAEge,MACfJ,EACZ,IAEOA,GAAY,IACvB,GACJ,EAEAnC,QAAS,SAASzX,EAAMia,GACpB,IACIvZ,EACAwZ,EAAazX,EAFbe,EAAOzC,KA4BX,OAxBAf,EAAOhE,EAAEgE,EAAMwD,EAAKJ,UAEXkB,KAAK,QAAUd,EAAKJ,QAAQkB,KAAKrF,IACtCuE,EAAKJ,QAAQnB,WAAWhD,GAG5B8B,KAAK+U,QAAQ,WAAW,WACpB,MAAO,CAAEC,SAAU/V,EAAK6T,MAC5B,IAEAnT,EAAaV,EAAKa,SAASA,SAC3BqZ,EAAcla,EAAK8S,OACnBrQ,EAAczC,EAAKqH,OAEnBrH,EAAKia,EAAW,SAAW,YAEvBvZ,EAAWoB,SAAS,YACpBL,GAAef,GACf8C,EAAKoR,mBAAmBlU,IAG5B8C,EAAKoR,mBAAmBsF,GACxB1W,EAAKoR,mBAAmBnS,GAEjBzC,CACX,EAEAgC,OAAQ,SAAShC,GACb,IAAIoB,EAAWL,KAAKK,SAASpB,GACzBoB,GACAL,KAAKE,WAAWe,OAAOZ,EAE/B,EAEA+Y,OAAQ,SAASna,GACb,OAAOe,KAAK0W,QAAQzX,GAAM,EAC9B,EAEAoa,WAAY,SAAS/a,GACjB,OAAOrD,EAAE+E,KAAKqC,SAAS/C,KAAK,SAASN,QAAO,SAASyG,EAAGpD,GACpD,OAAOpH,EAAEoH,GAAS/D,QAAUA,CAChC,IAAGuB,QAAQnC,EACf,EAEA8X,UAAW,SAAS7P,GAKhB,IAJA,IAEIzG,EAFA+G,EAAQjG,KAAKqC,QAAQ/C,KAAK,WAC1BwG,EAAUtK,EAAM+H,KAAK,OAGhBkC,EAAI,EAAGA,EAAIQ,EAAM7G,OAAQqG,IAC9B,GAAIQ,EAAMR,GAAG6T,aAAaxT,IAAYH,EAAK,CACvCzG,EAAS+G,EAAMR,GACf,KACJ,CAGJ,OAAOxK,EAAEiE,EACb,EAEAqa,WAAY,SAASC,EAAM/B,GACvB,IAAIrN,EAAWpK,KACXyZ,EAAUD,EAAKE,MAAM,GACrBrF,EAAWoD,GAAYxc,EAAEge,KAY7B,SAAStS,EAAOhM,GACZ,IAGIgf,EAHAza,EAASjE,EAAEid,WACXjZ,EAAOmL,EAASlK,WAAW4S,IAAInY,GAC/BoL,EAAevK,EAAM+H,KAAK,YA4B9B,OAzBItE,GACA0a,EAAcvP,EAASoL,UAAUvW,EAAK0G,KAElC1G,EAAK8X,UACL9X,EAAK8Q,IAAI,YAAY,GACrB4J,EAAYpW,KAAKwC,GAAc,GAC/B4T,EAAYpW,KAAKtF,GAAe,GAChCiB,EAAOiZ,YAKP/N,EAASvG,UAAU8V,GAAa,GAEhC1a,EAAK2X,OAAOgD,MAAK,WACb3a,EAAK8Q,IAAI,YAAY,GACrB4J,EAAYpW,KAAKwC,GAAc,GAC/B4T,EAAYpW,KAAKtF,GAAe,GAChCiB,EAAOiZ,SACX,MAGJjZ,EAAOiZ,UAGJjZ,EAAOkZ,SAClB,CAGAzR,EAAO8S,EAAQ,IAAIG,MA7CnB,SAASC,IACLJ,EAAQK,QAEJL,EAAQra,OACRuH,EAAO8S,EAAQ,IAAIG,KAAKC,GAExBxF,EAASxR,KAAKuH,EAEtB,GAsCJ,EAEA2P,WAAY,SAAS9a,GAGjB,IAFA,IAAIa,EAASb,GAAQA,EAAKU,aACtBqa,EAAU,GACPla,GAAUA,EAAOH,YACpBqa,EAAQC,QAAQna,EAAOnF,IACvBmF,EAASA,EAAOH,aAGpB,OAAOqa,CACX,EAEAE,SAAU,SAASjb,GACTA,aAAgBzD,EAAMG,KAAKwe,OAC7Blb,EAAOe,KAAKE,WAAW4S,IAAI7T,IAG/B,IAAI+a,EAAUha,KAAK+Z,WAAW9a,GAE9Be,KAAKuZ,WAAWS,EACpB,EAEAlF,YAAa,SAASxS,GASlB,OARKA,EAAQ1C,QACT0C,EAAQ1C,MAAQ,CAAC,GAGrB0C,EAAQ8H,SAAWpK,KAAKsC,QAExBA,EAAQqJ,EAAI3L,KAAKkK,UAEVlK,KAAKkK,UAAUxE,KAAKpD,EAC/B,EAEA2S,aAAc,SAAS3S,GACnB,IAAIG,EAAOzC,KAuBX,OArBAsC,EAAQsJ,YAAc,SAAStJ,GACvB,IAAIyR,EAAO,GACPtO,EAAI,EACJQ,EAAQ3D,EAAQ2D,MAChBmU,EAAMnU,EAAQA,EAAM7G,OAAS,EAC7BQ,EAAQ0C,EAAQ1C,MAIpB,IAFAA,EAAMR,OAASgb,EAER3U,EAAI2U,EAAK3U,IACZnD,EAAQ1C,MAAQA,EAChB0C,EAAQoD,KAAOO,EAAMR,GACrBnD,EAAQoD,KAAKlF,MAAQiF,EACrBsO,GAAQtR,EAAKqS,YAAYxS,GAG7B,OAAOyR,CACX,EAEJzR,EAAQqJ,EAAIlJ,EAAKyH,UAEVzH,EAAKyH,UAAUtK,MAAM0C,EAChC,IAGJ9G,EAAM6e,cAAcC,eAAe,WAAY,eAE/C5e,EAAG6e,OAAOpf,EACb,CAn7ED,CAm7EGM,OAAOD,MAAM+c","sourcesContent":["import './kendo.data.js';\nimport './kendo.treeview.draganddrop.js';\nimport './kendo.html.input.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"treeview\",\n    name: \"TreeView\",\n    category: \"web\",\n    description: \"The TreeView widget displays hierarchical data in a traditional tree structure,with support for interactive drag-and-drop operations.\",\n    depends: [ \"data\", \"html.input\", \"icons\" ],\n    features: [{\n        id: \"treeview-dragging\",\n        name: \"Drag & Drop\",\n        description: \"Support for drag & drop\",\n        depends: [ \"treeview.draganddrop\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        data = kendo.data,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n        template = kendo.template,\n        isArray = Array.isArray,\n        Widget = ui.Widget,\n        HierarchicalDataSource = data.HierarchicalDataSource,\n        keys = kendo.keys,\n        NS = \".kendoTreeView\",\n        TEMP_NS = \".kendoTreeViewTemp\",\n        SELECT = \"select\",\n        CHECK = \"check\",\n        NAVIGATE = \"navigate\",\n        EXPAND = \"expand\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        CHECKED = \"checked\",\n        INDETERMINATE = \"indeterminate\",\n        COLLAPSE = \"collapse\",\n        DRAGSTART = \"dragstart\",\n        DRAG = \"drag\",\n        DROP = \"drop\",\n        DRAGEND = \"dragend\",\n        DATABOUND = \"dataBound\",\n        ITEMSLOADED = \"itemsLoaded\",\n        LOADCOMPLETED = \"loadCompleted\",\n        REQUESTEND = \"requestEnd\",\n        CLICK = \"click\",\n        KENDOKEYDOWN = \"kendoKeydown\",\n        UNDEFINED = \"undefined\",\n        KSTATEHOVER = \"k-hover\",\n        KTREEVIEW = \"k-treeview\",\n        VISIBLE = \":visible\",\n        NODE = \".k-item\",\n        TOGGLE_ICON = \"k-toggle-icon\",\n        TOGGLE_ICON_ELM = `<span class='${TOGGLE_ICON}'></span>`,\n        STRING = \"string\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_BUSY = \"aria-busy\",\n        DISABLED = \"k-disabled\",\n        TreeView,\n        subGroup, nodeContents, nodeIcon,\n        spriteRe,\n        bindings = {\n            text: \"dataTextField\",\n            url: \"dataUrlField\",\n            spriteCssClass: \"dataSpriteCssClassField\",\n            imageUrl: \"dataImageUrlField\"\n        },\n        isJQueryInstance = function(obj) {\n            return (obj instanceof kendo.jQuery) || (window.jQuery && obj instanceof window.jQuery);\n        },\n        isDomElement = function(o) {\n            return (\n                typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n                o && typeof o === \"object\" && o.nodeType === 1 && typeof o.nodeName === STRING\n            );\n        };\n\n    function contentChild(filter) {\n        return function(node) {\n            var result = node.children(\".k-animation-container\");\n\n            if (!result.length) {\n                result = node;\n            }\n\n            return result.children(filter);\n        };\n    }\n\n    function templateNoWith(code) {\n        return kendo.template(code, { useWithBlock: false });\n    }\n\n    subGroup = contentChild(\".k-group\");\n    nodeContents = contentChild(\".k-group,.k-content\");\n    nodeIcon = function(node) {\n        return node.children(\"div\").find(`.k-treeview-toggle > .${TOGGLE_ICON}`);\n    };\n\n    function checkboxes(node) {\n         return node.find(\".k-checkbox-wrapper:first input[type=checkbox]\");\n    }\n\n    function insertAction(indexOffset) {\n        return function(nodeData, referenceNode) {\n            referenceNode = referenceNode.closest(NODE);\n\n            var group = referenceNode.parent(),\n                parentNode;\n\n            if (group.parent().is(\"li\")) {\n                parentNode = group.parent();\n            }\n\n            return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model) {\n                var referenceItem = this.dataItem(referenceNode);\n                var referenceNodeIndex = referenceItem && referenceNode.parent().children().length !== referenceItem.parent().length ? referenceItem.parent().indexOf(referenceItem) : referenceNode.index();\n\n                return this._insert(dataSource.data(), model, referenceNodeIndex + indexOffset);\n            });\n        };\n    }\n\n    spriteRe = /k-sprite/;\n\n    function moveContents(node, container) {\n        var tmp;\n\n        while (node && node.nodeName.toLowerCase() != \"ul\") {\n            tmp = node;\n            node = node.nextSibling;\n\n            if (tmp.nodeType == 3) {\n                tmp.nodeValue = kendo.trim(tmp.nodeValue);\n            }\n\n            if (spriteRe.test(tmp.className)) {\n                container.insertBefore(tmp, container.firstChild);\n            } else {\n                container.appendChild(tmp);\n            }\n        }\n    }\n\n    function updateNodeHtml(node) {\n        var wrapper = node.children(\"div\"),\n            group = node.children(\"ul\"),\n            toggleButton = wrapper.find(`.k-treeview-toggle > .${TOGGLE_ICON}`),\n            checkbox = node.children(\"input[type=checkbox]\"),\n            innerWrapper = wrapper.children(\".k-in\");\n\n        if (node.hasClass(\"k-treeview\")) {\n            return;\n        }\n\n        if (!wrapper.length) {\n            wrapper = $(\"<div />\").prependTo(node);\n        }\n\n        if (!toggleButton.length && group.length) {\n            toggleButton = $(`<span class='k-treeview-toggle'>${TOGGLE_ICON_ELM}</span>`).prependTo(wrapper);\n        } else if (!group.length || !group.children().length) {\n            toggleButton.parent().remove();\n            group.remove();\n            node.removeAttr(ARIA_EXPANDED);\n        }\n\n        if (checkbox.length) {\n            $(\"<span class='k-checkbox-wrapper' />\").appendTo(wrapper).append(checkbox);\n        }\n\n        if (!innerWrapper.length) {\n            innerWrapper = node.children(\"a\").eq(0).addClass(\"k-in k-link\");\n\n            if (!innerWrapper.length) {\n                innerWrapper = $(\"<span class='k-treeview-leaf k-in' />\");\n            }\n\n            innerWrapper.appendTo(wrapper);\n\n            if (wrapper.length) {\n                moveContents(wrapper[0].nextSibling, innerWrapper[0]);\n            }\n        }\n    }\n\n    TreeView = kendo.ui.DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this,\n                inferred = false,\n                hasDataSource = options && !!options.dataSource,\n                list;\n\n            if (isArray(options)) {\n                options = { dataSource: options };\n            }\n\n            if (options && typeof options.loadOnDemand == UNDEFINED && isArray(options.dataSource)) {\n                options.loadOnDemand = false;\n            }\n\n            Widget.prototype.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            that._dataSourceUids = {};\n\n            list = (element.is(\"ul\") && element) ||\n                   (element.hasClass(KTREEVIEW) && element.children(\"ul\"));\n\n            inferred = !hasDataSource && list.length;\n\n            if (inferred) {\n                options.dataSource.list = list;\n            }\n\n            that._animation();\n\n            that._accessors();\n\n            that._templates();\n\n            // render treeview if it's not already rendered\n            if (!element.hasClass(KTREEVIEW)) {\n                that._wrapper();\n\n                if (list) {\n                    that.root = element;\n                    that._group(that.wrapper);\n                }\n            } else {\n                // otherwise just initialize properties\n                that.wrapper = element;\n                that.root = element.children(\"ul\").eq(0);\n            }\n\n            that._applyCssClasses();\n            that._tabindex();\n\n            that.wrapper.attr(\"role\", \"tree\");\n            that.wrapper.find(\">ul\").attr(\"role\", \"none\");\n\n            that._dataSource(inferred);\n\n            that._attachEvents();\n\n            that._dragging();\n\n            if (!inferred) {\n                if (options.autoBind) {\n                    that._progress(true);\n                    that.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                }\n            } else {\n                that._syncHtmlAndDataSource();\n            }\n\n            if (options.checkboxes && options.checkboxes.checkChildren) {\n                that.updateIndeterminate();\n            }\n\n            if (that.element[0].id) {\n                that._ariaId = kendo.format(\"{0}_tv_active\", that.element[0].id);\n            } else {\n                that._ariaId = kendo.guid() + \"_tv_active\";\n            }\n\n            kendo.notify(that);\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                clickableItems = \".k-in:not(.k-selected,.k-disabled)\",\n                MOUSEENTER = \"mouseenter\";\n\n            that._clickHandler = that._click.bind(that);\n\n            that.wrapper\n                .on(MOUSEENTER + NS, \".k-in.k-selected\", function(e) { e.preventDefault(); })\n                .on(MOUSEENTER + NS, clickableItems, function() { $(this).addClass(KSTATEHOVER); })\n                .on(\"mouseleave\" + NS, clickableItems, function() { $(this).removeClass(KSTATEHOVER); })\n                .on(CLICK + NS, clickableItems, that._clickHandler)\n                .on(\"dblclick\" + NS, \".k-in:not(.k-disabled)\", that._toggleButtonClick.bind(that))\n                .on(CLICK + NS, `.${TOGGLE_ICON}`, that._toggleButtonClick.bind(that))\n                .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                .on(\"keypress\" + NS, that._keypress.bind(that))\n                .on(\"focus\" + NS, that._focus.bind(that))\n                .on(\"blur\" + NS, that._blur.bind(that))\n                .on(\"mousedown\" + NS, `.k-in,.k-checkbox-wrapper :checkbox,.${TOGGLE_ICON}`, that._mousedown.bind(that))\n                .on(\"change\" + NS, \".k-checkbox-wrapper :checkbox\", that._checkboxChange.bind(that))\n                .on(\"click\" + NS, \".k-request-retry\", that._retryRequest.bind(that))\n                .on(\"click\" + NS, \".k-link.k-disabled\", function(e) { e.preventDefault(); })\n                .on(\"click\" + NS, function(e) {\n                    var target = $(e.target);\n\n                    if (!target.is(\":kendoFocusable\") && !target.find(\"input,select,textarea,button,object\").is(\":kendoFocusable\")) {\n                        that.focus();\n                    }\n                });\n        },\n\n        _syncHtmlAndDataSource: function(root, dataSource) {\n            root = root || this.root;\n            dataSource = dataSource || this.dataSource;\n            var data = dataSource.view(),\n                uidAttr = kendo.attr(\"uid\"),\n                expandedAttr = kendo.attr(\"expanded\"),\n                checkboxesEnabled = this.options.checkboxes,\n                items = root.children(\"li\"),\n                i,\n                item,\n                dataItem,\n                uid,\n                itemCheckbox;\n\n            for (i = 0; i < items.length; i++) {\n                dataItem = data[i];\n                uid = dataItem.uid;\n                item = items.eq(i);\n                item.attr(\"role\", \"treeitem\")\n                    .attr(uidAttr, uid)\n                    .attr(ARIA_SELECTED, item.hasClass(\"k-selected\"));\n\n                dataItem.expanded = item.attr(expandedAttr) === \"true\";\n\n                if (dataItem.hasChildren) {\n                    item.attr(ARIA_EXPANDED, dataItem.expanded);\n                }\n\n                if (checkboxesEnabled) {\n                    itemCheckbox = checkboxes(item);\n                    dataItem.checked = itemCheckbox.prop(CHECKED);\n                    itemCheckbox.attr(\"id\", \"_\" + uid);\n                    itemCheckbox.next(\".k-checkbox-label\").attr(\"for\", \"_\" + uid);\n\n                    item.attr(ARIA_CHECKED, item.checked);\n                }\n\n                this._syncHtmlAndDataSource(item.children(\"ul\"), dataItem.children);\n            }\n        },\n\n        _animation: function() {\n            var options = this.options,\n                animationOptions = options.animation,\n                hasCollapseAnimation = animationOptions.collapse && \"effects\" in animationOptions.collapse,\n                collapse = extend({}, animationOptions.expand, animationOptions.collapse);\n\n            if (!hasCollapseAnimation) {\n                collapse = extend(collapse, { reverse: true });\n            }\n\n            if (animationOptions === false) {\n                animationOptions = {\n                    expand: { effects: {} },\n                    collapse: { hide: true, effects: {} }\n                };\n            }\n\n            animationOptions.collapse = extend(collapse, { hide: true });\n            options.animation = animationOptions;\n        },\n\n        _dragging: function() {\n            var enabled = this.options.dragAndDrop;\n            var dragging = this.dragging;\n\n            if (enabled && !dragging) {\n                var widget = this;\n\n                this.dragging = new ui.HierarchicalDragAndDrop(this.element, {\n                    reorderable: true,\n                    $angular: this.options.$angular,\n                    autoScroll: this.options.autoScroll,\n                    filter: \"div:not(.k-disabled) .k-in\",\n                    allowedContainers: \".k-treeview\",\n                    itemSelector: \".k-treeview .k-item\",\n                    hintText: this._hintText.bind(this),\n                    contains: function(source, destination) {\n                        return $.contains(source, destination);\n                    },\n                    dropHintContainer: function(item) {\n                        return item;\n                    },\n                    itemFromTarget: function(target) {\n                        var item = target.closest(\".k-treeview-top,.k-treeview-mid,.k-treeview-bot\");\n                        return {\n                            item: item,\n                            content: target.closest(\".k-in\"),\n                            first: item.hasClass(\"k-treeview-top\"),\n                            last: item.hasClass(\"k-treeview-bot\")\n                        };\n                    },\n                    dropPositionFrom: function(dropHint) {\n                        return dropHint.prevAll(\".k-in\").length > 0 ? \"after\" : \"before\";\n                    },\n                    dragstart: function(source) {\n                        widget.wrapper.attr(kendo.attr(\"scrollable\"), false);\n                        return widget.trigger(DRAGSTART, { sourceNode: source[0] });\n                    },\n                    drag: function(options) {\n                        widget.trigger(DRAG, {\n                            originalEvent: options.originalEvent,\n                            sourceNode: options.source[0],\n                            dropTarget: options.target[0],\n                            pageY: options.pageY,\n                            pageX: options.pageX,\n                            statusClass: options.status,\n                            setStatusClass: options.setStatus\n                        });\n                    },\n                    drop: function(options) {\n                        var dropTarget = $(options.dropTarget);\n                        var navigationTarget = dropTarget.closest(\"a\");\n\n                        if (navigationTarget && navigationTarget.attr(\"href\")) {\n                            widget._tempPreventNavigation(navigationTarget);\n                        }\n\n                        return widget.trigger(DROP, {\n                            originalEvent: options.originalEvent,\n                            sourceNode: options.source,\n                            destinationNode: options.destination,\n                            valid: options.valid,\n                            setValid: function(state) {\n                                this.valid = state;\n                                options.setValid(state);\n                            },\n                            dropTarget: options.dropTarget,\n                            dropPosition: options.position\n                        });\n                    },\n                    dragend: function(options) {\n                        var source = options.source;\n                        var destination = options.destination;\n                        var position = options.position;\n\n                        widget.wrapper.removeAttr(kendo.attr(\"scrollable\"));\n\n                        function triggerDragEnd(source) {\n                            if (widget.options.checkboxes && widget.options.checkboxes.checkChildren) {\n                                widget.updateIndeterminate();\n                            }\n\n                            widget.current(source);\n                            widget.element.focus();\n\n                            widget.trigger(DRAGEND, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: source && source[0],\n                                destinationNode: destination[0],\n                                dropPosition: position\n                            });\n                        }\n\n                        // perform reorder / move\n                        // different handling is necessary because append might be async in remote bound tree\n                        if (position == \"over\") {\n                            widget.append(source, destination, triggerDragEnd);\n                        } else {\n                            if (position == \"before\") {\n                                source = widget.insertBefore(source, destination);\n                            } else if (position == \"after\") {\n                                source = widget.insertAfter(source, destination);\n                            }\n\n                            triggerDragEnd(source);\n                        }\n                    }\n                });\n            } else if (!enabled && dragging) {\n                dragging.destroy();\n                this.dragging = null;\n            }\n        },\n\n        _tempPreventNavigation: function(node) {\n            node.on(CLICK + NS + TEMP_NS, function(ev) {\n                ev.preventDefault();\n                node.off(CLICK + NS + TEMP_NS);\n            });\n        },\n\n        _hintText: function(node) {\n            return this.templates.dragClue({\n                item: this.dataItem(node),\n                treeview: this.options\n            });\n        },\n\n        _templates: function() {\n            var that = this,\n                options = that.options,\n                fieldAccessor = that._fieldAccessor.bind(that);\n\n            if (options.template && typeof options.template == STRING) {\n                options.template = template(options.template);\n            } else if (!options.template) {\n                options.template = ({ item }) => {\n                    var text = fieldAccessor(\"text\")(item);\n\n                    if (typeof item.encoded != 'undefined' && item.encoded === false) {\n                        return `<span class='k-treeview-leaf-text'>${text}</span>`;\n                    }\n\n                    return `<span class='k-treeview-leaf-text'>${encode(text)}</span>`;\n                };\n            }\n\n            that._checkboxes();\n\n            that.templates = {\n                setAttributes: function(item) {\n                    var result = \"\";\n                    var attributes = item.attr || {};\n\n                    for (var attr in attributes) {\n                        if (attributes.hasOwnProperty(attr) && attr !== \"class\") {\n                            result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                        }\n                    }\n\n                    return result;\n                },\n                wrapperCssClass: function(group, item) {\n                    var result = \"k-item k-treeview-item\",\n                        index = item.index;\n\n                    if (group.firstLevel && index === 0) {\n                        result += \" k-first\";\n                    }\n\n                    if (index == group.length - 1) {\n                        result += \" k-last\";\n                    }\n\n                    return result;\n                },\n                cssClass: function(group, item) {\n                    var result = \"\",\n                        index = item.index,\n                        groupLength = group.length - 1;\n\n                    if (group.firstLevel && index === 0) {\n                        result += \"k-treeview-top \";\n                    }\n\n                    if (index === 0 && index != groupLength) {\n                        result += \"k-treeview-top\";\n                    } else if (index == groupLength) {\n                        result += \"k-treeview-bot\";\n                    } else {\n                        result += \"k-treeview-mid\";\n                    }\n\n                    return result;\n                },\n                textClass: function(item, isLink) {\n                    var result = \"k-treeview-leaf k-in\";\n\n                    if (isLink) {\n                        result += \" k-link\";\n                    }\n\n                    if (item.enabled === false) {\n                        result += \" k-disabled\";\n                    }\n\n                    if (item.selected === true) {\n                        result += \" k-selected\";\n                    }\n\n                    return result;\n                },\n                checkboxClass: function(item) {\n                    var result = \"k-checkbox\";\n\n                    if (item.enabled === false) {\n                        result += \" k-disabled\";\n                    }\n\n                    return result;\n                },\n                toggleButtonClass: function(item) {\n                    var result = \"k-treeview-toggle\";\n\n                    if (item.enabled === false) {\n                        result += \" k-disabled\";\n                    }\n\n                    return result;\n                },\n                toggleIcon: function(icon, item) {\n                    if (item.expanded !== true) {\n                        return ui.icon(icon, { icon: `caret-alt-${kendo.support.isRtl(that.element) ? 'left' : 'right'}` });\n                    } else {\n                        return ui.icon(icon, { icon: 'caret-alt-down' });\n                    }\n                },\n                groupAttributes: function(group) {\n                    var attributes = \"\";\n\n                    if (!group.firstLevel) {\n                        attributes = \"role='group'\";\n                    }\n\n                    return attributes + (group.expanded !== true ? \" style='display:none'\" : \"\");\n                },\n                groupCssClass: function(group) {\n                    var cssClass = \"k-group k-treeview-group\";\n\n                    if (group.firstLevel) {\n                        cssClass += \" k-treeview-lines\";\n                    }\n\n                    return cssClass;\n                },\n                dragClue: (data) => data.treeview.template(data),\n                group: (data) =>\n                `<ul class='${data.r.groupCssClass(data.group)}'${data.r.groupAttributes(data.group)}>` +\n                    data.renderItems(data) +\n                `</ul>`,\n                itemContent: (data) => {\n                    var imageUrl = fieldAccessor(\"imageUrl\")(data.item);\n                    var spriteCssClass = fieldAccessor(\"spriteCssClass\")(data.item);\n                    var result = \"\";\n\n                    if (imageUrl) {\n                        result += `<img class='k-image' alt='' src='${imageUrl}'>`;\n                    }\n\n                    if (spriteCssClass) {\n                        result += `<span class='k-sprite ${spriteCssClass}'></span>`;\n                    }\n\n                    result += data.treeview.template(data);\n\n                    return result;\n                },\n                itemElement: (data) => {\n                    var that = this,\n                        item = data.item,\n                        r = data.r;\n                    var url = fieldAccessor(\"url\")(item),\n                        tag = url ? 'a' : 'span',\n                        textAttr = url ? ' href=\"' + url + '\"' : '';\n                    var result = `<div class=\"${r.cssClass(data.group, item)}\">`;\n\n                    if (item.hasChildren) {\n                        result += `<span class='${r.toggleButtonClass(item)}'>` +\n                                    r.toggleIcon($(TOGGLE_ICON_ELM), item) +\n                                  `</span>`;\n                    }\n\n                    if (data.treeview.checkboxes) {\n                        result += `<span class='k-checkbox-wrapper' role='presentation'>` +\n                                    data.treeview.checkboxes.template(data) +\n                                  `</span>`;\n                    }\n\n                    result += `<${tag} class='${r.textClass(item, !!url)}'${textAttr}>` +\n                                 r.itemContent(data) +\n                              `</${tag}>`;\n\n                    result += \"</div>\";\n\n                    return result;\n                },\n                item: (data) => {\n                    var item = data.item,\n                        r = data.r;\n                    var result =\n                        `<li role='treeitem' class=\"${r.wrapperCssClass(data.group, item)}\"` +\n                        `${kendo.attr(\"uid\")}=\"${item.uid}\"` +\n                        `${r.setAttributes(item.toJSON ? item.toJSON() : item)} `;\n\n                    if (data.treeview.checkboxes) {\n                        result +=\n                            `aria-checked=\"${item.checked ? 'true' : 'false'}\" `;\n                    }\n\n                    result +=\n                        `aria-selected=\"${item.selected ? 'true' : 'false'}\" ` +\n                            `${item.enabled === false ? 'aria-disabled=\"true\"' : ''}`;\n\n                    if (item.hasChildren) {\n                        result += `aria-expanded=\"${item.expanded ? \"true\" : \"false\"}\" `;\n                    }\n\n                    result +=\n                        `data-expanded=\"${item.expanded ? \"true\" : \"false\"}\" >` +\n                        r.itemElement(data) +\n                        `</li>`;\n\n                    return result;\n                },\n                loading: ({ messages }) =>\n                    `<div class='k-icon k-i-loading'></div> ${encode(messages.loading)}`,\n                retry: ({ messages }) =>\n                    `${encode(messages.requestFailed)} ` +\n                    `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>${encode(messages.retry)}</span></button>`\n            };\n        },\n\n        items: function() {\n            return this.element.find(\".k-item > div:first-child\");\n        },\n\n        setDataSource: function(dataSource) {\n            var options = this.options;\n\n            options.dataSource = dataSource;\n\n            this._dataSourceUids = {};\n\n            this._dataSource();\n\n            if (options.checkboxes && options.checkboxes.checkChildren) {\n                this.dataSource.one(\"change\", this.updateIndeterminate.bind(this, null));\n            }\n\n            if (this.options.autoBind) {\n                this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n            }\n        },\n\n        _bindDataSource: function() {\n            var that = this;\n\n            that._refreshHandler = that.refresh.bind(that);\n            that._errorHandler = that._error.bind(that);\n            that._loadCompletedHandler = that._loadCompleted.bind(that);\n            that._requestEndHandler = that._dsRequestEnd.bind(that);\n            that._loadedNodes = [];\n\n            that.dataSource.bind(CHANGE, that._refreshHandler);\n            that.dataSource.bind(ERROR, that._errorHandler);\n\n            that.dataSource.bind(ITEMSLOADED, that._loadCompletedHandler);\n            that.dataSource.bind(REQUESTEND, that._requestEndHandler);\n        },\n\n        _dsRequestEnd: function(e) {\n            var that = this;\n\n            setTimeout(function() {\n                if (e.type === \"read\" && !that._loadCompletedFired) {\n                    that._attemptLoadCompleted();\n                }\n            });\n        },\n\n        _loadCompleted: function(e) {\n            var that = this;\n            that._loadedNodes = that._loadedNodes.concat(e.nodes);\n\n            if (!that.dataSource.loading() && that.options.loadOnDemand === false) {\n                that.trigger(LOADCOMPLETED, { nodes: that._loadedNodes });\n                that._loadedNodes = [];\n            }\n        },\n\n        _attemptLoadCompleted: function() { // If there are no items to be loaded ensure event is triggered on dataBound\n            var that = this,\n                items = that.dataSource.view(),\n                current, i;\n\n            if (that.options.loadOnDemand === false) {\n                for (i = 0; i < items.length; i++) {\n                    current = items[i];\n                    if (current.hasChildren && (!current.children || !current.children.data() || current.children.data().length === 0)) {\n                        return;\n                    }\n                }\n\n                that._loadCompletedFired = true;\n                that.trigger(LOADCOMPLETED, { nodes: [] });\n            }\n        },\n\n        _unbindDataSource: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource) {\n                dataSource.unbind(CHANGE, this._refreshHandler);\n                dataSource.unbind(ERROR, this._errorHandler);\n                dataSource.unbind(ITEMSLOADED, this._loadCompletedHandler);\n                dataSource.unbind(REQUESTEND, this._requestEndHandler);\n            }\n        },\n\n        _dataSource: function(silentRead) {\n            var that = this,\n                options = that.options,\n                dataSource = options.dataSource;\n\n            function recursiveRead(data) {\n                for (var i = 0; i < data.length; i++) {\n                    data[i]._initChildren();\n\n                    data[i].children.fetch();\n\n                    recursiveRead(data[i].children.view());\n                }\n            }\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            that._unbindDataSource();\n\n            if (!dataSource.fields) {\n                dataSource.fields = [\n                    { field: \"text\" },\n                    { field: \"url\" },\n                    { field: \"spriteCssClass\" },\n                    { field: \"imageUrl\" }\n                ];\n            }\n\n            that.dataSource = dataSource = HierarchicalDataSource.create(dataSource);\n\n            if (silentRead) {\n                dataSource.fetch();\n\n                recursiveRead(dataSource.view());\n            }\n\n            that._bindDataSource();\n        },\n\n        events: [\n            DRAGSTART,\n            DRAG,\n            DROP,\n            DRAGEND,\n\n            DATABOUND,\n            LOADCOMPLETED,\n\n            EXPAND,\n            COLLAPSE,\n            SELECT,\n            CHANGE,\n            NAVIGATE,\n            CHECK,\n            KENDOKEYDOWN\n        ],\n\n        options: {\n            name: \"TreeView\",\n            dataSource: {},\n            animation: {\n                expand: {\n                    effects: \"expand:vertical\",\n                    duration: 200\n                }, collapse: {\n                    duration: 100\n                }\n            },\n            messages: {\n                loading: \"Loading...\",\n                requestFailed: \"Request failed.\",\n                retry: \"Retry\"\n            },\n            dragAndDrop: false,\n            checkboxes: false,\n            autoBind: true,\n            autoScroll: false,\n            loadOnDemand: true,\n            template: \"\",\n            dataTextField: null,\n            size: \"medium\"\n        },\n\n        _accessors: function() {\n            var that = this,\n                options = that.options,\n                i, field, textField,\n                element = that.element;\n\n            for (i in bindings) {\n                field = options[bindings[i]];\n                textField = element.attr(kendo.attr(i + \"-field\"));\n\n                if (!field && textField) {\n                    field = textField;\n                }\n\n                if (!field) {\n                    field = i;\n                }\n\n                if (!isArray(field)) {\n                    field = [field];\n                }\n\n                options[bindings[i]] = field;\n            }\n        },\n\n        // generates accessor function for a given field name, honoring the data*Field arrays\n        _fieldAccessor: function(fieldName) {\n            var fieldBindings = this.options[bindings[fieldName]],\n                count = fieldBindings.length;\n\n            return (function(item) {\n                if (count === 0) {\n                    return kendo.getter(fieldName)(item);\n                }\n\n                return $.map(fieldBindings, function(x) {\n                    return function(d) { return kendo.getter(x)(d); };\n                })[Math.min(item.level(), count - 1)](item);\n            });\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._animation();\n\n            this._dragging();\n\n            this._accessors();\n\n            this._templates();\n        },\n\n        _trigger: function(eventName, node) {\n            return this.trigger(eventName, {\n                node: node.closest(NODE)[0]\n            });\n        },\n\n        _setChecked: function(datasource, value) {\n            if (!datasource || !kendo.isFunction(datasource.view)) {\n                return;\n            }\n\n            for (var i = 0, nodes = datasource.view(); i < nodes.length; i++) {\n                if (nodes[i].enabled !== false) {\n                    this._setCheckedValue(nodes[i], value);\n                }\n\n                if (nodes[i].children) {\n                    this._setChecked(nodes[i].children, value);\n                }\n            }\n        },\n\n        _setCheckedValue: function(node, value) {\n            node[CHECKED] = value;\n        },\n\n        _setIndeterminate: function(node) {\n            var group = subGroup(node),\n                siblings, length,\n                all = true,\n                i;\n\n            if (!group.length) {\n                return;\n            }\n\n            siblings = checkboxes(group.children());\n\n            length = siblings.length;\n\n            if (!length) {\n                return;\n            } else if (length > 1) {\n                for (i = 1; i < length; i++) {\n                    if (siblings[i].checked != siblings[i - 1].checked ||\n                        siblings[i].indeterminate || siblings[i - 1].indeterminate) {\n                        all = false;\n                        break;\n                    }\n                }\n            } else {\n                all = !siblings[0].indeterminate;\n            }\n\n            node.attr(ARIA_CHECKED, all ? siblings[0].checked : \"mixed\");\n\n            return checkboxes(node)\n                .data(INDETERMINATE, !all)\n                .prop(INDETERMINATE, !all)\n                .prop(CHECKED, all && siblings[0].checked);\n        },\n\n        updateIndeterminate: function(node) {\n            // top-down update of inital indeterminate state for all nodes\n            node = node || this.wrapper;\n\n            var subnodes = subGroup(node).children();\n            var i;\n            var checkbox;\n            var dataItem;\n\n            if (subnodes.length) {\n                for (i = 0; i < subnodes.length; i++) {\n                    this.updateIndeterminate(subnodes.eq(i));\n                }\n\n                if (node.is(\".k-treeview\")) {\n                    return;\n                }\n\n                checkbox = this._setIndeterminate(node);\n\n                dataItem = this.dataItem(node);\n\n                if (checkbox && checkbox.prop(CHECKED)) {\n                    dataItem.checked = true;\n                } else {\n                    if (dataItem) {\n                        delete dataItem.checked;\n                    }\n                }\n            }\n        },\n\n        _bubbleIndeterminate: function(node, skipDownward) {\n            // bottom-up setting of indeterminate state of parent nodes\n            if (!node.length) {\n                return;\n            }\n\n            if (!skipDownward) {\n                //update the indeterminate state of the node itself\n                this.updateIndeterminate(node);\n            }\n\n            var parentNode = this.parent(node),\n                checkbox;\n\n            if (parentNode.length) {\n                this._setIndeterminate(parentNode);\n\n                checkbox = parentNode.children(\"div\").find(\".k-checkbox-wrapper input[type=checkbox]\");\n\n                this._skip = true;\n                if (checkbox.prop(INDETERMINATE) === false) {\n                    this.dataItem(parentNode).set(CHECKED, checkbox.prop(CHECKED));\n                } else {\n                    // delete this.dataItem(parentNode).checked;\n                    this.dataItem(parentNode).set(CHECKED, false);\n                }\n\n                this._skip = false;\n\n                this._bubbleIndeterminate(parentNode, true);\n            }\n        },\n\n        _checkboxChange: function(e) {\n            var that = this;\n            var checkbox = $(e.target);\n            var isChecked = checkbox.prop(CHECKED);\n            var node = checkbox.closest(NODE);\n            var dataItem = this.dataItem(node);\n\n            if (this._preventChange) {\n                return;\n            }\n\n            if (dataItem.checked != isChecked) {\n                dataItem.set(CHECKED, isChecked);\n                node.attr(ARIA_CHECKED, isChecked);\n                this._trigger(CHECK, node);\n            }\n\n            if (checkbox.is(\":focus\")) {\n                that._trigger(NAVIGATE, node);\n                that.focus();\n            }\n        },\n\n        _toggleButtonClick: function(e) {\n            var node = $(e.currentTarget).closest(NODE);\n\n            if (node.is(\"[aria-disabled='true']\")) {\n                return;\n            }\n\n            this.toggle(node);\n        },\n\n        _mousedown: function(e) {\n            var that = this;\n            var currentTarget = $(e.currentTarget);\n            var node = $(e.currentTarget).closest(NODE);\n            var browser = kendo.support.browser;\n\n            if (node.is(\"[aria-disabled='true']\")) {\n                return;\n            }\n\n            //IE does not trigger change for indeterminate checkboxes\n            if ((browser.msie || browser.edge) && currentTarget.is(\":checkbox\")) {\n                if (currentTarget.prop(INDETERMINATE)) {\n                    that._preventChange = false;\n\n                    currentTarget.prop(CHECKED, !currentTarget.prop(CHECKED));\n                    currentTarget.trigger(CHANGE);\n\n                    currentTarget.on(CLICK + NS, function(e) {\n                        e.preventDefault();\n                    });\n\n                    that._preventChange = true;\n                } else {\n                    currentTarget.off(CLICK + NS);\n                    that._preventChange = false;\n                }\n            }\n\n            that._clickTarget = node;\n            that.current(node);\n        },\n\n        _focusable: function(node) {\n            return node && node.length && node.is(\":visible\") && !node.find(\".k-in\").first().hasClass(DISABLED);\n        },\n\n        _focus: function() {\n            var current = this.select(),\n                clickTarget = this._clickTarget;\n\n            // suppress initial focus state on touch devices (until keyboard is used)\n            if (kendo.support.touch) {\n                return;\n            }\n\n            if (clickTarget && clickTarget.length) {\n                current = clickTarget;\n            }\n\n            if (!this._focusable(current)) {\n                current = this.current();\n            }\n\n            if (!this._focusable(current)) {\n                current = this._nextVisible($());\n            }\n\n            this.current(current);\n        },\n\n        focus: function() {\n            var wrapper = this.wrapper,\n                scrollContainer = wrapper[0],\n                containers = [],\n                offsets = [],\n                documentElement = document.documentElement,\n                i;\n\n            do {\n                scrollContainer = scrollContainer.parentNode;\n\n                if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                    containers.push(scrollContainer);\n                    offsets.push(scrollContainer.scrollTop);\n                }\n            } while (scrollContainer != documentElement);\n\n            kendo.focusElement(wrapper);\n\n            for (i = 0; i < containers.length; i++) {\n                containers[i].scrollTop = offsets[i];\n            }\n        },\n\n        _blur: function() {\n            this.current().find(\".k-in\").first().removeClass(\"k-focus\");\n        },\n\n        _enabled: function(node) {\n            return !node.children(\"div\").children(\".k-in\").hasClass(DISABLED);\n        },\n\n        parent: function(node) {\n            var wrapperRe = /\\bk-treeview\\b(?!-)/,\n                itemRe = /\\bk-item\\b/,\n                result,\n                skipSelf;\n\n            if (typeof node == STRING) {\n                node = this.element.find(node);\n            }\n\n            if (!isDomElement(node)) {\n                node = node[0];\n            }\n\n            skipSelf = itemRe.test(node.className);\n\n            do {\n                node = node.parentNode;\n\n                if (itemRe.test(node.className)) {\n                    if (skipSelf) {\n                        result = node;\n                    } else {\n                        skipSelf = true;\n                    }\n                }\n            } while (!wrapperRe.test(node.className) && !result);\n\n            return $(result);\n        },\n\n        _nextVisible: function(node) {\n            var that = this,\n                expanded = that._expanded(node),\n                result;\n\n            function nextParent(node) {\n                while (node.length && !node.next().length) {\n                    node = that.parent(node);\n                }\n\n                if (node.next().length) {\n                    return node.next();\n                } else {\n                    return node;\n                }\n            }\n\n            if (!node.length || !node.is(\":visible\")) {\n                result = that.root.children().eq(0);\n            } else if (expanded) {\n                result = subGroup(node).children().first();\n\n                // expanded node with no children\n                if (!result.length) {\n                    result = nextParent(node);\n                }\n            } else {\n                result = nextParent(node);\n            }\n\n            return result;\n        },\n\n        _previousVisible: function(node) {\n            var that = this,\n                lastChild,\n                result;\n\n            if (!node.length || node.prev().length) {\n                if (node.length) {\n                    result = node.prev();\n                } else {\n                    result = that.root.children().last();\n                }\n\n                while (that._expanded(result)) {\n                    lastChild = subGroup(result).children().last();\n\n                    if (!lastChild.length) {\n                        break;\n                    }\n\n                    result = lastChild;\n                }\n            } else {\n                result = that.parent(node) || node;\n            }\n\n            return result;\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                target,\n                focused = that.current(),\n                expanded = that._expanded(focused),\n                checkbox = focused.find(\".k-checkbox-wrapper\").first().find(\":checkbox\"),\n                rtl = kendo.support.isRtl(that.element);\n\n            if (e.target != e.currentTarget) {\n                return;\n            }\n\n            if ((!rtl && key == keys.RIGHT) || (rtl && key == keys.LEFT)) {\n                if (expanded) {\n                    target = that._nextVisible(focused);\n                } else if (!focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                    that.expand(focused);\n                }\n            } else if ((!rtl && key == keys.LEFT) || (rtl && key == keys.RIGHT)) {\n                if (expanded && !focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                    that.collapse(focused);\n                } else {\n                    target = that.parent(focused);\n\n                    if (!that._enabled(target)) {\n                        target = undefined$1;\n                    }\n                }\n            } else if (key == keys.DOWN) {\n                target = that._nextVisible(focused);\n            } else if (key == keys.UP) {\n                target = that._previousVisible(focused);\n            } else if (key == keys.HOME) {\n                target = that._nextVisible($());\n            } else if (key == keys.END) {\n                target = that._previousVisible($());\n            } else if (key == keys.ENTER && !focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                if (!focused.find(\".k-in\").first().hasClass(\"k-selected\")) {\n                    if (!that._trigger(SELECT, focused)) {\n                        that.select(focused);\n                    }\n                }\n            } else if (key == keys.SPACEBAR && checkbox.length) {\n                if (!focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                    checkbox.prop(CHECKED, !checkbox.prop(CHECKED))\n                        .data(INDETERMINATE, false)\n                        .prop(INDETERMINATE, false);\n\n                    that._checkboxChange({ target: checkbox });\n                }\n                target = focused;\n            }\n\n            if (target) {\n                e.preventDefault();\n\n                if (focused[0] != target[0]) {\n                    that._trigger(NAVIGATE, target);\n                    that.current(target);\n                }\n            }\n        },\n\n        _keypress: function(e) {\n            var that = this;\n            var delay = 300;\n            var focusedNode = that.current().get(0);\n            var matchToFocus;\n            var key = e.key;\n            var isPrintable = key.length === 1;\n\n            if (!isPrintable) {\n                return;\n            }\n\n            if (!that._match) {\n                that._match = \"\";\n            }\n\n            that._match += key;\n            clearTimeout(that._matchTimer);\n            that._matchTimer = setTimeout(function() {\n                that._match = \"\";\n            }, delay);\n\n            matchToFocus = focusedNode &&\n                            that._matchNextByText(\n                                Array.prototype.indexOf.call(that.element.find(\".k-item\"),\n                                focusedNode), that._match\n                            );\n\n            if (!matchToFocus.length) {\n                matchToFocus = that._matchNextByText(-1, that._match);\n            }\n\n            if (matchToFocus.get(0) && matchToFocus.get(0) !== focusedNode) {\n                that._trigger(NAVIGATE, matchToFocus);\n                that.current(matchToFocus);\n            }\n        },\n\n        _matchNextByText: function(startIndex, text) {\n            var element = this.element;\n            var textNodes = element.find(\".k-in\").filter(function(i, element) {\n                return (i > startIndex &&\n                        $(element).is(\":visible\") &&\n                        $(element).text().toLowerCase().indexOf(text) === 0);\n            });\n\n            return textNodes.eq(0).closest(NODE);\n        },\n\n        _click: function(e) {\n            var that = this,\n                node = $(e.currentTarget),\n                contents = nodeContents(node.closest(NODE)),\n                href = node.attr(\"href\"),\n                shouldNavigate;\n\n            if (href) {\n                shouldNavigate = href == \"#\" || href.indexOf(\"#\" + this.element.id + \"-\") >= 0;\n            } else {\n                shouldNavigate = contents.length && !contents.children().length;\n            }\n\n            if (shouldNavigate) {\n                e.preventDefault();\n            }\n\n            if (!node.hasClass(\".k-selected\") && !that._trigger(SELECT, node)) {\n                that.select(node);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper, root,\n                wrapperClasses = \"k-treeview\";\n\n            if (element.is(\"ul\")) {\n                wrapper = element.wrap('<div />').parent();\n                root = element;\n            } else {\n                wrapper = element;\n                root = wrapper.children(\"ul\").eq(0);\n            }\n\n            that.wrapper = wrapper.addClass(wrapperClasses);\n            that.root = root;\n        },\n\n        _getSelectedNode: function() {\n            return this.element.find(\".k-selected\").closest(NODE);\n        },\n\n        _group: function(item) {\n            var that = this,\n                firstLevel = item.hasClass(KTREEVIEW),\n                group = {\n                    firstLevel: firstLevel,\n                    expanded: firstLevel || that._expanded(item)\n                },\n                groupElement = item.children(\"ul\");\n\n            groupElement\n                .addClass(that.templates.groupCssClass(group))\n                .css(\"display\", group.expanded ? \"\" : \"none\");\n\n            if (!firstLevel) {\n                groupElement.attr(\"role\", \"group\");\n            }\n\n            that._nodes(groupElement, group);\n        },\n\n        _nodes: function(groupElement, groupData) {\n            var that = this,\n                nodes = groupElement.children(\"li\"),\n                nodeData;\n\n            groupData = extend({ length: nodes.length }, groupData);\n\n            nodes.each(function(i, node) {\n                node = $(node);\n\n                nodeData = { index: i, expanded: that._expanded(node) };\n\n                updateNodeHtml(node);\n\n                that._updateNodeClasses(node, groupData, nodeData);\n\n                // iterate over child nodes\n                that._group(node);\n            });\n        },\n\n        _checkboxes: function() {\n            var options = this.options;\n            var checkboxes = options.checkboxes;\n            var defaultTemplate, checkbox;\n\n            if (checkboxes) {\n                defaultTemplate = kendo.html.renderCheckBox($(\"<input/>\"), $.extend({}, options, {\n                    rounded: \"medium\"\n                }));\n\n                defaultTemplate = defaultTemplate.replace(\">\", \"\");\n\n                checkbox = ({ item }) =>\n                defaultTemplate +\n                ` id=\"_${item.uid}\" aria-hidden=\"true\" type=\"checkbox\" tabindex=\"-1\"` +\n                `${checkboxes.name ? 'name=\"' + checkboxes.name + '\"' : ''} ` +\n                `${(item.enabled === false) ? 'disabled' : ''} ` +\n                `${item.checked ? 'checked' : ''}/>`;\n\n                checkboxes = extend({\n                    template: checkbox\n                }, options.checkboxes);\n\n                if (typeof checkboxes.template == STRING) {\n                    checkboxes.template = template(checkboxes.template);\n                }\n\n                options.checkboxes = checkboxes;\n            }\n        },\n\n        _updateNodeClasses: function(node, groupData, nodeData) {\n            var wrapper = node.children(\"div\"),\n                group = node.children(\"ul\"),\n                templates = this.templates;\n\n            if (node.hasClass(\"k-treeview\")) {\n                return;\n            }\n\n            nodeData = nodeData || {};\n            nodeData.expanded = typeof nodeData.expanded != UNDEFINED ? nodeData.expanded : this._expanded(node);\n            nodeData.index = typeof nodeData.index != UNDEFINED ? nodeData.index : node.index();\n            nodeData.enabled = typeof nodeData.enabled != UNDEFINED ? nodeData.enabled : !wrapper.children(\".k-in\").hasClass(\"k-disabled\");\n\n            groupData = groupData || {};\n            groupData.firstLevel = typeof groupData.firstLevel != UNDEFINED ? groupData.firstLevel : node.parent().parent().hasClass(KTREEVIEW);\n            groupData.length = typeof groupData.length != UNDEFINED ? groupData.length : node.parent().children().length;\n\n            // li\n            node.removeClass(\"k-first k-last\")\n                .addClass(templates.wrapperCssClass(groupData, nodeData));\n\n            // div\n            wrapper.removeClass(\"k-treeview-top k-treeview-mid k-treeview-bot\")\n                   .addClass(templates.cssClass(groupData, nodeData));\n\n            // chekbox\n            var checkbox = wrapper.find(\".k-checkbox\");\n            checkbox.removeClass(\"k-checkbox k-disabled\").addClass(templates.checkboxClass(nodeData));\n\n            // span / a\n            var textWrap = wrapper.children(\".k-in\");\n            var isLink = textWrap[0] && textWrap[0].nodeName.toLowerCase() == \"a\";\n            textWrap.removeClass(\"k-in k-link k-disabled\")\n                .addClass(templates.textClass(nodeData, isLink));\n\n            // toggle button\n            if (group.length || node.attr(\"data-hasChildren\") == \"true\") {\n                var toggleButton = wrapper.find(\".k-treeview-toggle\");\n                var toggleIcon = toggleButton.children(`.${TOGGLE_ICON}`);\n                toggleButton.removeClass(\"k-treeview-toggle k-disabled\").addClass(templates.toggleButtonClass(nodeData));\n\n                // renderv icon\n                templates.toggleIcon(toggleIcon, nodeData);\n\n\n                group.addClass(\"k-group k-treeview-group\");\n            }\n        },\n\n\n        _processNodes: function(nodes, callback) {\n            var that = this;\n            var items = that.element.find(nodes);\n            for (var i = 0; i < items.length; i++) {\n                callback.call(that, i, $(items[i]).closest(NODE));\n            }\n        },\n\n        dataItem: function(node) {\n            var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                dataSource = this.dataSource;\n\n            return dataSource && dataSource.getByUid(uid);\n        },\n\n        _dataItem: function(node) {\n            var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                dataSource = this.dataSource;\n\n            return dataSource && this._dataSourceUids[uid];\n        },\n\n        _insertNode: function(nodeData, index, parentNode, insertCallback, collapsed) {\n            var that = this,\n                group = subGroup(parentNode),\n                updatedGroupLength = group.children().length + 1,\n                childrenData,\n                groupData = {\n                    firstLevel: parentNode.hasClass(KTREEVIEW),\n                    expanded: !collapsed,\n                    length: updatedGroupLength\n                }, node, i, item, nodeHtml = \"\", firstChild, lastChild,\n                append = function(item, group) {\n                    item.appendTo(group);\n                };\n\n            for (i = 0; i < nodeData.length; i++) {\n                item = nodeData[i];\n\n                item.index = index + i;\n\n                nodeHtml += that._renderItem({\n                    group: groupData,\n                    item: item\n                });\n            }\n\n            node = $(nodeHtml);\n\n            if (!node.length) {\n                return;\n            }\n\n            that.angular(\"compile\", function() {\n                return {\n                    elements: node.get(),\n                    data: nodeData.map(function(item) {\n                        return { dataItem: item };\n                    })\n                };\n            });\n\n            if (!group.length) {\n                group = $(that._renderGroup({\n                    group: groupData\n                })).appendTo(parentNode);\n\n                parentNode.attr(ARIA_EXPANDED, true);\n            }\n\n            insertCallback(node, group);\n\n            if (parentNode.hasClass(\"k-item\")) {\n                updateNodeHtml(parentNode);\n                that._updateNodeClasses(parentNode, groupData, { expanded: !collapsed });\n            }\n\n            firstChild = node.prev().first();\n            lastChild = node.next().last();\n\n            that._updateNodeClasses(firstChild, {}, { expanded: firstChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n            that._updateNodeClasses(lastChild, {}, { expanded: lastChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n\n            // render sub-nodes\n            for (i = 0; i < nodeData.length; i++) {\n                item = nodeData[i];\n\n                if (item.hasChildren) {\n                    childrenData = item.children.data();\n\n                    if (childrenData.length) {\n                        that._insertNode(childrenData, item.index, node.eq(i), append, !item.expanded);\n                    }\n                }\n            }\n\n            return node;\n        },\n\n        _updateNodes: function(items, field) {\n            var that = this;\n            var i, node, nodeWrapper, item, isChecked, isCollapsed, kin;\n            var context = { treeview: that.options, item: item };\n            var render = field != \"expanded\" && field != \"checked\";\n\n            function setCheckedState(root, state) {\n                if (root.is(\".k-group\")) {\n                    root.find(\".k-item:not([aria-disabled])\").attr(ARIA_CHECKED, state);\n                }\n\n                root.find(\".k-checkbox-wrapper input[type=checkbox]:not([disabled])\")\n                    .prop(CHECKED, state)\n                    .data(INDETERMINATE, false)\n                    .prop(INDETERMINATE, false);\n            }\n\n            if (field == \"selected\") {\n                item = items[0];\n\n                node = that.findByUid(item.uid);\n                kin = node.find(\".k-in\").first();\n\n                kin.removeClass(\"k-hover\")\n                    .toggleClass(\"k-selected\", item[field])\n                    .end();\n\n                if (item[field]) {\n                    that.current(node);\n                }\n\n                node.attr(ARIA_SELECTED, !!item[field]);\n            } else {\n                var elements = $.map(items, function(item) {\n                    return that.findByUid(item.uid).children(\"div\");\n                });\n\n                if (render) {\n                    that.angular(\"cleanup\", function() { return { elements: elements }; });\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    context.item = item = items[i];\n                    nodeWrapper = elements[i];\n                    node = nodeWrapper.parent();\n\n                    if (render) {\n                        if (kendo.unbind) {\n                            kendo.unbind(nodeWrapper);\n                        }\n                        nodeWrapper.children(\".k-in\")\n                            .html(that.templates.itemContent(context));\n                    }\n\n                    if (field == CHECKED) {\n                        isChecked = item[field];\n\n                        setCheckedState(nodeWrapper, isChecked);\n\n                        node.attr(ARIA_CHECKED, isChecked);\n\n                        if (that.options.checkboxes.checkChildren) {\n                            setCheckedState(node.children(\".k-group\"), isChecked);\n\n                            that._setChecked(item.children, isChecked);\n\n                            that._bubbleIndeterminate(node);\n                        }\n                    } else if (field == \"expanded\") {\n                        that._toggle(node, item, item[field]);\n                    } else if (field == \"enabled\") {\n                        node.find(\".k-checkbox-wrapper input[type=checkbox]\").prop(\"disabled\", !item[field]);\n\n                        isCollapsed = !nodeContents(node).is(VISIBLE);\n\n                        node.removeAttr(ARIA_DISABLED);\n\n                        if (!item[field]) {\n                            if (item.selected) {\n                                item.set(\"selected\", false);\n                            }\n\n                            if (item.expanded) {\n                                item.set(\"expanded\", false);\n                            }\n\n                            isCollapsed = true;\n                            node.attr(ARIA_SELECTED, false)\n                                .attr(ARIA_DISABLED, true);\n                        }\n\n                        that._updateNodeClasses(node, {}, { enabled: item[field], expanded: !isCollapsed });\n                    }\n\n                    if (nodeWrapper.length) {\n                        this.trigger(\"itemChange\", { item: nodeWrapper, data: item, ns: ui });\n                    }\n                }\n\n                if (render) {\n                    that.angular(\"compile\", function() {\n                        return {\n                            elements: elements,\n                            data: $.map(items, function(item) {\n                                return [{ dataItem: item }];\n                            })\n                        };\n                    });\n                }\n            }\n        },\n\n        _appendItems: function(index, items, parentNode) {\n            var group = subGroup(parentNode);\n            var children = group.children();\n            var collapsed = !this._expanded(parentNode);\n\n            if (this.element === parentNode) {\n                var dataItems = this.dataSource.data();\n                var viewItems = this.dataSource.view();\n                var rootItems = viewItems.length < dataItems.length ? viewItems : dataItems;\n                index = rootItems.indexOf(items[0]);\n            } else if (items.length) {\n                index = items[0].parent().indexOf(items[0]);\n            }\n\n            if (typeof index == UNDEFINED) {\n                index = children.length;\n            }\n\n            this._insertNode(items, index, parentNode, function(item, group) {\n                // insert node into DOM\n                if (index >= children.length) {\n                    item.appendTo(group);\n                } else {\n                    item.insertBefore(children.eq(index));\n                }\n            }, collapsed);\n\n            if (!collapsed) {\n                this._updateNodeClasses(parentNode, {}, { expanded: !collapsed });\n                subGroup(parentNode).css(\"display\", \"block\");\n            }\n        },\n\n        _refreshChildren: function(parentNode, items, index) {\n            var i, children, child;\n            var options = this.options;\n            var loadOnDemand = options.loadOnDemand;\n            var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n\n            subGroup(parentNode).empty();\n\n            if (!items.length) {\n                updateNodeHtml(parentNode);\n            } else {\n                this._appendItems(index, items, parentNode);\n\n                children = subGroup(parentNode).children();\n\n                if (loadOnDemand && checkChildren) {\n                    this._bubbleIndeterminate(children.last());\n                }\n\n                for (i = 0; i < children.length; i++) {\n                    child = children.eq(i);\n                    this.trigger(\"itemChange\", {\n                        item: child.children(\"div\"),\n                        data: items[i],\n                        ns: ui\n                    });\n                }\n            }\n        },\n\n        _refreshRoot: function(items) {\n            var groupHtml = this._renderGroup({\n                    items: items,\n                    group: {\n                        firstLevel: true,\n                        expanded: true\n                    }\n                });\n\n            if (this.root.length && this.root[0].parentElement) {\n                this._angularItems(\"cleanup\");\n\n                var group = $(groupHtml);\n\n                this.root\n                    .attr(\"class\", group.attr(\"class\"))\n                    .html(group.html());\n            } else {\n                this.root = this.wrapper.html(groupHtml).children(\"ul\");\n            }\n\n            var elements = this.root.children(\".k-item\");\n            for (var i = 0; i < items.length; i++) {\n                this.trigger(\"itemChange\", {\n                    item: elements.eq(i),\n                    data: items[i],\n                    ns: ui\n                });\n            }\n            this._angularItems(\"compile\");\n        },\n\n        refresh: function(e) {\n            var node = e.node;\n            var action = e.action;\n            var items = e.items;\n            var parentNode = this.wrapper;\n            var options = this.options;\n            var loadOnDemand = options.loadOnDemand;\n            var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n            var i;\n\n            if (this._skip) {\n                return;\n            }\n\n            for (i = 0; i < items.length; i++) {\n                this._dataSourceUids[items[i].uid] = items[i];\n            }\n\n            if (e.field) {\n                if (!items[0] || !items[0].level) {\n                    return;\n                }\n\n                return this._updateNodes(items, e.field);\n            }\n\n            if (node) {\n                parentNode = this.findByUid(node.uid);\n                this._progress(parentNode, false);\n            }\n\n            if (checkChildren && action != \"remove\") {\n                var bubble = false;\n\n                for (i = 0; i < items.length; i++) {\n                    if (\"checked\" in items[i]) {\n                        bubble = true;\n                        break;\n                    }\n                }\n\n                if (!bubble && node && node.checked) {\n                    for (i = 0; i < items.length; i++) {\n                        items[i].checked = true;\n                    }\n                }\n            }\n\n            if (action == \"add\") {\n                this._appendItems(e.index, items, parentNode);\n            } else if (action == \"remove\") {\n                this._remove(this.findByUid(items[0].uid), false);\n            } else if (action == \"itemchange\") {\n                this._updateNodes(items);\n            } else if (action == \"itemloaded\") {\n                this._refreshChildren(parentNode, items, e.index);\n            } else {\n                this._refreshRoot(items);\n                this.element.attr(ARIA_BUSY, false);\n            }\n\n            if (action != \"remove\") {\n                for (i = 0; i < items.length; i++) {\n                    if (!loadOnDemand || items[i].expanded || items[i]._loaded) {\n                        items[i].load();\n                    }\n                }\n            }\n\n            this.wrapper.find(\">ul\").attr(\"role\", \"none\");\n\n\n            this.trigger(DATABOUND, { node: node ? parentNode : undefined$1 });\n            if (this.dataSource.filter() && this.options.checkboxes.checkChildren) {\n                this.updateIndeterminate(parentNode);\n            }\n        },\n\n        _error: function(e) {\n            var node = e.node && this.findByUid(e.node.uid);\n            var retryHtml = this.templates.retry({ messages: this.options.messages });\n\n            if (node) {\n                this._progress(node, false);\n                this._expanded(node, false);\n                nodeIcon(node).replaceWith(ui.icon($(TOGGLE_ICON_ELM), { icon: \"arrow-rotate-cw\" }));\n                e.node.loaded(false);\n            } else {\n                this._progress(false);\n                this.dataSource.data([]);\n                this.element.html(retryHtml);\n            }\n        },\n\n        _retryRequest: function(e) {\n            e.preventDefault();\n\n            this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n        },\n\n        expand: function(nodes) {\n            this._processNodes(nodes, function(index, item) {\n                this.toggle(item, true);\n            });\n        },\n\n        collapse: function(nodes) {\n            this._processNodes(nodes, function(index, item) {\n                this.toggle(item, false);\n            });\n        },\n\n        enable: function(nodes, enable) {\n            if (typeof nodes === \"boolean\") {\n                enable = nodes;\n                nodes = this.items();\n            } else {\n                enable = arguments.length == 2 ? !!enable : true;\n            }\n\n            this._processNodes(nodes, function(index, item) {\n                this.dataItem(item).set(\"enabled\", enable);\n            });\n        },\n\n        current: function(node) {\n            var that = this,\n                current = that._current,\n                element = that.element;\n\n            if (arguments.length > 0 && node && node.length) {\n                if (current) {\n                    current.find(\".k-in\").first().removeClass(\"k-focus\");\n                }\n\n                current = that._current = $(node, element).closest(NODE);\n                current.find(\".k-in\").first().addClass(\"k-focus\");\n                that._updateActiveDescendant();\n\n                return;\n            }\n\n            if (!current) {\n                current = that._nextVisible($());\n            }\n\n            return current;\n        },\n\n        _updateActiveDescendant: function() {\n            var current = this._current,\n                id = current[0].id || this._ariaId,\n                prev = this.element.find(\"#\" + this._ariaId);\n\n            if (prev.length > 0) {\n                prev.removeAttr(\"id\");\n            }\n\n            this.wrapper.removeAttr(ARIA_ACTIVEDESCENDANT);\n            current.attr(\"id\", id);\n            this.wrapper.attr(ARIA_ACTIVEDESCENDANT, id);\n        },\n\n        select: function(node) {\n            var that = this,\n                element = that.element;\n\n            if (!arguments.length) {\n                return element.find(\".k-selected\").closest(NODE);\n            }\n\n            node = $(node, element).closest(NODE);\n\n            element.find(\".k-selected\").each(function() {\n                var dataItem = that.dataItem(this);\n                if (dataItem) {\n                    dataItem.set(\"selected\", false);\n                    delete dataItem.selected;\n                } else {\n                    $(this).removeClass(\"k-selected\");\n                }\n            });\n\n            if (node.length) {\n                that.dataItem(node).set(\"selected\", true);\n                that._clickTarget = node;\n            }\n\n            that.trigger(CHANGE);\n        },\n\n        _toggle: function(node, dataItem, expand) {\n            var options = this.options;\n            var contents = nodeContents(node);\n            var direction = expand ? \"expand\" : \"collapse\";\n            var loaded;\n\n            if (contents.data(\"animating\")) {\n                return;\n            }\n\n            loaded = dataItem && dataItem.loaded();\n\n            if (expand && !loaded) {\n                if (options.loadOnDemand) {\n                    this._progress(node, true);\n                }\n\n                contents.remove();\n                dataItem.load();\n            } else {\n                this._updateNodeClasses(node, {}, { expanded: expand });\n\n                if (!expand) {\n                    contents.css(\"height\", contents.height()).css(\"height\");\n                }\n\n                contents\n                    .kendoStop(true, true)\n                    .kendoAnimate(extend(\n                        { reset: true },\n                        options.animation[direction],\n                        { complete: function() {\n                            if (expand) {\n                                contents.css(\"height\", \"\");\n                            }\n                        } }\n                    ));\n            }\n\n        },\n\n        toggle: function(node, expand) {\n            node = $(node);\n\n            if (!nodeIcon(node)) {\n                return;\n            }\n\n            if (arguments.length == 1) {\n                expand = !this._expanded(node);\n            }\n\n            this._expanded(node, expand);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.wrapper.off(NS);\n            that.wrapper.find(\".k-checkbox-wrapper :checkbox\").off(NS);\n            that._clickHandler = null;\n\n            that._unbindDataSource();\n\n            if (that.dragging) {\n                that.dragging.destroy();\n            }\n\n            that._dataSourceUids = {};\n\n            kendo.destroy(that.element);\n\n            that.root = that.wrapper = that.element = null;\n        },\n\n        _expanded: function(node, value, force) {\n            var expandedAttr = kendo.attr(\"expanded\");\n            var dataItem;\n            var expanded = value;\n            var direction = expanded ? \"expand\" : \"collapse\";\n\n            if (arguments.length == 1) {\n                dataItem = this._dataItem(node);\n                return node.attr(expandedAttr) === \"true\" || (dataItem && dataItem.expanded);\n            }\n\n            dataItem = this.dataItem(node);\n\n            if (nodeContents(node).data(\"animating\")) {\n                return;\n            }\n\n            if (force || !this._trigger(direction, node)) {\n                if (expanded) {\n                    node.attr(expandedAttr, \"true\");\n                    node.attr(ARIA_EXPANDED, \"true\");\n                } else {\n                    node.removeAttr(expandedAttr);\n                    node.attr(ARIA_EXPANDED, \"false\");\n                }\n\n                if (dataItem) {\n                    dataItem.set(\"expanded\", expanded);\n                    // necessary when expanding an item yields an error and the item is not expanded as a result\n                    expanded = dataItem.expanded;\n                }\n            }\n        },\n\n        _progress: function(node, showProgress) {\n            var element = this.element;\n            var loadingText = this.templates.loading({ messages: this.options.messages });\n\n            if (arguments.length == 1) {\n                showProgress = node;\n\n                if (showProgress) {\n                    element.html(loadingText);\n                } else {\n                    element.empty();\n                }\n\n                element.attr(ARIA_BUSY, showProgress);\n            } else {\n                nodeIcon(node).replaceWith(\n                    $(TOGGLE_ICON_ELM)\n                        .toggleClass('k-i-loading', showProgress)\n                        .toggleClass('k-icon', showProgress));\n                node.attr(ARIA_BUSY, showProgress);\n            }\n        },\n\n        text: function(node, text) {\n            var dataItem = this.dataItem(node),\n                fieldBindings = this.options[bindings.text],\n                level = dataItem.level(),\n                length = fieldBindings.length,\n                field = fieldBindings[Math.min(level, length - 1)];\n\n            if (text) {\n                dataItem.set(field, text);\n            } else {\n                return dataItem[field];\n            }\n        },\n\n        _objectOrSelf: function(node) {\n            return $(node).closest(\"[data-role=treeview]\").data(\"kendoTreeView\") || this;\n        },\n\n        _dataSourceMove: function(nodeData, group, parentNode, callback) {\n            var referenceDataItem,\n                destTreeview = this._objectOrSelf(parentNode || group),\n                destDataSource = destTreeview.dataSource;\n            var loadPromise = $.Deferred().resolve().promise();\n\n            if (parentNode && parentNode[0] != destTreeview.element[0]) {\n                referenceDataItem = destTreeview.dataItem(parentNode);\n\n                if (!referenceDataItem.loaded()) {\n                    destTreeview._progress(parentNode, true);\n                    loadPromise = referenceDataItem.load();\n                }\n\n                if (parentNode != this.root) {\n                    destDataSource = referenceDataItem.children;\n\n                    if (!destDataSource || !(destDataSource instanceof HierarchicalDataSource)) {\n                        referenceDataItem._initChildren();\n                        referenceDataItem.loaded(true);\n                        destDataSource = referenceDataItem.children;\n                    }\n                }\n            }\n\n            nodeData = this._toObservableData(nodeData);\n\n            return callback.call(destTreeview, destDataSource, nodeData, loadPromise);\n        },\n\n        _toObservableData: function(node) {\n            var dataItem = node, dataSource, uid;\n\n            if (isJQueryInstance(node) || isDomElement(node)) {\n                dataSource = this._objectOrSelf(node).dataSource;\n                uid = $(node).attr(kendo.attr(\"uid\"));\n                dataItem = dataSource.getByUid(uid);\n\n                if (dataItem) {\n                    dataItem = dataSource.remove(dataItem);\n                }\n            }\n\n            return dataItem;\n        },\n\n        _insert: function(data, model, index) {\n            if (!(model instanceof kendo.data.ObservableArray)) {\n                if (!isArray(model)) {\n                    model = [model];\n                }\n            } else {\n                // items will be converted to new Node instances\n                model = model.toJSON();\n            }\n\n            var parentNode = data.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            data.splice.apply(data, [ index, 0 ].concat(model));\n\n            return this.findByUid(data[index].uid);\n        },\n\n        insertAfter: insertAction(1),\n\n        insertBefore: insertAction(0),\n\n        append: function(nodeData, parentNode, success) {\n            var group = this.root;\n\n            if (parentNode && nodeData instanceof jQuery && parentNode[0] === nodeData[0]) {\n                return;\n            }\n\n            parentNode = parentNode && parentNode.length ? parentNode : null;\n\n            if (parentNode) {\n                group = subGroup(parentNode);\n            }\n\n            return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model, loadModel) {\n                var inserted;\n                var that = this;\n\n                function add() {\n                    if (parentNode) {\n                        that._expanded(parentNode, true, true);\n                    }\n\n                    var data = dataSource.data(),\n                        index = Math.max(data.length, 0);\n\n                    return that._insert(data, model, index);\n                }\n\n                loadModel.done(function() {\n                    inserted = add();\n                    success = success || $.noop;\n                    success(inserted);\n                });\n\n                return inserted || null;\n            });\n        },\n\n        _remove: function(node, keepData) {\n            var that = this,\n                parentNode,\n                prevSibling, nextSibling;\n\n            node = $(node, that.element);\n\n            if (node.attr(\"id\") === that.element.attr(ARIA_ACTIVEDESCENDANT)) {\n                that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n\n            this.angular(\"cleanup\", function() {\n                return { elements: node.get() };\n            });\n\n            parentNode = node.parent().parent();\n            prevSibling = node.prev();\n            nextSibling = node.next();\n\n            node[keepData ? \"detach\" : \"remove\"]();\n\n            if (parentNode.hasClass(\"k-item\")) {\n                updateNodeHtml(parentNode);\n                that._updateNodeClasses(parentNode);\n            }\n\n            that._updateNodeClasses(prevSibling);\n            that._updateNodeClasses(nextSibling);\n\n            return node;\n        },\n\n        remove: function(node) {\n            var dataItem = this.dataItem(node);\n            if (dataItem) {\n                this.dataSource.remove(dataItem);\n            }\n        },\n\n        detach: function(node) {\n            return this._remove(node, true);\n        },\n\n        findByText: function(text) {\n            return $(this.element).find(\".k-in\").filter(function(i, element) {\n                return $(element).text() == text;\n            }).closest(NODE);\n        },\n\n        findByUid: function(uid) {\n            var items = this.element.find(\".k-item\");\n            var uidAttr = kendo.attr(\"uid\");\n            var result;\n\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].getAttribute(uidAttr) == uid) {\n                    result = items[i];\n                    break;\n                }\n            }\n\n            return $(result);\n        },\n\n        expandPath: function(path, complete) {\n            var treeview = this;\n            var nodeIds = path.slice(0);\n            var callback = complete || $.noop;\n\n            function proceed() {\n                nodeIds.shift();\n\n                if (nodeIds.length) {\n                    expand(nodeIds[0]).then(proceed);\n                } else {\n                    callback.call(treeview);\n                }\n            }\n\n            function expand(id) {\n                var result = $.Deferred();\n                var node = treeview.dataSource.get(id);\n                var expandedAttr = kendo.attr(\"expanded\");\n                var nodeElement;\n\n                if (node) {\n                    nodeElement = treeview.findByUid(node.uid);\n\n                    if (node.loaded()) {\n                        node.set(\"expanded\", true);\n                        nodeElement.attr(expandedAttr, true);\n                        nodeElement.attr(ARIA_EXPANDED, true);\n                        result.resolve();\n                    } else {\n                        // manually show progress of the node\n                        // should be moved to `refresh`\n                        // if the datasource starts triggering a `requestStart` event for nodes\n                        treeview._progress(nodeElement, true);\n\n                        node.load().then(function() {\n                            node.set(\"expanded\", true);\n                            nodeElement.attr(expandedAttr, true);\n                            nodeElement.attr(ARIA_EXPANDED, true);\n                            result.resolve();\n                        });\n                    }\n                } else {\n                    result.resolve();\n                }\n\n                return result.promise();\n            }\n\n            // expand async nodes\n            expand(nodeIds[0]).then(proceed);\n        },\n\n        _parentIds: function(node) {\n            var parent = node && node.parentNode();\n            var parents = [];\n            while (parent && parent.parentNode) {\n                parents.unshift(parent.id);\n                parent = parent.parentNode();\n            }\n\n            return parents;\n        },\n\n        expandTo: function(node) {\n            if (!(node instanceof kendo.data.Node)) {\n                node = this.dataSource.get(node);\n            }\n\n            var parents = this._parentIds(node);\n\n            this.expandPath(parents);\n        },\n\n        _renderItem: function(options) {\n            if (!options.group) {\n                options.group = {};\n            }\n\n            options.treeview = this.options;\n\n            options.r = this.templates;\n\n            return this.templates.item(options);\n        },\n\n        _renderGroup: function(options) {\n            var that = this;\n\n            options.renderItems = function(options) {\n                    var html = \"\",\n                        i = 0,\n                        items = options.items,\n                        len = items ? items.length : 0,\n                        group = options.group;\n\n                    group.length = len;\n\n                    for (; i < len; i++) {\n                        options.group = group;\n                        options.item = items[i];\n                        options.item.index = i;\n                        html += that._renderItem(options);\n                    }\n\n                    return html;\n                };\n\n            options.r = that.templates;\n\n            return that.templates.group(options);\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"TreeView\", \"k-treeview-\");\n\n    ui.plugin(TreeView);\n})(window.kendo.jQuery);\n"]}