{"version":3,"file":"kendo.filemanager.js","names":["$","undefined$1","kendo","window","extend","deferred","Deferred","Class","Command","init","options","this","filemanager","CreateFolderCommand","fn","call","exec","that","commandStack","_commandStack","dataSource","_viewDataSource","removeProxy","_remove","bind","_item","_createNewModel","push","item","toJSON","fail","add","pushDestroy","RenameCommand","target","viewItem","_view","widgetComponent","dataItem","edit","_renameTreeViewItem","uid","data","treeView","getByUid","realItem","get","id","_prompt","type","defaultInput","name","done","newName","set","DeleteCommand","itemsToRemove","items","getSelected","is","length","_confirm","removeItems","_itemsToRemove","Array","isArray","_removeItem","itemToRemove","splice","then","remove","CopyCommand","targetDataSource","children","i","fileManagerNewItem","MoveCommand","promises","cloning","promise","_delete","whenAll","always","SortCommand","sortOptions","defaultSortOption","dir","field","sort","folderSortOption","SearchCommand","filter","operator","value","ChangeViewCommand","view","resize","OpenDialogCommand","dialog","open","console","warn","format","TogglePaneCommand","pane","resizable","getResizable","toggle","wrapper","find","handle","_resizeDraggable","CommandStack","_stack","_keys","guid","next","key","keys","resolve","command","reject","empty","ui","FileManagerCommand","commands","jQuery","Observable","encode","htmlEncode","SELECT","CHANGE","OPEN","KEYDOWN","KEYDOWNACTION","NS","fileManagerDraggables","fileManagerDragOrigin","Component","widget","element","Error","_bindEvents","_binding","_bound","ev","trigger","preventDefault","_setDSOptions","dataSourceOptions","_initDragAndDrop","dropFilter","draggable","kendoDraggable","hint","_hint","cursorOffset","top","left","holdToDrag","ignore","hold","_hold","userEvents","minHold","droptarget","kendoDropTargetArea","drop","_onDrop","dragenter","dropTarget","addClass","dragleave","removeClass","currentTarget","selectable","clear","select","cancel","selectedItems","icon","messages","isDirectory","targetId","itemIds","refresh","setDataSource","destroy","ViewComponent","ViewComponents","registerViewComponent","componentName","component","getViewComponent","ListView","explicitOptions","defaultOptions","ariaLabel","kendoKeydown","_kendoKeydown","listView","isLocalBinding","layout","flex","direction","wrap","support","mobileOS","template","extension","getFileGroup","iconClass","size","editTemplate","navigatable","_select","on","_dblClick","_mousedown","_keydown","_keydownAction","sender","isDirty","_modelFromElement","editable","dirty","_closeEditable","dataItems","entries","keyCode","ESC","node","closest","which","ENTER","preventKendoKeydown","_handleEnterKey","current","_triggerOpen","entry","addFolder","selected","off","TreeView","dataTextField","_refreshDataSource","action","parentNode","treeEl","activeDescendant","attr","map","hasChildren","findByUid","_progress","each","index","append","_shouldFocus","focus","existingItem","_nextVisible","removeAttr","_navigate","_expand","entryId","path","noop","selectedItem","reload","read","Grid","_setupColumns","grid","mode","confirmation","sortable","columns","title","nameField","dateCreatedField","sizeField","getFileSizeMessage","table","_toggleFocusable","saveRow","F2","setTimeout","_editContainer","_tryCancel","cancelChanges","val","state","addBack","toggleClass","container","model","_destroyEditable","_displayRow","addRow","editRow","Node","HierarchicalDataSource","DataSource","schemas","fields","defaultValue","hasDirectories","created","createdUtc","modified","modifiedUtc","FileEntry","define","getter","isFunction","isDirectoryObject","_initChildren","transport","parameterMap","FileManagerDataSource","_childrenOptions","parent","e","collection","_updateChildrenField","isNew","_defaultId","fileEntry","serverFiltering","_hierarchicalFilter","schema","modelBase","LocalTransport","_attachBubbleHandlers","insert","result","_cleanDestroyed","_hasDirectories","_destroyed","create","_dataSource","observableFileManagerData","array","fetch","_data","ContextMenu","ACTION","FileManagerContextMenu","_overrideTemplates","_restrictDefaultItems","_extendItems","_onSelect","_onOpen","templates","sprite","spriteCssClass","defaultItems","rename","text","delete","events","concat","isPlainObject","Object","_extendItem","isEmptyObject","args","__meta__","category","description","depends","features","DataBoundWidget","outerHeight","_outerHeight","NAVIGATE","ERROR","CLOSE","DATABINDING","DATABOUND","DROP","EXECUTE","COMMAND","TREE_TYPE","DOT","fileManagerStyles","header","navigation","contentContainer","content","preview","toolbar","treeview","breadcrumb","list","upload","uploadDialog","splitBar","splitBarHorizontal","splitBarHover","splitBarIcon","splitBarNavigation","splitBarPreview","fileManagerTemplateStyles","filePreview","fileInfo","fileName","fileMeta","metaLabel","metaValue","FileManager","deepExtend","_wrapper","_renderHeader","_renderContentContainer","_initContextMenu","_renderNavigation","_renderContent","_renderPreview","_initUploadDialog","_resizable","_attachKeyDown","notify","height","initialView","contextMenu","uploadUrl","views","dialogs","width","moveConfirm","closable","deleteConfirm","renamePrompt","previewPane","metaFields","noFileTemplate","styles","noFileSelected","singleFileTemplate","selection","Date","toString","multipleFilesTemplate","createFolder","sortDirection","sortDirectionAsc","sortDirectionDesc","sortField","typeField","dateModifiedField","gridView","search","details","detailsChecked","detailsUnchecked","listLabel","gridLabel","treeLabel","okText","close","defaultTools","rules","remote","buttons","showText","togglable","group","menuButtons","changeView","spacer","componentOptions","overflow","checked","unchecked","commandOn","placeholder","F10","first","typeSortOrder","nameSortOrder","autoSync","_errorHandler","unbind","_changeHandler","_error","_change","xhr","status","statusText","_resizeHandler","onResize","_initToolbar","_tabIndex","menuOptions","executeCommand","_cacheFocus","_initTreeView","_initBreadcrumb","_initView","_isToolEnabled","_initUpload","hide","previewContainer","_setPreviewPaneContent","previewTemplate","previewPaneMessages","previewPaneOptions","html","toolbarElement","toolbarOptions","tools","_processTools","parentMessages","ToolBar","_toolbarClick","forEach","t","hidden","b","toolName","found","treeViewElement","_load","_drop","indexOf","DELETE","confirm","kendoConfirm","_restoreFocus","prompt","kendoPrompt","activeElement","document","popup","visible","hasClass","_focusElement","_viewType","viewWrapper","breadcrumbElement","breadcrumbOptions","change","_breadcrumbChange","Breadcrumb","substring","shift","uploadInstance","dialogMessages","dialogElement","dialogOptions","modal","actions","primary","_clearUploadFilesList","_shouldInitUpload","Dialog","_toggleUploadDropZone","shouldInit","async","saveUrl","uploadElement","uploadOptions","autoUpload","dropZone","Upload","_sendUploadPathParameter","_success","clearAllFiles","zone","setOptions","source","_createResizableSplitBar","cssClass","hover","_initResizableNavigation","contentWrapperWidth","navigationWrapperWidth","contentWrapper","navigationWrapper","insertAfter","end","kendoResizable","start","delta","x","initialDelta","isRtl","getKendoResizable","_initResizablePreview","previewWrapperWidth","previewWrapper","insertBefore","_open","_cancel","el","join","commandName","commandOptions","navigate","load","sync","res","response","_navigateToParent","loaded","parentNodePath","_buildBreadcrumbPath","reverse","_adjustDimensions","gridSelector","listViewSelector","totalHeight","toolbarHeight","breadcrumbHeight","_resize","getSize","dimensions","_path","replace","isRoot","_sort","unbindResize","plugin"],"sources":["kendo.filemanager.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.listview.js';\nimport './kendo.treeview.js';\nimport './kendo.icons.js';\nimport './kendo.data.js';\nimport './kendo.menu.js';\nimport './kendo.toolbar.js';\nimport './kendo.breadcrumb.js';\nimport './kendo.upload.js';\nimport './kendo.dialog.js';\nimport './kendo.resizable.js';\nimport './kendo.switch.js';\nimport './kendo.textbox.js';\n\n(function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            deferred = $.Deferred,\n            Class = kendo.Class;\n\n        var Command = Class.extend({\n            init: function(options) {\n                this.options = options;\n                this.filemanager = options.filemanager;\n            }\n        });\n\n        var CreateFolderCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    filemanager = that.filemanager,\n                    commandStack = filemanager._commandStack,\n                    dataSource = filemanager._viewDataSource || filemanager.dataSource,\n                    removeProxy = that._remove.bind(that);\n\n                that._item = dataSource._createNewModel();\n\n                commandStack.push({ item: that._item.toJSON() }).fail(removeProxy);\n                dataSource.add(that._item);\n            },\n            _remove: function() {\n                var that = this,\n                    filemanager = that.filemanager,\n                    dataSource = filemanager._viewDataSource || filemanager.dataSource;\n\n                dataSource.pushDestroy(that._item);\n            }\n        });\n\n        var RenameCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    target = that.options.target,\n                    filemanager = that.filemanager,\n                    commandStack = filemanager._commandStack,\n                    viewItem = filemanager._view.widgetComponent.dataItem(target);\n\n                if (target && viewItem) {\n                    commandStack.push({ target: target, item: viewItem });\n                    that.filemanager._view.edit(target);\n                } else {\n                    that._renameTreeViewItem(target);\n                }\n            },\n            _renameTreeViewItem: function(target) {\n                var that = this,\n                    filemanager = that.filemanager,\n                    commandStack = filemanager._commandStack,\n                    uid = target.data(\"uid\"),\n                    item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid),\n                    realItem = that.filemanager.dataSource.get(item.id);\n\n                that.filemanager._prompt({\n                    type: \"rename\",\n                    defaultInput: realItem.name,\n                    target: target\n                }).done(function(newName) {\n                    commandStack.push({ target: target, item: realItem });\n                    realItem.set(\"name\", newName);\n                });\n            }\n        });\n\n        var DeleteCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    target = that.options.target,\n                    filemanager = that.filemanager,\n                    items = filemanager.getSelected(),\n                    viewItem = that.filemanager._view.widgetComponent.dataItem(target),\n                    itemsToRemove;\n\n                if (target && target.is(\".k-selected\") && items && items.length) {\n                    itemsToRemove = items;\n                } else if (target && viewItem) {\n                    itemsToRemove = viewItem;\n                } else if (target) {\n                    var uid = target.data(\"uid\");\n                    var item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid);\n                    var realItem = that.filemanager.dataSource.get(item.id);\n\n                    itemsToRemove = realItem;\n                }\n\n                filemanager._confirm({\n                    type: \"delete\",\n                    target: target\n                })\n                .done(function() {\n                    that.removeItems(itemsToRemove);\n                });\n            },\n            removeItems: function(items) {\n                var that = this;\n\n                that._itemsToRemove = Array.isArray(items) ? items : [items];\n\n                that._removeItem();\n            },\n            _removeItem: function() {\n                var that = this,\n                    filemanager = that.filemanager,\n                    commandStack = filemanager._commandStack,\n                    dataSource = filemanager.dataSource,\n                    itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0,1)[0];\n\n                if (itemToRemove) {\n                    commandStack.push({ item: itemToRemove })\n                        .then(that._removeItem.bind(that), that._removeItem.bind(that));\n\n                    dataSource.remove(itemToRemove);\n                }\n            }\n        });\n\n        var CopyCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                filemanager = that.filemanager,\n                dataSource = filemanager.dataSource,\n                commandStack = filemanager._commandStack,\n                items = that.options.items,\n                target = dataSource.get(that.options.target),\n                targetDataSource = target.children;\n\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]).toJSON();\n                    item.fileManagerNewItem = true;\n                    commandStack.push({ item: item, target: target });\n                    targetDataSource.add(item);\n                }\n            }\n        });\n\n        var MoveCommand = Command.extend({\n            init: function(options) {\n                var that = this;\n                Command.fn.init.call(that, options);\n                that._itemsToRemove = [];\n            },\n            exec: function() {\n                var that = this,\n                    filemanager = that.filemanager,\n                    commandStack = filemanager._commandStack,\n                    dataSource = filemanager.dataSource,\n                    items = that.options.items,\n                    target = dataSource.get(that.options.target),\n                    targetDataSource = target.children,\n                    promises = [];\n\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]);\n                    var cloning = item.toJSON();\n                    cloning.fileManagerNewItem = true;\n\n                    var promise = commandStack.push({ item: item, target: target })\n                        .then(that._delete.bind(that));\n\n                        promises.push(promise);\n                        targetDataSource.add(cloning);\n                }\n\n                kendo.whenAll(promises).always(that._removeItem.bind(that));\n            },\n            _delete: function(data) {\n                var that = this;\n                that._itemsToRemove.push(data.item);\n            },\n            _removeItem: function() {\n                var that = this,\n                    filemanager = that.filemanager,\n                    commandStack = filemanager._commandStack,\n                    dataSource = filemanager.dataSource,\n                    itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0,1)[0];\n\n                if (itemToRemove) {\n                    commandStack.push({ item: itemToRemove })\n                        .then(that._removeItem.bind(that), that._removeItem.bind(that));\n\n                    dataSource.remove(itemToRemove);\n                }\n            }\n        });\n\n        var SortCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    filemanager = that.filemanager,\n                    sortOptions = filemanager.defaultSortOption;\n\n                extend(sortOptions, {\n                    dir: options.dir,\n                    field: options.field\n                });\n\n                filemanager._view.widgetComponent.dataSource.sort([ filemanager.folderSortOption, sortOptions ]);\n            }\n        });\n\n        var SearchCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    filemanager = that.filemanager,\n                    filter = {\n                        field: options.field,\n                        operator: options.operator,\n                        value: options.value || \"\"\n                    };\n\n                filemanager._view.widgetComponent.dataSource.filter(filter);\n            }\n        });\n\n        var ChangeViewCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    filemanager = that.filemanager;\n\n                filemanager.view(options.value);\n                filemanager.resize(true);\n            }\n        });\n\n        var OpenDialogCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    filemanager = that.filemanager,\n                    dialog = filemanager[that.options.type];\n\n                if (dialog) {\n                    dialog.open();\n                } else {\n                    window.console.warn(kendo.format(\"The {0} dialog is not available!\", that.options.type));\n                }\n            }\n        });\n\n        var TogglePaneCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    filemanager = that.filemanager,\n                    pane = filemanager[that.options.type],\n                    resizable = that.getResizable();\n\n                if (pane) {\n                    pane.toggle();\n\n                    if (resizable) {\n                        filemanager.wrapper\n                            .find(resizable.options.handle)\n                            .toggle();\n                    }\n                }\n            },\n            getResizable: function() {\n                var that = this,\n                    filemanager = that.filemanager,\n                    type = that.options.type;\n\n                if (!filemanager._resizeDraggable) {\n                    return;\n                }\n\n                return filemanager._resizeDraggable[type];\n            }\n        });\n\n        var CommandStack = Class.extend({\n            init: function() {\n                var that = this;\n\n                that._stack = {};\n                that._keys = [];\n            },\n            push: function(data) {\n                var that = this,\n                    guid = kendo.guid();\n\n                that._keys.push(guid);\n                that._stack[guid] = {\n                    guid: guid,\n                    data: data,\n                    deferred: deferred()\n                };\n\n                return that._stack[guid].deferred;\n            },\n            next: function() {\n                var that = this,\n                    key = that.keys().splice(0,1),\n                    nextCommand = that._stack[key];\n\n                return nextCommand;\n            },\n            resolve: function(command) {\n                var that = this;\n                delete that._stack[command.guid];\n                command.deferred.resolve(command.data);\n            },\n            reject: function(command) {\n                var that = this;\n                delete that._stack[command.guid];\n                command.deferred.reject(command.data);\n            },\n            keys: function() {\n                return this._keys;\n            },\n            empty: function() {\n                return this.keys().length === 0;\n            }\n        });\n\n        extend(kendo.ui, {\n            filemanager: {\n                FileManagerCommand: Command,\n                CommandStack: CommandStack,\n                commands: {\n                    CreateFolderCommand: CreateFolderCommand,\n                    RenameCommand: RenameCommand,\n                    DeleteCommand: DeleteCommand,\n                    MoveCommand: MoveCommand,\n                    CopyCommand: CopyCommand,\n                    SortCommand: SortCommand,\n                    SearchCommand: SearchCommand,\n                    ChangeViewCommand: ChangeViewCommand,\n                    OpenDialogCommand: OpenDialogCommand,\n                    TogglePaneCommand: TogglePaneCommand\n                }\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        keys = kendo.keys,\n\n        NAVIGATE = \"navigate\",\n        SELECT = \"select\",\n        EXPAND = \"expand\",\n        CHANGE = \"change\",\n        OPEN = \"open\",\n        LOAD = \"load\",\n        KEYDOWN = \"keydown\",\n        KEYDOWNACTION = \"keydownAction\",\n\n        NS = \".kendoFileManagerViewComponent\",\n\n        fileManagerDraggables = [],\n        fileManagerDragOrigin = null;\n\n    var registerViewComponent = function(componentName, component) {\n        ui.filemanager.ViewComponents[componentName] = component;\n    };\n\n    var getViewComponent = function(componentName) {\n        return ui.filemanager.ViewComponents[componentName] || null;\n    };\n\n    var Component = Observable.extend({\n        init: function(widget, element, options) {\n            var that = this;\n\n            that.element = element;\n            that.options = options;\n\n            if (widget) {\n                that.widgetComponent = new widget(element, options);\n            } else {\n                throw new Error(\"The widget for the ViewComponent is not available! Please add the corresponding scripts!\");\n            }\n\n            Observable.fn.init.call(that);\n        },\n\n        _bindEvents: function() {\n            this.widgetComponent.bind(\"dataBinding\", this._binding.bind(this));\n            this.widgetComponent.bind(\"dataBound\", this._bound.bind(this));\n        },\n\n        _binding: function(ev) {\n            if (this.trigger(\"dataBinding\", ev)) {\n                ev.preventDefault();\n            }\n        },\n\n        _bound: function() {\n            this.trigger(\"dataBound\");\n        },\n\n        _setDSOptions: function(options, dataSourceOptions) {\n            if (!options.dataSource && dataSourceOptions) {\n                options.dataSource = dataSourceOptions;\n            }\n        },\n\n        _initDragAndDrop: function(element, filter) {\n            var that = this;\n\n            filter = filter || that.options.dropFilter;\n            element = element || that.element;\n\n            that.draggable = element.kendoDraggable({\n                filter: filter,\n                hint: that._hint.bind(that),\n                cursorOffset: { top: -10, left: -50 },\n                holdToDrag: true,\n                ignore: \"input, .k-focusable\",\n                hold: that._hold.bind(that)\n            }).data(\"kendoDraggable\");\n\n            that.draggable.userEvents.minHold = 150;\n\n            that.droptarget = element.kendoDropTargetArea({\n                filter: filter,\n                drop: that._onDrop.bind(that),\n                dragenter: function(ev) {\n                    ev.dropTarget.addClass(\"k-filemanager-drop-target\");\n                },\n                dragleave: function(ev) {\n                    ev.dropTarget.removeClass(\"k-filemanager-drop-target\");\n                }\n            }).data(\"kendoDraggable\");\n        },\n\n        _hold: function(ev) {\n            var that = this,\n                target = ev.currentTarget;\n\n            if (!target.is(\".k-selected\")) {\n                if (that.widgetComponent.selectable) {\n                    that.widgetComponent.selectable.clear();\n                }\n                that.widgetComponent.select(target);\n            }\n\n            if (that.widgetComponent.selectable) {\n                that.widgetComponent.selectable.userEvents.cancel();\n            }\n        },\n\n        _hint: function(target) {\n            var that = this,\n                item = that.widgetComponent.dataItem(target),\n                selectedItems = that.widgetComponent.select();\n\n            fileManagerDragOrigin = that.widgetComponent;\n            fileManagerDraggables = selectedItems;\n\n            if (selectedItems.length > 1) {\n                return `<div class='k-filemanager-drag-hint'>${kendo.ui.icon(\"file\")} <span>${selectedItems.length} ${that.options.messages.items}</span></div>`;\n            }\n\n            return `<div class='k-filemanager-drag-hint'>${kendo.ui.icon((item.isDirectory ? \"folder\" : \"file\"))} <span>${item.name}</span></div>`;\n        },\n\n        _onDrop: function(ev) {\n            var that = this,\n                target = that.widgetComponent.dataItem(ev.dropTarget),\n                targetId = target.id,\n                itemIds = [];\n\n            if (!target.isDirectory) {\n                return;\n            }\n\n            for (var i = 0; i < fileManagerDraggables.length; i++) {\n                var id = fileManagerDragOrigin.dataItem(fileManagerDraggables[i]).id;\n                itemIds.push(id);\n            }\n\n            this.trigger(\"drop\",{ target: targetId, items: itemIds });\n        },\n\n        getSelected: function() {\n            throw new Error(\"Not Implemented!\");\n        },\n\n        refresh: function(dataSource) {\n            this.widgetComponent.setDataSource(dataSource);\n        },\n\n        destroy: function() {\n            kendo.destroy(this.element);\n        }\n    });\n\n    extend(kendo.ui.filemanager, {\n            ViewComponent: Component,\n            ViewComponents: {},\n            registerViewComponent: registerViewComponent,\n            getViewComponent: getViewComponent\n        }\n    );\n\n    var ListView = Component.extend({\n        init: function(element, options, explicitOptions) {\n            var that = this,\n                dataSourceOptions = explicitOptions.dataSource,\n                messages = explicitOptions.messages;\n\n            options = extend({}, that.defaultOptions, options, {\n                messages: messages,\n                ariaLabel: explicitOptions.ariaLabel\n            });\n\n            that._setDSOptions(options, dataSourceOptions);\n            options.kendoKeydown = options.kendoKeydown || that._kendoKeydown.bind(that);\n\n            Component.fn.init.call(this, ui.ListView, element, options);\n\n            that.listView = that.widgetComponent;\n            that._bindEvents();\n\n            if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                that._initDragAndDrop();\n            }\n        },\n\n        defaultOptions: {\n            layout: \"flex\",\n            flex: {\n                direction: \"row\",\n                wrap: \"wrap\"\n            },\n            selectable: kendo.support.mobileOS ? \"row\" : \"multiple\",\n            template: ({ name, extension, isDirectory }) =>\n                    `<div class='k-listview-item' title='${encode(name)}${encode(extension)}'>` +\n                        `<div class='k-file-preview'>${kendo.ui.icon({ icon: (!isDirectory ? kendo.getFileGroup(extension, true) : 'folder'), iconClass: \"k-file-icon\", size: \"xxxlarge\" })}</div>` +\n                        `<div class='k-file-name file-name'>${encode(name)}${encode(extension)}</div>` +\n                    \"</div>\",\n            editTemplate: ({ extension, isDirectory }) =>\n                        \"<div class='k-listview-item'>\" +\n                            `<div class='k-file-preview'>${kendo.ui.icon({ icon: (!isDirectory ? kendo.getFileGroup(extension, true) : 'folder'), iconClass: \"k-file-icon\", size: \"xxxlarge\" })}</div>` +\n                            \"<div class='k-file-name'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input type='text' class='k-input-inner' data-bind='value:name' name='name' required='required' /><span></div>\" +\n                        \"</div>\",\n            dropFilter: \".k-listview-item\",\n            navigatable: true\n        },\n\n        _bindEvents: function() {\n            var that = this,\n                listView = that.listView;\n\n            listView.bind(CHANGE, that._select.bind(that));\n            listView.element.on(\"dblclick\" + NS, that._dblClick.bind(that));\n            listView.element.on(\"mousedown\" + NS, \".k-listview-item:not(.k-edit-item)\", that._mousedown.bind(that));\n            listView.element.on(KEYDOWN + NS, \".k-edit-item\", that._keydown.bind(that));\n            listView.element.on(KEYDOWN + NS, that._keydownAction.bind(that));\n\n            listView.bind(\"edit\", function(ev) {\n                var sender = ev.sender;\n                var input = ev.item.find(\"input\");\n\n                input.on(\"blur\", function() {\n                    var isDirty = sender._modelFromElement(sender.editable.element).dirty;\n                    sender._closeEditable();\n                    if (!isDirty) {\n                        that.trigger(\"cancel\");\n                    }\n                });\n            });\n\n            listView.bind(\"cancel\", function() {\n                that.trigger(\"cancel\");\n            });\n\n            Component.fn._bindEvents.call(this);\n        },\n\n        _select: function() {\n            var that = this,\n                dataItems = that.getSelected();\n\n            that.trigger(SELECT, { entries: dataItems });\n        },\n\n        _keydown: function(ev) {\n            var that = this;\n            if (ev.keyCode === kendo.keys.ESC) {\n                that.listView._closeEditable();\n                that.trigger(\"cancel\");\n            }\n        },\n\n        _keydownAction: function(ev) {\n            var that = this,\n                target = $(ev.target).find(\".k-focus\");\n\n            if (target.length && !target.is(\".k-edit-item\")) {\n                that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n            }\n        },\n\n        _mousedown: function(ev) {\n            var that = this,\n                node = $(ev.target).closest(\".k-listview-item\");\n\n            if (ev.which === 3 && !node.is(\".k-selected\")) {\n                that.listView.selectable.clear();\n                that.listView.select(node);\n            }\n        },\n\n        _kendoKeydown: function(ev) {\n            var that = this;\n\n            if (ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                that._handleEnterKey(ev);\n            }\n        },\n\n        _handleEnterKey: function(ev) {\n            var that = this,\n                target = $(ev.target),\n                node = that.listView.current();\n\n            if (that.widgetComponent.editable && target.is(\"input\")) {\n                // Force blur to update item and close editable (cross browser)\n                target.trigger(\"blur\");\n            } else if (!that.widgetComponent.editable) {\n                that._triggerOpen(node);\n            }\n\n            ev.preventKendoKeydown = true;\n        },\n\n        _dblClick: function(ev) {\n            var that = this,\n                node = $(ev.target).closest(\".k-listview-item\");\n\n            that._triggerOpen(node);\n        },\n\n        _triggerOpen: function(node) {\n            var that = this;\n\n            if (node.is(\".k-edit-item\")) {\n                return;\n            }\n\n            var item = that.listView.dataItem(node);\n\n            if (item) {\n                that.trigger(OPEN, { entry: item });\n            }\n        },\n\n        addFolder: function() {\n            this.listView.add();\n        },\n\n        edit: function(target) {\n            var that = this,\n                selected = that.listView.select();\n\n            that.listView.edit(target || selected);\n        },\n\n        getSelected: function() {\n            var that = this,\n            items = that.listView.select(),\n            dataItems = [];\n\n            for (var i = 0; i < items.length; i++) {\n                var item = that.listView.dataItem(items[i]);\n\n                if (item) {\n                    dataItems.push(item);\n                }\n            }\n\n            return dataItems;\n        },\n\n        destroy: function() {\n            this.listView.element.off(NS);\n            Component.fn.destroy.call(this);\n        }\n    });\n\n    ui.filemanager.registerViewComponent(\"list\", ListView);\n\n    var TreeView = Component.extend({\n        init: function(element, options, explicitOptions) {\n            var that = this,\n                messages = explicitOptions.messages;\n\n            options = extend({}, that.defaultOptions, options, {\n                messages: messages\n            });\n\n            Component.fn.init.call(this, ui.TreeView, element, options);\n\n            that.treeView = that.widgetComponent;\n            that._bindEvents();\n\n            if (explicitOptions.draggable !== false && !explicitOptions.isLocalBinding) {\n                that._initDragAndDrop();\n            }\n        },\n\n        defaultOptions: {\n            dataTextField: \"name\",\n            dropFilter: \".k-item\"\n        },\n\n        _refreshDataSource: function(ev) {\n            var that = this,\n                treeView = that.treeView,\n                action = ev.action,\n                node = ev.node,\n                parentNode = null,\n                treeEl = treeView.element,\n                activeDescendant = treeEl.attr(\"aria-activedescendant\"),\n                items = ev.items.filter(function(item) {\n                    return item.isDirectory;\n                }).map(function(item) {\n                    return extend({}, item.toJSON(), {\n                        id: item.id || kendo.guid(),\n                        hasChildren: item.hasChildren,\n                        items: []\n                    });\n                });\n\n            if (node) {\n                parentNode = treeView.findByUid(treeView.dataSource.get(node.id).uid);\n                treeView._progress(parentNode, false);\n            }\n\n            if (!items.length) {\n                return;\n            }\n\n            if (action == \"itemloaded\" || (parentNode && action === \"sync\")) {\n                parentNode.find(\".k-item\").each(function(index, item) {\n                    treeView.remove(item);\n                });\n                treeView.append(items, parentNode);\n\n                if (that._shouldFocus) {\n                    treeView.current(parentNode);\n                    treeView.focus();\n                }\n            } else if (action == \"remove\") {\n                this._remove(items[0].id);\n            } else if (action == \"itemchange\") {\n                var existingItem = treeView.dataSource.get(items[0].id);\n\n                if (existingItem) {\n                    existingItem.set(ev.field, items[0][ev.field]);\n                } else {\n                    treeView.append(items[0], parentNode);\n                }\n            } else if (!treeView.dataSource.data().length) {\n                treeView.append(items);\n            } else if (action === \"sync\" || (action === undefined$1 && !parentNode)) {\n                treeView.items().each(function(index, item) {\n                    treeView.remove(item);\n                });\n                treeView.append(items);\n\n                if (that._shouldFocus) {\n                    treeView.current(treeView._nextVisible($()));\n                    treeView.focus();\n                }\n            }\n\n            if (!!activeDescendant && treeEl.find(\"#\" + activeDescendant).length === 0) {\n                treeEl.removeAttr(\"aria-activedescendant\");\n            }\n        },\n\n        _remove: function(id) {\n            var that = this,\n                treeView = that.treeView,\n                dataSource = treeView.dataSource,\n                item = dataSource.get(id),\n                node;\n\n            if (item) {\n                node = treeView.findByUid(item.uid);\n                treeView.remove(node);\n            }\n        },\n\n        _bindEvents: function() {\n            var that = this;\n\n            that.treeView.bind(SELECT, that._navigate.bind(that));\n            that.treeView.bind(EXPAND, that._expand.bind(that));\n            that.treeView.element.on(KEYDOWN, that._keydownAction.bind(that));\n        },\n\n        _keydownAction: function(ev) {\n            var that = this,\n                target = $(ev.target).find(\".k-focus\").closest(\".k-item\");\n\n            that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n        },\n\n        _expand: function(ev) {\n            var that = this,\n                treeView = that.treeView,\n                entry = treeView.dataItem(ev.node);\n\n            ev.preventDefault();\n            that.trigger(LOAD, { entryId: entry.id });\n        },\n\n        _navigate: function(ev) {\n            var that = this,\n                node = ev.node,\n                entry = that.treeView.dataItem(node),\n                path = entry.id;\n\n            ev.preventDefault();\n\n            that.trigger(NAVIGATE, { path: path, entry: entry.toJSON() });\n        },\n\n        _hold: $.noop,\n\n        getSelected: function() {\n            var that = this,\n                selectedItem = that.treeView.element.find(\".k-selected\").closest(\".k-item\"),\n                item = that.treeView.dataItem(selectedItem);\n\n            return item;\n        },\n\n        refresh: function(id) {\n            var that = this,\n                treeView = that.treeView,\n                entry = treeView.dataSource.get(id),\n                node = entry && treeView.findByUid(entry.uid);\n\n            if (entry && node) {\n                treeView.element.find(\".k-selected\").removeClass(\"k-selected\");\n                node.find(\"> div .k-in\").removeClass(\"k-hover\").addClass(\"k-selected\");\n            }\n        },\n\n        reload: function() {\n            this.treeView.dataSource.read();\n        }\n    });\n\n    ui.filemanager.registerViewComponent(\"tree\", TreeView);\n\n    if (kendo.ui.Grid) {\n        var Grid = Component.extend({\n            init: function(element, options, explicitOptions) {\n                var that = this,\n                    dataSourceOptions = explicitOptions.dataSource,\n                    messages = explicitOptions.messages;\n\n                options = extend({}, that.defaultOptions, options, {\n                    messages: messages\n                });\n\n                that._setDSOptions(options, dataSourceOptions);\n                that._setupColumns(options, messages);\n                options.kendoKeydown = options.kendoKeydown || that._kendoKeydown.bind(that);\n\n                Component.fn.init.call(this, ui.Grid, element, options);\n\n                that.grid = that.widgetComponent;\n                that._bindEvents();\n\n                if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n\n                if (explicitOptions.ariaLabel) {\n                    that.element.find(\"[role=grid]\").attr(\"aria-label\", explicitOptions.ariaLabel);\n                }\n            },\n\n            defaultOptions: {\n                selectable: kendo.support.mobileOS ? \"row\" : \"multiple\",\n                editable: {\n                    mode: \"inline\",\n                    confirmation: false\n                },\n                sortable: true,\n                dropFilter: \"tr:not(.k-grid-edit-row)\",\n                navigatable: true\n            },\n\n            _setupColumns: function(options, messages) {\n                if (!options.columns) {\n                    options.columns = [\n                        { field: \"name\", title: messages.nameField || \"Name\", template: function(item) {\n                            var icon = !item.isDirectory ? kendo.getFileGroup(item.extension, true) : \"folder\";\n\n                            var template = \"<div class='file-group-icon'>\" +\n                                                kendo.ui.icon(icon) +\n                                            \"</div>\" +\n                                            \"<div class='file-name'>\" + kendo.htmlEncode(item.name + item.extension) + \"<div>\";\n\n                            return template;\n                        } },\n                        { field: \"created\", title: messages.dateCreatedField , format: \"{0:G}\" },\n                        { field: \"size\", title: messages.sizeField, template: function(item) {\n                            if (item.size > 0) {\n                                return kendo.getFileSizeMessage(item.size);\n                            } else {\n                                return \"\";\n                            }\n                        } }\n                    ];\n                }\n            },\n\n            _bindEvents: function() {\n                var that = this,\n                    grid = that.grid;\n\n                grid.bind(CHANGE, that._select.bind(that));\n                grid.table.on(\"dblclick\" + NS, that._dblClick.bind(that));\n                grid.table.on(\"mousedown\" + NS, \"tr:not(.k-grid-edit-row)\", that._mousedown.bind(that));\n                grid.table.on(KEYDOWN + NS, \".k-grid-edit-row\", that._keydown.bind(that));\n                grid.table.on(KEYDOWN + NS, that._keydownAction.bind(that));\n\n                grid.bind(\"edit\", function() {\n                    that._toggleFocusable(true);\n                });\n\n                grid.bind(\"cancel\", function() {\n                    that.trigger(\"cancel\");\n                });\n\n                grid.saveRow = $.noop;\n\n                Component.fn._bindEvents.call(this);\n            },\n\n            _kendoKeydown: function(ev) {\n                var that = this,\n                    current = that.grid.current(),\n                    node = current ? current.closest(\"tr[data-uid]\") : null;\n\n                if (node && ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                    that._triggerOpen(node);\n                    ev.preventKendoKeydown = true;\n                }\n\n                if (ev.keyCode === keys.F2) {\n                    ev.preventKendoKeydown = true;\n                }\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    target = $(ev.target).find(\".k-focus\").closest(\"tr\");\n\n                if (target.length && !target.is(\".k-grid-edit-row\")) {\n                    that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n                }\n            },\n\n            _keydown: function(ev) {\n                var that = this,\n                    grid = that.grid;\n\n                if (!$(ev.target).closest(\".k-grid-edit-row\").length) {\n                    return;\n                }\n\n                if (ev.keyCode === kendo.keys.ENTER) {\n                    setTimeout(function() {\n                        var editorContainer = that.grid._editContainer || $();\n\n                        // force blur event for inputs\n                        editorContainer.find(\"input\").trigger(\"blur\");\n\n                        that._closeEditable();\n                    });\n\n                    that._tryCancel();\n                }\n\n                if (ev.keyCode === kendo.keys.ESC) {\n                    grid.cancelChanges();\n                    that.trigger(\"cancel\");\n                }\n            },\n\n            _mousedown: function(ev) {\n                var that = this,\n                    node = $(ev.target).closest(\"tr[data-uid]\");\n\n                if (ev.which === 1 && that.grid.editable) {\n                    setTimeout(function() {\n                        that._closeEditable();\n                    });\n\n                    that._tryCancel();\n                }\n\n                if (ev.which === 3 && !node.is(\".k-selected\")) {\n                    that.grid.selectable.clear();\n                    that.grid.select(node);\n                }\n            },\n\n            _tryCancel: function() {\n                var that = this,\n                    grid = that.grid,\n                    container;\n\n                if (grid.editable) {\n                    container = grid._editContainer;\n                    if (!container.find(\"input\").val()) {\n                        grid.cancelChanges();\n                    }\n                }\n\n                setTimeout(function() {\n                    that._toggleFocusable(false);\n                });\n\n            },\n\n            _toggleFocusable: function(state) {\n                var that = this,\n                    grid = that.grid;\n\n                grid.table.find(\"tr,td\").children().addBack().toggleClass(\"k-focusable\", state);\n            },\n\n            _closeEditable: function() {\n                var that = this,\n                    container;\n\n                if (that.grid.editable && !that.grid.editable.options.model.dirty) {\n                    container = that.grid._editContainer;\n                    that.grid._destroyEditable();\n                    that.grid._displayRow(container);\n                    that.trigger(\"cancel\");\n                }\n            },\n\n            _select: function() {\n                var that = this,\n                    dataItems = that.getSelected();\n\n                that.trigger(SELECT, { entries: dataItems });\n            },\n\n            _dblClick: function(ev) {\n                var that = this,\n                    node = $(ev.target).closest(\"tr[data-uid]\");\n\n                that._triggerOpen(node);\n            },\n\n            _triggerOpen: function(node) {\n                var that = this;\n\n                if (node.is(\".k-grid-edit-row\")) {\n                    return;\n                }\n\n                var item = that.grid.dataItem(node);\n\n                if (item) {\n                    that.trigger(OPEN, { entry: item });\n                }\n            },\n\n            getSelected: function() {\n                var that = this,\n                items = that.grid.select(),\n                dataItems = [];\n\n                for (var i = 0; i < items.length; i++) {\n                    dataItems.push(that.grid.dataItem(items[i]));\n                }\n\n                return dataItems;\n            },\n\n            addFolder: function() {\n                this.grid.addRow();\n            },\n\n            edit: function(target) {\n                var that = this,\n                    selected = that.grid.select();\n\n                that.grid.editRow(target || selected);\n            },\n\n            destroy: function() {\n                this.grid.table.off(NS);\n                this.grid.element.off(NS);\n                Component.fn.destroy.call(this);\n            }\n        });\n\n        ui.filemanager.registerViewComponent(\"grid\", Grid);\n    }\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        data = kendo.data,\n        Node = data.Node,\n        HierarchicalDataSource = data.HierarchicalDataSource,\n        DataSource = data.DataSource;\n\n    extend(true, kendo.data, {\n        schemas: {\n            \"filemanager\": {\n                data: function(data) {\n                    return data.items || data || [];\n                },\n                model: {\n                    id: \"path\",\n                    hasChildren: \"hasDirectories\",\n                    fields: {\n                        name: { editable: true, type: \"string\", defaultValue: \"New Folder\" },\n                        size: { editable: false, type: \"number\" },\n                        path: { editable: false, type: \"string\" },\n                        extension: { editable: false, type: \"string\" },\n                        isDirectory: { editable: false, defaultValue: true, type: \"boolean\" },\n                        hasDirectories: { editable: false, defaultValue: false, type: \"boolean\" },\n                        created: { type: \"date\", editable: false },\n                        createdUtc: { type: \"date\", editable: false },\n                        modified: { type: \"date\", editable: false },\n                        modifiedUtc: { type: \"date\", editable: false }\n                    }\n                }\n            }\n        }\n    });\n\n    var FileEntry = Node.define({\n        init: function(value) {\n            var that = this,\n                isDirectory = this.isDirectory;\n\n            Node.fn.init.call(this, value);\n\n            if (typeof isDirectory === \"string\") {\n            isDirectory = kendo.getter(isDirectory);\n            }\n\n            if (kendo.isFunction(isDirectory)) {\n                var isDirectoryObject = isDirectory.call(that, that);\n\n                if (isDirectoryObject && isDirectoryObject.length === 0) {\n                    that.isDirectory = false;\n                } else {\n                    that.isDirectory = !!isDirectoryObject;\n                }\n            }\n\n            if (that.isDirectory) {\n                that._initChildren();\n            }\n        },\n        _initChildren: function() {\n            var that = this;\n            var children, transport, parameterMap;\n\n            if (!(that.children instanceof kendo.data.FileManagerDataSource)) {\n                children = that.children = new kendo.data.FileManagerDataSource(that._childrenOptions);\n\n                transport = children.transport;\n                parameterMap = transport.parameterMap;\n\n                transport.parameterMap = function(data, type) {\n                    if (type === \"read\" || type === \"create\") {\n                        data.target = that.id;\n                    }\n\n                    if (parameterMap) {\n                        data = parameterMap.call(that, data, type);\n                    }\n\n                    return data;\n                };\n\n                children.parent = function() {\n                    return that;\n                };\n\n                children.bind(\"change\", function(e) {\n                    e.node = e.node || that;\n                    that.trigger(\"change\", e);\n                });\n\n                children.bind(\"error\", function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        e.node = e.node || that;\n                        collection.trigger(\"error\", e);\n                    }\n                });\n\n                that._updateChildrenField();\n            }\n        },\n        isNew: function() {\n            if (this.fileManagerNewItem) {\n                delete this.fileManagerNewItem;\n                return true;\n            }\n\n            return this.id === this._defaultId;\n        }\n    });\n\n\n    var FileManagerDataSource = HierarchicalDataSource.extend({\n        init: function(options) {\n            var fileEntry = FileEntry.define({\n                children: options\n            });\n\n            if (options.filter && !options.serverFiltering) {\n                this._hierarchicalFilter = options.filter;\n                options.filter = null;\n            }\n\n            DataSource.fn.init.call(this, $.extend(true, {}, { schema: { modelBase: fileEntry, model: fileEntry } }, options));\n\n            this.isLocalBinding = this.transport instanceof kendo.data.LocalTransport;\n\n            this._attachBubbleHandlers();\n        },\n        insert: function(index, model) {\n            var parentNode = this.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                if (model && model.isDirectory) {\n                    parentNode.hasDirectories = true;\n                }\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            return DataSource.fn.insert.call(this, index, model);\n        },\n        remove: function(node) {\n            var that = this,\n                parentNode = node.parentNode(),\n                dataSource = that,\n                result;\n\n            if (parentNode && parentNode._initChildren) {\n                dataSource = parentNode.children;\n            }\n\n            that._cleanDestroyed(node);\n\n            result = DataSource.fn.remove.call(dataSource, node);\n\n            if (parentNode && (dataSource.data() && !dataSource.data().length)) {\n                parentNode.hasChildren = false;\n            } else if (parentNode && !this._hasDirectories(parentNode)) {\n                parentNode.hasDirectories = false;\n            }\n\n            return result;\n        },\n        _cleanDestroyed: function(node) {\n            var that = this,\n                dataSource = that;\n\n            if (node.parentNode && node.parentNode()) {\n                node = node.parentNode();\n                dataSource = node.children;\n                dataSource._destroyed = [];\n                that._cleanDestroyed(node);\n            } else {\n                dataSource._destroyed = [];\n            }\n        },\n        _hasDirectories: function(node) {\n            var result;\n\n            if (!node.children.data()) {\n                return false;\n            }\n\n            result = node.children.data().filter(function(item) {\n                return item.isDirectory;\n            });\n\n            return !!result.length;\n        }\n    });\n\n    FileManagerDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        if (data && data._dataSource) {\n            return data._dataSource;\n        }\n\n        dataSource.data = data;\n\n        return dataSource instanceof FileManagerDataSource ? dataSource : new FileManagerDataSource(dataSource);\n    };\n\n    kendo.observableFileManagerData = function(array) {\n        var dataSource = FileManagerDataSource.create({\n            data: array,\n            schema: kendo.data.schemas.filemanager\n        });\n\n        dataSource.fetch();\n\n        dataSource._data._dataSource = dataSource;\n\n        return dataSource._data;\n    };\n\n    extend(kendo.data, {\n        FileManagerDataSource: FileManagerDataSource,\n        FileEntry: FileEntry\n    });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        template = kendo.template,\n        ContextMenu = kendo.ui.ContextMenu,\n\n        ACTION = \"action\";\n\n    var FileManagerContextMenu = ContextMenu.extend({\n        init: function(element, options) {\n            var that = this;\n\n            ContextMenu.fn.init.call(that, element, options);\n\n            that._overrideTemplates();\n            that._restrictDefaultItems();\n            that._extendItems();\n\n            that.bind(\"select\", that._onSelect.bind(that));\n            that.bind(\"open\", that._onOpen.bind(that));\n        },\n\n        _overrideTemplates: function() {\n            this.templates.sprite = template((spriteCssClass) => `${spriteCssClass ? `<span class=\"${spriteCssClass}\"></span>` : ''}`);\n        },\n\n        _restrictDefaultItems: function() {\n            var that = this;\n\n            if (that.options.isLocalBinding) {\n                that.defaultItems = {};\n            }\n        },\n\n        defaultItems: {\n            \"rename\": { text: \"Rename\", spriteCssClass: \"k-icon k-i-pencil\", command: \"RenameCommand\" },\n            \"delete\": { text: \"Delete\", spriteCssClass: \"k-icon k-i-trash\", command: \"DeleteCommand\" }\n        },\n\n        events: ContextMenu.fn.events.concat([\n            ACTION\n        ]),\n\n        _extendItems: function() {\n            var that = this,\n                items = that.options.items,\n                item, isBuiltInTool;\n\n            if (items && items.length) {\n                for (var i = 0; i < items.length; i++) {\n                    item = items[i];\n                    isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                    if (isBuiltInTool) {\n                        item = item.name;\n                    }\n\n                    if ($.isPlainObject(item) ) {\n                        that._extendItem(item);\n                        that.append(item);\n                    } else if (that.defaultItems[item]) {\n                        item = that.defaultItems[item];\n                        that._extendItem(item);\n                        that.append(item);\n                    }\n                }\n            } else {\n                for (var key in that.defaultItems) {\n                    item = that.defaultItems[key];\n                    that._extendItem(item);\n                    that.append(item);\n                }\n            }\n        },\n\n        _extendItem: function(item) {\n            var that = this,\n                messages = that.options.messages;\n\n            extend(item, {\n                text: messages[item.text],\n                spriteCssClass: item.spriteCssClass || \"\",\n                attr: {\n                    \"data-command\": item.command\n                }\n            });\n        },\n\n        _onSelect: function(ev) {\n            var command = $(ev.item).data(\"command\");\n            var target = $(ev.target);\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: { target: target }\n            });\n        },\n\n        _onOpen: function(ev) {\n            var menu = ev.sender,\n                items = menu.options.items;\n\n            if (!items && $.isEmptyObject(this.defaultItems)) {\n                ev.preventDefault();\n            }\n        },\n\n        action: function(args) {\n            this.trigger(ACTION, args);\n        }\n    });\n\n    extend(kendo.ui.filemanager, {\n        ContextMenu: FileManagerContextMenu\n    });\n\n    })(window.kendo.jQuery);\n\nvar __meta__ = {\n    id: \"filemanager\",\n    name: \"FileManager\",\n    category: \"web\",\n    description: \"The FileManager widget displays offers file management functionality.\",\n    depends: [ \"core\", \"data\", \"listview\", \"toolbar\", \"breadcrumb\", \"menu\", \"treeview\", \"upload\", \"dialog\", \"switch\", \"resizable\", \"selectable\", \"editable\", \"textbox\", \"icons\" ],\n    features: [{\n        id: \"filemanager-grid-view\",\n        name: \"GridView\",\n        description: \"Support for GridView\",\n        depends: [ \"grid\" ]\n    }]\n};\n\n(function($, undefined$1) {\n    var ui = kendo.ui,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        isPlainObject = $.isPlainObject,\n        isArray = Array.isArray,\n        DataBoundWidget = ui.DataBoundWidget,\n        template = kendo.template,\n        outerHeight = kendo._outerHeight,\n        ns = \".kendoFileManager\",\n\n        NAVIGATE = \"navigate\",\n        SELECT = \"select\",\n        OPEN = \"open\",\n        ERROR = \"error\",\n        CHANGE = \"change\",\n        UPLOAD = \"upload\",\n        SUCCESS = \"success\",\n        CLICK = \"click\",\n        TOGGLE = \"toggle\",\n        CLOSE = \"close\",\n        HIDE = \"hide\",\n        LOAD = \"load\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        DROP = \"drop\",\n        EXECUTE = \"execute\",\n        COMMAND = \"command\",\n        KEYDOWNACTION = \"keydownAction\",\n        CANCEL = \"cancel\",\n\n        TREE_TYPE = \"tree\",\n        DOT = \".\";\n\n    var fileManagerStyles = {\n        wrapper: \"k-widget k-filemanager\",\n        header: \"k-filemanager-header\",\n        navigation: \"k-filemanager-navigation\",\n        contentContainer: \"k-filemanager-content-container\",\n        content: \"k-filemanager-content\",\n        preview: \"k-filemanager-preview\",\n        toolbar: \"k-filemanager-toolbar\",\n        treeview: \"k-filemanager-treeview\",\n        breadcrumb: \"k-filemanager-breadcrumb\",\n        view: \"k-filemanager-view\",\n        grid: \"k-filemanager-grid\",\n        list: \"k-filemanager-listview\",\n        upload: \"k-filemanager-upload\",\n        uploadDialog: \"k-filemanager-upload-dialog\",\n        splitBar: \"k-splitbar\",\n        splitBarHorizontal: \"k-splitbar-horizontal k-splitbar-draggable-horizontal\",\n        splitBarHover: \"k-splitbar-horizontal-hover\",\n        splitBarIcon: \"k-icon k-resize-handle\",\n        splitBarNavigation: \"k-filemanager-splitbar-navigation\",\n        splitBarPreview: \"k-filemanager-splitbar-preview\",\n        resizable: \"k-filemanager-resizable\"\n    };\n\n    var fileManagerTemplateStyles = {\n        filePreview: \"k-file-preview\",\n        fileInfo: \"k-file-info\",\n        fileName: \"k-file-name\",\n        fileMeta: \"k-file-meta\",\n        metaLabel: \"k-file-meta-label\",\n        metaValue: \"k-file-meta-value\",\n        extension: \"k-file-type\",\n        size: \"k-file-size\",\n        created: \"k-file-created\",\n        modified: \"k-file-modified\"\n    };\n\n    var viewTypes = {\n        grid: \"grid\",\n        list: \"list\"\n    };\n\n    var NO_FILE_PREVIEW_TEMPLATE = ({ styles, messages }) =>\n         `<div class=\"${encode(styles.fileInfo)}\">` +\n            `<div class=\"${encode(styles.filePreview)}\">` +\n                '<span class=\"k-file-icon k-icon k-i-none\"></span>' +\n            '</div>' +\n            `<span class=\"${encode(styles.fileName)}\" k-no-file-selected>${encode(messages.noFileSelected)}</span>` +\n        '</div>';\n\n    var SINGLE_FILES_PREVIEW_TEMPLATE = ({ styles, selection, metaFields, messages }) => {\n        let result = '';\n        result +=\n        `<div class=\"${encode(styles.fileInfo)}\">` +\n            `<div class=\"${encode(styles.filePreview)}\">` +\n                kendo.ui.icon({ icon: (!selection[0].isDirectory ? encode(kendo.getFileGroup(selection[0].extension, true)) : \"folder\"), iconClass: \"k-file-icon\", size: \"xxxlarge\" }) +\n            '</div>' +\n            `<span class=\"${encode(styles.fileName)}\">${encode(selection[0].name)}</span>`;\n        if (metaFields) {\n            result += `<dl class=\"${encode(styles.fileMeta)}\">`;\n                for (var i = 0; i < metaFields.length; i += 1) {\n                    var field = metaFields[i];\n                    result +=\n                    `<dt class=\"${encode(styles.metaLabel)}\">${encode(messages[field])}: </dt>` +\n                    `<dd class=\"${encode(styles.metaValue)} ${encode(styles[field])}\">`;\n                    if (field == \"size\") {\n                        result += ` ${encode(kendo.getFileSizeMessage(selection[0][field]))}`;\n                    } else if (selection[0][field] instanceof Date) {\n                        result += ` ${encode(kendo.toString(selection[0][field], \"G\"))}`;\n                    } else if (field == \"extension\") {\n                        result += ` ${encode( !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension) : \"folder\")}`;\n                    } else {\n                        result += ` ${encode(selection[0][field])}`;\n                    }\n\n                    result += '</dd>' +\n                    '<dd class=\"k-line-break\"></dd>';\n                }\n\n                result += '</dl>';\n        }\n\n        result += '</div>';\n        return result;\n    };\n\n    var MULTIPLE_FILES_PREVIEW_TEMPLATE = ({ styles, selection, messages }) =>\n        `<div class=\"${encode(styles.fileInfo)}\">` +\n            `<div class=\"${encode(styles.filePreview)}\">` +\n                kendo.ui.icon({ icon: \"file\", iconClass: \"k-file-icon\", size: \"xxxlarge\" }) +\n            '</div>' +\n            `span class=\"${encode(styles.fileName)}\">` +\n                `${encode(selection.length)} ` +\n                `${encode(messages.items)}` +\n            '</span>' +\n        '</div>';\n\n    var FileManager = DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            DataBoundWidget.fn.init.call(that, element, options);\n\n            that.options = kendo.deepExtend({}, that.options, options);\n\n            that.defaultSortOption = { field: \"name\", dir: \"asc\" };\n            that.folderSortOption = { field: \"isDirectory\", dir: \"desc\" };\n\n            that._commandStack = new ui.filemanager.CommandStack();\n\n            that._dataSource();\n\n            that._wrapper();\n\n            that._renderHeader();\n\n            that._renderContentContainer();\n\n            that._initContextMenu();\n\n            that._renderNavigation();\n\n            that._renderContent();\n\n            that._renderPreview();\n\n            that._initUploadDialog();\n\n            that._resizable();\n\n            that._attachKeyDown();\n\n            that.resize();\n\n            kendo.notify(that, kendo.ui);\n        },\n\n        options: {\n            name: \"FileManager\",\n            height: 500,\n            resizable: true,\n            initialView: viewTypes.list,\n            toolbar: {\n                resizable: true\n            },\n            contextMenu: {},\n            upload: {},\n            uploadUrl: \"\",\n            views: {},\n            breadcrumb: {},\n            draggable: true,\n            dialogs: {\n                upload: {\n                    width: 530\n                },\n                moveConfirm: {\n                    width: 350,\n                    closable: true\n                },\n                deleteConfirm: {\n                    width: 360,\n                    closable: true\n                },\n                renamePrompt: {\n                    width: 350,\n                    closable: true\n                }\n            },\n            previewPane: {\n                metaFields: [\"extension\", \"size\", \"created\", \"modified\"],\n                noFileTemplate: NO_FILE_PREVIEW_TEMPLATE,\n                singleFileTemplate: SINGLE_FILES_PREVIEW_TEMPLATE,\n                multipleFilesTemplate: MULTIPLE_FILES_PREVIEW_TEMPLATE\n            },\n            messages: {\n                toolbar: {\n                    createFolder: \"New Folder\",\n                    upload: \"Upload\",\n                    sortDirection: \"Sort Direction\",\n                    sortDirectionAsc: \"Sort Direction Ascending\",\n                    sortDirectionDesc: \"Sort Direction Descending\",\n                    sortField: \"Sort By\",\n                    nameField: \"Name\",\n                    sizeField: \"File Size\",\n                    typeField: \"Type\",\n                    dateModifiedField: \"Date Modified\",\n                    dateCreatedField: \"Date Created\",\n                    listView: \"List View\",\n                    gridView: \"Grid View\",\n                    search: \"Search\",\n                    details: \"View Details\",\n                    detailsChecked: \"On\",\n                    detailsUnchecked: \"Off\",\n                    \"delete\": \"Delete\",\n                    rename: \"Rename\"\n                },\n                views: {\n                    nameField: \"Name\",\n                    sizeField: \"File Size\",\n                    typeField: \"Type\",\n                    dateModifiedField: \"Date Modified\",\n                    dateCreatedField: \"Date Created\",\n                    items: \"items\",\n                    listLabel: \"FileManager ListView\",\n                    gridLabel: \"FileManager Grid\",\n                    treeLabel: \"FileManager TreeView\"\n                },\n                dialogs: {\n                    upload: {\n                        title: \"Upload Files\",\n                        clear: \"Clear List\",\n                        done: \"Done\"\n                    },\n                    moveConfirm: {\n                        title: \"Confirm\",\n                        content: \"<p style='text-align: center;'>Do you want to move or copy?</p>\",\n                        okText: \"Copy\",\n                        cancel: \"Move\",\n                        close: \"close\"\n                    },\n                    deleteConfirm: {\n                        title: \"Confirm\",\n                        content: \"<p style='text-align: center;'>Are you sure you want to delete the selected file(s)?</br>You cannot undo this action.</p>\",\n                        okText: \"Delete\",\n                        cancel: \"Cancel\",\n                        close: \"close\"\n                    },\n                    renamePrompt: {\n                        title: \"Prompt\",\n                        content: \"<p style='text-align: center;'>Enter new name for the file.</p>\",\n                        okText: \"Rename\",\n                        cancel: \"Cancel\",\n                        close: \"close\"\n                    }\n                },\n                previewPane: {\n                    noFileSelected: \"No File Selected\",\n                    extension: \"Type\",\n                    size: \"Size\",\n                    created: \"Date Created\",\n                    createdUtc: \"Date Created UTC\",\n                    modified: \"Date Modified\",\n                    modifiedUtc: \"Date Modified UTC\",\n                    items: \"items\"\n                }\n            }\n        },\n\n        events: [\n            NAVIGATE,\n            SELECT,\n            OPEN,\n            DATABINDING,\n            DATABOUND,\n            ERROR,\n            DROP,\n            EXECUTE,\n            COMMAND\n        ],\n\n        defaultTools: {\n            createFolder: { type: \"button\", name: \"createFolder\", command: \"CreateFolderCommand\", rules: { remote: true } },\n            upload: { type: \"button\", name: \"upload\", command: \"OpenDialogCommand\", options: \"{ \\\"type\\\": \\\"uploadDialog\\\" }\", rules: { remote: true } },\n            sortDirection: {\n                type: \"buttonGroup\",\n                buttons: [\n                    { name: \"sortDirectionAsc\", showText: \"overflow\", icon: \"sort-asc-small\", togglable: true, group: \"sortDirection\", command: \"SortCommand\", options: \"{ \\\"dir\\\": \\\"asc\\\" }\", selected: true },\n                    { name: \"sortDirectionDesc\", showText: \"overflow\", icon: \"sort-desc-small\", togglable: true, group: \"sortDirection\", command: \"SortCommand\", options: \"{ \\\"dir\\\": \\\"desc\\\" }\" }\n                ]\n            },\n            sortField: {\n                type: \"splitButton\",\n                name: \"sortField\",\n                command: \"SortCommand\",\n                menuButtons: [\n                    { name: \"nameField\", options: \"{\\\"field\\\": \\\"name\\\"}\", command: \"SortCommand\" },\n                    { name: \"typeField\", options: \"{\\\"field\\\": \\\"extension\\\"}\", command: \"SortCommand\" },\n                    { name: \"sizeField\", options: \"{\\\"field\\\": \\\"size\\\"}\", command: \"SortCommand\" },\n                    { name: \"dateCreatedField\", options: \"{\\\"field\\\": \\\"createdUtc\\\"}\", command: \"SortCommand\" },\n                    { name: \"dateModifiedField\", options: \"{\\\"field\\\": \\\"modifiedUtc\\\"}\", command: \"SortCommand\" }\n                ]\n            },\n            changeView: {\n                type: \"buttonGroup\",\n                buttons: [\n                    { name: \"gridView\", showText: \"overflow\", icon: \"grid-layout\", togglable: true, group: \"changeView\", command: \"ChangeViewCommand\", options: \"grid\" },\n                    { name: \"listView\", showText: \"overflow\", icon: \"grid\", togglable: true, group: \"changeView\", command: \"ChangeViewCommand\", options: \"list\" }\n                ]\n            },\n            spacer: { type: \"spacer\" },\n            details: {\n                type: \"component\",\n                name: \"details\",\n                items: [{\n                    template: function(data) {\n                        return \"<label for='details-toggle'>\" + data.componentOptions.messages.text + \"</label>\";\n                    },\n                    overflow: \"never\",\n                    componentOptions: {\n                        messages: {\n                            text: \"details\"\n                        }\n                    }\n                },\n                {\n                    name: \"details\",\n                    command: \"TogglePaneCommand\",\n                    options: \"{ \\\"type\\\": \\\"preview\\\" }\",\n                    overflow: \"never\",\n                    element: \"<input id='details-toggle' class='k-filemanager-details-toggle' />\",\n                    component: \"Switch\",\n                    componentOptions: {\n                        messages: {\n                            checked: \"detailsChecked\",\n                            unchecked: \"detailsUnchecked\"\n                        },\n                        commandOn: \"change\"\n                    }\n                }]\n            },\n            search: {\n                type: \"component\",\n                name: \"search\",\n                command: \"SearchCommand\",\n                options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\",\n                overflow: \"never\",\n                component: \"TextBox\",\n                componentOptions: {\n                    placeholder: \"Search\",\n                    icon: \"search\",\n                    commandOn: \"input\"\n                }\n            }\n        },\n\n        _attachKeyDown: function() {\n            var that = this;\n\n            that.wrapper.on(\"keydown\" + ns, (e) => {\n                if (e.keyCode === kendo.keys.F10) {\n                    e.preventDefault();\n                    that.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                }\n            });\n        },\n\n        _dataSource: function() {\n            var that = this,\n                options = that.options,\n                dataSourceOptions = options.dataSource || {},\n                typeSortOrder = that.folderSortOption,\n                nameSortOrder = that.defaultSortOption,\n                dataSource;\n\n            if (!(dataSourceOptions instanceof kendo.data.FileManagerDataSource)) {\n                if (isArray(dataSourceOptions)) {\n                    dataSource = {\n                        data: dataSourceOptions,\n                        autoSync: false,\n                        sort: [typeSortOrder, nameSortOrder]\n                     };\n                } else {\n                    dataSource = extend(true, dataSourceOptions, {\n                        autoSync: false,\n                        sort: [typeSortOrder, nameSortOrder]\n                    });\n                }\n\n                if (dataSourceOptions && isPlainObject(dataSourceOptions.schema)) {\n                    dataSource.schema = dataSourceOptions.schema;\n                } else if (isPlainObject(kendo.data.schemas.filemanager)) {\n                    dataSource.schema = kendo.data.schemas.filemanager;\n                }\n            } else {\n                dataSource = dataSourceOptions;\n            }\n\n            if (that.dataSource && that._errorHandler) {\n                that.dataSource.unbind(ERROR, that._errorHandler);\n                that.dataSource.unbind(CHANGE, that._changeHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._changeHandler = that._change.bind(that);\n            }\n\n            that.dataSource = kendo.data.FileManagerDataSource.create(dataSource)\n                .bind(ERROR, that._errorHandler)\n                .bind(CHANGE, that._changeHandler);\n        },\n\n        _error: function(ev) {\n            if (!this.trigger(ERROR, ev)) {\n                window.console.warn('Error! The requested URL returned ' + ev.xhr.status + ' - ' + ev.xhr.statusText);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                options = that.options,\n                width = options.width,\n                height = options.height;\n\n            that.wrapper = that.element\n                .addClass(fileManagerStyles.wrapper);\n\n            if (width) {\n                that.wrapper.width(width);\n            }\n\n            if (height) {\n                that.wrapper.height(height);\n            }\n\n            that._resizeHandler = kendo.onResize(function() {\n                that.resize(true);\n            });\n        },\n\n        _renderHeader: function() {\n            var that = this,\n                options = that.options;\n\n            if (options.toolbar) {\n                that.header = $(\"<div />\").addClass(fileManagerStyles.header);\n            }\n\n            that.wrapper.append(that.header);\n\n            if (options.toolbar) {\n                that._initToolbar();\n                that.toolbar._tabIndex();\n            }\n        },\n\n        _renderContentContainer: function() {\n            var that = this,\n                container = $(\"<div />\").addClass(fileManagerStyles.contentContainer);\n\n            that.contentContainer = container;\n\n            that.wrapper.append(that.contentContainer);\n        },\n\n        _initContextMenu: function() {\n            var that = this,\n                options = that.options,\n                menuOptions = extend({}, options.contextMenu, {\n                    filemanager: that,\n                    messages: options.messages.toolbar,\n                    target: that.contentContainer,\n                    filter: \"[data-uid]\",\n                    action: that.executeCommand.bind(that),\n                    isLocalBinding: that.dataSource.isLocalBinding\n                });\n\n            if (options.contextMenu === false) {\n                return;\n            }\n\n            that.contextMenu = new ui.filemanager.ContextMenu(\"<ul></ul>\", menuOptions);\n\n            that.contextMenu.bind(OPEN, that._cacheFocus.bind(that));\n        },\n\n        _renderNavigation: function() {\n            var that = this;\n\n            that.navigation = $(\"<div />\").addClass(fileManagerStyles.navigation);\n            that.navigation.append(that._initTreeView().element);\n\n            that.contentContainer.append(that.navigation);\n        },\n\n        _renderContent: function() {\n            var that = this,\n                options = that.options,\n                toolbar = that.toolbar;\n\n            that.content = $(\"<div />\").addClass(fileManagerStyles.content);\n\n            if (options.breadcrumb) {\n                that.content.append(that._initBreadcrumb().element);\n            }\n\n            that.content.append(that._initView());\n\n            if (!toolbar || !that._isToolEnabled(that.defaultTools.upload.name)) {\n                that.content.append(that._initUpload().wrapper.hide());\n            }\n\n            that.contentContainer.append(that.content);\n        },\n\n        _renderPreview: function() {\n            var that = this,\n                enablePreview = that.options.previewPane;\n\n            if (!enablePreview) {\n               return;\n            }\n\n            that.preview = $(\"<div />\").addClass(fileManagerStyles.preview);\n            that.previewContainer = $(\"<div />\").addClass(fileManagerStyles.previewContainer);\n            that.preview.append(that.previewContainer);\n\n            that._setPreviewPaneContent();\n\n            that.contentContainer.append(that.preview.hide());\n        },\n\n        _setPreviewPaneContent: function() {\n            var that = this,\n                options = that.options,\n                previewPaneMessages = options.messages.previewPane,\n                previewPaneOptions = options.previewPane,\n                selection = that.getSelected(),\n                previewTemplate;\n\n            if (!selection) {\n                previewTemplate = template(previewPaneOptions.noFileTemplate)({\n                    styles: fileManagerTemplateStyles,\n                    messages: previewPaneMessages\n                });\n\n                that.previewContainer.html(previewTemplate);\n                return;\n            }\n\n            previewTemplate = selection.length === 1 ?\n                previewPaneOptions.singleFileTemplate :\n                previewPaneOptions.multipleFilesTemplate;\n\n            previewTemplate = template(previewTemplate)({\n                styles: fileManagerTemplateStyles,\n                messages: previewPaneMessages,\n                selection: selection,\n                metaFields: previewPaneOptions.metaFields\n            });\n\n            that.previewContainer.html(previewTemplate);\n        },\n\n        _initToolbar: function() {\n            var that = this,\n                options = that.options,\n                toolbarElement = $(\"<div />\").addClass(fileManagerStyles.toolbar),\n                toolbarOptions = extend({}, options.toolbar),\n                tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n            tools = that._processTools(tools);\n            toolbarOptions.tools = tools;\n            toolbarOptions.defaultTools = that.defaultTools;\n            toolbarOptions.parentMessages = that.options.messages.toolbar;\n\n            that.header.append(toolbarElement);\n            that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n            that.options.toolbar = that.toolbar.options;\n\n            that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n            that.toolbar.bind(CLOSE, that._toolbarClick.bind(that));\n            that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n            that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n            return that.toolbar;\n        },\n\n        _processTools: function(tools) {\n            var that = this;\n\n            tools.forEach(t => {\n                var rules = t.rules || that.defaultTools[t] ? that.defaultTools[t].rules : null;\n\n                if (rules && rules.remote && that.dataSource.isLocalBinding) {\n                    if (t.rules) {\n                        t.hidden = true;\n                    } else {\n                        that.defaultTools[t].hidden = true;\n                    }\n                }\n\n                if (t.name === \"changeView\") {\n                    that.defaultTools[t.name].buttons.forEach((b, i) => {\n                        if (b.options === that.options.initialView) {\n                            that.defaultTools[t.name].buttons[i].selected = true;\n                        }\n                    });\n                } else if (t.buttons && t.buttons[0].group === \"changeView\") {\n                    t.buttons.forEach((b, i) => {\n                        if (b.options === that.options.initialView) {\n                            t.buttons[i].selected = true;\n                        }\n                    });\n                }\n            });\n\n            return tools;\n        },\n\n        _toolbarClick: function(ev) {\n            var command = $(ev.target).data(\"command\"),\n                options = $(ev.target).data(\"options\");\n\n            if (!!$(ev.target).val()) {\n                options = extend({}, options, { value: $(ev.target).val() });\n            }\n\n            if (!command) {\n                return;\n            }\n\n            this.executeCommand({\n                command: command,\n                options: options\n            });\n        },\n\n        _isToolEnabled: function(toolName) {\n            var that = this,\n                options = that.options.toolbar,\n                items = options.items || that.defaultTools,\n                found = false;\n\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].name == toolName) {\n                    found = true;\n                    break;\n                }\n            }\n\n            return items[toolName] || found;\n        },\n\n        _initTreeView: function() {\n            var that = this,\n                treeViewElement = $(\"<div />\").addClass(fileManagerStyles.treeview),\n                options = that.options.views[TREE_TYPE],\n                explicitOptions = extend(true, {}, {\n                    dataSource: that.options.dataSource,\n                    messages: that.options.messages.views,\n                    draggable: that.options.draggable,\n                    isLocalBinding: that.dataSource.isLocalBinding\n                });\n\n            that.treeView = new ui.filemanager.ViewComponents[TREE_TYPE](treeViewElement, options, explicitOptions);\n\n            that.treeView.bind(NAVIGATE, that._navigate.bind(that))\n                         .bind(LOAD, that._load.bind(that))\n                         .bind(DROP, that._drop.bind(that))\n                         .bind(KEYDOWNACTION, that._keydownAction.bind(that));\n\n            return that.treeView;\n        },\n\n        _drop: function(ev) {\n            var that = this;\n\n            if (!that.trigger(DROP, ev) && ev.items.indexOf(ev.target) < 0) {\n                that._confirm({\n                    type: \"move\",\n                    target: ev.target\n                }).done(function() {\n                    that.executeCommand({ command: \"CopyCommand\", options: ev });\n                }).fail(function() {\n                    that.executeCommand({ command: \"MoveCommand\", options: ev });\n                });\n            }\n        },\n\n        _keydownAction: function(ev) {\n            var that = this,\n                keyCode = ev.keyCode,\n                keys = kendo.keys;\n\n            if (keyCode === keys.DELETE) {\n                that.executeCommand({ command: \"DeleteCommand\", options: { target: ev.target } });\n            }\n\n            if (keyCode === keys.F2) {\n                that.executeCommand({ command: \"RenameCommand\", options: { target: ev.target } });\n            }\n        },\n\n        _confirm: function(options) {\n            var that = this,\n                messages = that.options.messages.dialogs[options.type + \"Confirm\"];\n\n            var confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                title: messages.title,\n                content: messages.content,\n                messages: messages\n            }, that.options.dialogs[options.type + \"Confirm\"])).data(\"kendoConfirm\");\n\n            confirm.bind(OPEN, that._cacheFocus.bind(that));\n            confirm.bind(HIDE, that._restoreFocus.bind(that, options.target));\n\n            confirm.open();\n\n            confirm.wrapper.removeClass(\"k-confirm\");\n\n            return confirm.result;\n        },\n\n        _prompt: function(options) {\n            var that = this,\n                messages = this.options.messages.dialogs[options.type + \"Prompt\"];\n\n            var prompt = $(\"<div></div>\").kendoPrompt(extend({}, {\n                title: messages.title,\n                content: messages.content,\n                messages: messages,\n                value: options.defaultInput\n            },this.options.dialogs[options.type + \"Prompt\"])).data(\"kendoPrompt\");\n\n            prompt.bind(OPEN, that._cacheFocus.bind(that));\n            prompt.bind(CLOSE, that._restoreFocus.bind(that, options.target));\n\n            prompt.open();\n\n            prompt.wrapper.removeClass(\"k-prompt\");\n\n            return prompt.result;\n        },\n\n        _cacheFocus: function() {\n            var that = this,\n                activeElement = $(document.activeElement),\n                view = that.view(),\n                treeView = that.treeView.widgetComponent;\n\n            if (that.contextMenu && that.contextMenu.popup.visible()) {\n                return;\n            }\n\n            that.treeView._shouldFocus = false;\n\n            if ((treeView.current() && treeView.current().find(\".k-focus\").length) ||\n                activeElement.hasClass(fileManagerStyles.treeview)) {\n                that.treeView._shouldFocus = true;\n                view._focusElement = activeElement;\n                return;\n            }\n\n            view._focusElement = activeElement.hasClass(fileManagerStyles[that._viewType]) ?\n                activeElement :\n                null;\n        },\n\n        _restoreFocus: function(target) {\n            var that = this,\n                view = that.view();\n\n            if (!target) {\n                return;\n            }\n\n            if (view._focusElement) {\n                view._focusElement.trigger(\"focus\");\n            } else if (target.closest && target.closest(\":kendoFocusable\").length) {\n                target.closest(\":kendoFocusable\").trigger(\"focus\");\n            }\n        },\n\n        _initView: function() {\n            var that = this,\n                viewWrapper = $(\"<div />\").addClass(fileManagerStyles.view),\n                initialView = that.options.initialView;\n\n            that.viewWrapper = viewWrapper;\n            that.viewWrapper.append(that.view(initialView));\n\n            return viewWrapper;\n        },\n\n        _initBreadcrumb: function() {\n            var that = this,\n                options = that.options,\n                breadcrumbElement = $(\"<nav />\").addClass(fileManagerStyles.breadcrumb),\n                breadcrumbOptions = extend({}, {\n                    items: [\n                        { type: \"rootitem\", text: \"\" }\n                    ],\n                    change: that._breadcrumbChange.bind(that)\n                }, options.breadcrumb);\n\n            that.breadcrumb = new ui.Breadcrumb(breadcrumbElement, breadcrumbOptions);\n\n            return that.breadcrumb;\n        },\n\n        _breadcrumbChange: function(ev) {\n            var entry = ev.sender.items().filter(function(item) {\n                return item.path === ev.value.substring(1);\n            }).shift();\n\n            this._navigate({ path: entry ? entry.id : \"\" });\n        },\n\n        _initUploadDialog: function() {\n            var that = this,\n                options = that.options,\n                dialogMessages = options.messages.dialogs.upload,\n                dialogElement = $(\"<div />\"),\n                dialogOptions = extend({}, {\n                    title: dialogMessages.title,\n                    modal: true,\n                    visible: false,\n                    width: 500,\n                    actions: [\n                        { text: () => dialogMessages.done, primary: true },\n                        { text: () => dialogMessages.clear, action: that._clearUploadFilesList.bind(that) }\n                    ],\n                    messages: dialogMessages\n                }, options.dialogs.upload),\n                uploadInstance;\n\n            if (!that._shouldInitUpload()) {\n                return;\n            }\n\n            uploadInstance = that._initUpload();\n\n            that.uploadDialog = new ui.Dialog(dialogElement, dialogOptions);\n            that.uploadDialog.wrapper.addClass(fileManagerStyles.uploadDialog);\n            that.uploadDialog.element.append(uploadInstance.wrapper);\n\n            that.uploadDialog.bind(OPEN, that._toggleUploadDropZone.bind(that, \"\"));\n            that.uploadDialog.bind(CLOSE, that._toggleUploadDropZone.bind(that, that.viewWrapper));\n\n            return that.uploadDialog;\n        },\n\n        _shouldInitUpload: function() {\n            var that = this,\n                options = that.options,\n                shouldInit = false;\n\n            if ((options.uploadUrl || (options.upload.async && options.upload.async.saveUrl)) &&\n                options.upload !== false) {\n                    shouldInit = true;\n            }\n\n            return shouldInit;\n        },\n\n        _initUpload: function() {\n            var that = this,\n                options = that.options,\n                uploadElement = $(\"<input type='file' name='file'/>\").addClass(fileManagerStyles.upload),\n                uploadOptions = extend(true, {\n                    async: {\n                         autoUpload: true,\n                         saveUrl: options.uploadUrl\n                    },\n                    dropZone: that.viewWrapper\n                }, options.upload);\n\n            that.upload = new ui.Upload(uploadElement[0], uploadOptions);\n\n            that.upload.bind(UPLOAD, that._sendUploadPathParameter.bind(that));\n            that.upload.bind(SUCCESS, that._success.bind(that));\n\n            return that.upload;\n        },\n\n        _sendUploadPathParameter: function(ev) {\n            ev.data = extend(ev.data, { path: this.path() });\n        },\n\n        _success: function() {\n            this._view.widgetComponent.dataSource.read();\n        },\n\n        _clearUploadFilesList: function() {\n            var that = this,\n                upload = that.upload;\n\n            if (upload) {\n                upload.clearAllFiles();\n            }\n        },\n\n        _toggleUploadDropZone: function(zone) {\n            var that = this,\n                upload = that.upload;\n\n            if (upload) {\n                upload.setOptions({ dropZone: zone });\n            }\n        },\n\n        _binding: function(ev) {\n            if (this.trigger(DATABINDING, { source: \"view\", action: ev.action, items: ev.items, index: ev.index })) {\n                ev.preventDefault();\n            }\n        },\n\n        _bound: function() {\n            if (this.options.previewPane) {\n                this._setPreviewPaneContent();\n            }\n            this.trigger(DATABOUND);\n        },\n\n        _createResizableSplitBar: function(cssClass) {\n            var splitBar = $(\"<div />\")\n                    .addClass(fileManagerStyles.splitBar)\n                    .addClass(fileManagerStyles.splitBarHorizontal)\n                    .addClass(cssClass),\n                icon = $(\"<span />\").addClass(fileManagerStyles.splitBarIcon);\n\n            splitBar.append(icon);\n\n            splitBar.hover(function() {\n                $(this).toggleClass(fileManagerStyles.splitBarHover);\n            });\n\n            return splitBar;\n        },\n\n        _initResizableNavigation: function() {\n            var that = this,\n                wrapper = that.wrapper,\n                splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarNavigation),\n                contentWrapper = wrapper.find(DOT + fileManagerStyles.content),\n                navigationWrapper = wrapper.find(DOT + fileManagerStyles.navigation),\n                contentWrapperWidth,\n                navigationWrapperWidth;\n\n            splitBar.insertAfter(navigationWrapper);\n\n            that._resizeDraggable.navigation = that.wrapper.find(splitBar)\n                .end()\n                .kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarNavigation,\n                    start: function() {\n                        contentWrapperWidth = contentWrapper.width();\n                        navigationWrapperWidth = navigationWrapper.width();\n                    },\n                    resize: function(e) {\n                        var delta = e.x.initialDelta;\n\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n\n                        if (navigationWrapperWidth + delta < -2 || contentWrapperWidth - delta < -2) {\n                            return;\n                        }\n\n                        navigationWrapper.width(navigationWrapperWidth + delta);\n                    }\n                }).getKendoResizable();\n        },\n\n        _initResizablePreview: function() {\n            var that = this,\n                wrapper = that.wrapper,\n                splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarPreview),\n                contentWrapper = wrapper.find(DOT + fileManagerStyles.content),\n                previewWrapper = wrapper.find(DOT + fileManagerStyles.preview),\n                contentWrapperWidth,\n                previewWrapperWidth;\n\n            if (!that.options.previewPane) {\n                return;\n            }\n\n            splitBar.insertBefore(previewWrapper).hide();\n\n            that._resizeDraggable.preview = wrapper.find(splitBar)\n                .end()\n                .kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarPreview,\n                    start: function() {\n                        contentWrapperWidth = contentWrapper.width();\n                        previewWrapperWidth = previewWrapper.width();\n                    },\n                    resize: function(e) {\n                        var delta = e.x.initialDelta;\n\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n\n                        if (previewWrapperWidth - delta < -2 || contentWrapperWidth + delta < -2) {\n                            return;\n                        }\n\n                        previewWrapper.width(previewWrapperWidth - delta);\n                    }\n                }).getKendoResizable();\n        },\n\n        _resizable: function() {\n            var that = this,\n                options = that.options;\n\n            that._resizeDraggable = {};\n\n            if (!options.resizable) {\n                return;\n            }\n\n            that.wrapper.addClass(fileManagerStyles.resizable);\n\n            that._initResizableNavigation();\n\n            that._initResizablePreview();\n        },\n\n        view: function(type) {\n            var that = this,\n                element = $('<div></div>'),\n                options = that.options.views[type],\n                explicitOptions = extend(true, {}, {\n                    dataSource: that._viewDataSource || that.dataSource,\n                    messages: that.options.messages.views,\n                    draggable: that.options.draggable,\n                    ariaLabel: that.options.messages.views[type + \"Label\"]\n                });\n\n            if (type === undefined$1) {\n                return that._view;\n            }\n\n            if (!ui.filemanager.ViewComponents[type]) {\n                throw new Error(kendo.format(\"There is no {0} ViewComponent registered!\", type));\n            }\n\n            if (that._view && that._view.destroy) {\n                that._view.destroy();\n                that.viewWrapper.empty();\n            }\n\n            that._viewType = type;\n            that._view = new ui.filemanager.ViewComponents[type](element, options, explicitOptions);\n\n            that._view.bind(SELECT, that._select.bind(that));\n            that._view.bind(OPEN, that._open.bind(that));\n            that._view.bind(DATABINDING, that._binding.bind(that));\n            that._view.bind(DATABOUND, that._bound.bind(that));\n            that._view.bind(DROP, that._drop.bind(that));\n            that._view.bind(KEYDOWNACTION, that._keydownAction.bind(that));\n            that._view.bind(CANCEL, that._cancel.bind(that));\n\n            that._view.element.addClass(fileManagerStyles[type]);\n\n            that.viewWrapper\n                .removeClass(\n                    Object.keys(ui.filemanager.ViewComponents).map(function(el) {\n                        return fileManagerStyles.view + \"-\" + el;\n                    }).join(\" \")\n                )\n                .addClass(fileManagerStyles.view + \"-\" + type);\n\n            that.viewWrapper.append(that._view.element);\n        },\n\n        executeCommand: function(args) {\n            var commandName = args.command,\n                commandOptions = extend({ filemanager: this }, isPlainObject(args.options) ? args.options : { value: args.options }),\n                command = new ui.filemanager.commands[commandName](commandOptions);\n\n            if (!this.trigger(EXECUTE, args)) {\n                return command.exec();\n            }\n        },\n\n        _navigate: function(ev) {\n            var that = this,\n                path = ev.path;\n\n            if (!that.trigger(NAVIGATE, { path: path })) {\n                that.navigate(path);\n            }\n        },\n\n        _load: function(ev) {\n            var entry = this.dataSource.get(ev.entryId);\n            entry.load();\n        },\n\n        _select: function(ev) {\n            if (this.options.previewPane) {\n                this._setPreviewPaneContent();\n            }\n\n            this.trigger(SELECT, { entries: ev.entries });\n        },\n\n        _open: function(ev) {\n            var that = this,\n                entry = ev.entry;\n\n            that.trigger(OPEN, { entry: entry });\n\n            if (entry.isDirectory) {\n                that._navigate({ path: entry.id });\n            }\n        },\n\n        _cancel: function() {\n            var that = this,\n                commandStack = that._commandStack,\n                command = commandStack.next();\n\n            commandStack.reject(command);\n            that.trigger(COMMAND, { status: \"cancel\", action: \"itemchange\", data: command.data });\n        },\n\n        _change: function(ev) {\n            var that = this,\n                commandStack = that._commandStack,\n                targetDataSource = ev.node ? ev.node.children : that.dataSource;\n\n            if (that.trigger(DATABINDING, { source: \"tree\", action: ev.action, items: ev.items, index: ev.index })) {\n                return;\n            }\n\n            that.treeView._refreshDataSource(ev);\n\n            if (ev.action === \"remove\" || ev.action === \"itemchange\" || ev.action === \"add\") {\n                if (commandStack.empty()) {\n                    targetDataSource.sync();\n                } else {\n                    var command = commandStack.next();\n\n                    targetDataSource.sync().then(function(res) {\n                        commandStack.resolve(command);\n                        that.trigger(COMMAND, { status: \"success\", action: ev.action, data: command.data, response: res });\n                    }).fail(function(res) {\n                        commandStack.reject(command);\n                        that.trigger(COMMAND, { status: \"fail\", action: ev.action, data: command.data, response: res });\n                    });\n                }\n            }\n\n            if (ev.action === \"remove\" && that._viewDataSource && that._viewDataSource.parent() && ev.items[0] === that._viewDataSource.parent()) {\n                that._navigateToParent(ev.items[0]);\n            }\n\n            if (ev.action == \"itemchange\" && that._viewDataSource && that._viewDataSource.parent() && that.path().indexOf(ev.items[0].id) >= 0) {\n                that._navigateToParent(ev.items[0]);\n            }\n\n            if (ev.action === \"itemchange\") {\n                ev.items[0].loaded(false);\n            }\n        },\n\n        _navigateToParent: function(item) {\n            var that = this;\n            var parent = item.parentNode();\n            var parentNodePath = parent ? parent.id : \"\";\n            that._navigate({ path: parentNodePath });\n        },\n\n        _buildBreadcrumbPath: function(entry) {\n            var that = this,\n                breadcrumb = that.breadcrumb,\n                items = [];\n\n            while (entry) {\n                items.push({\n                    id: entry.id,\n                    text: entry.name,\n                    path: entry.path\n                });\n\n                entry = entry.parentNode && entry.parentNode();\n            }\n\n            items.push({ type: \"rootItem\", id: \"\", text: \"\" });\n\n            breadcrumb.items(items.reverse());\n        },\n\n        _adjustDimensions: function() {\n            var that = this,\n                wrapper = that.wrapper,\n                gridSelector = DOT + fileManagerStyles.grid,\n                listViewSelector = DOT + fileManagerStyles.list,\n                contentContainer = DOT + fileManagerStyles.contentContainer,\n                totalHeight = wrapper.height(),\n                toolbarHeight = 0,\n                breadcrumbHeight = 0;\n\n            if (that.toolbar) {\n                toolbarHeight = outerHeight(that.toolbar.wrapper);\n            }\n\n            if (that.breadcrumb) {\n                breadcrumbHeight = outerHeight(that.breadcrumb.wrapper);\n            }\n\n            if (that.options.height !== \"auto\") {\n                wrapper\n                    .find([gridSelector].join(\",\"))\n                    .height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n\n                wrapper\n                    .find(listViewSelector)\n                    .parent()\n                    .height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n\n                wrapper\n                    .find(contentContainer)\n                    .height(totalHeight - toolbarHeight);\n            }\n        },\n\n        _resize: function() {\n            this._adjustDimensions();\n            kendo.resize(this.element.children());\n        },\n\n        setDataSource: function(dataSource) {\n            var that = this;\n\n            that.options.dataSource = dataSource;\n            that._dataSource();\n\n            if (that.toolbar) {\n                that.toolbar.destroy();\n                that.header.empty();\n                that._initToolbar();\n                that.toolbar._tabIndex();\n            }\n\n            if (that.treeView) {\n                that.treeView.destroy();\n                that.navigation.empty();\n                that.navigation.append(that._initTreeView().element);\n            }\n\n            if (that._view) {\n                that.view(that._viewType || that.options.initialView);\n            }\n\n            that._initContextMenu();\n\n        },\n\n        refresh: function() {\n            var that = this,\n                dataSource = that._viewDataSource || that.dataSource;\n\n            dataSource.read();\n        },\n\n        getSize: function() {\n            return kendo.dimensions(this.wrapper);\n        },\n\n        getSelected: function() {\n            var that = this,\n                items = that._view.getSelected(),\n                treeView = that.treeView;\n\n            if (items && items.length) {\n                return items;\n            }\n\n            var item = treeView.getSelected();\n\n            if (item) {\n                return [ that.dataSource.get(item.id) ];\n            }\n        },\n\n        path: function() {\n            return this._path || \"\";\n        },\n\n        navigate: function(path) {\n            var that = this,\n                dataSource = that.dataSource,\n                entry = dataSource.get(path.replace(/^\\//, \"\")),\n                view = that._view,\n                treeView = that.treeView,\n                breadcrumb = that.breadcrumb,\n                isRoot = path === \"\" || path === \"/\";\n\n            if (!entry && !isRoot) {\n                window.console.warn('Error! Could not navigate to the folder at the requested path(' + path + '). Make sure that the parent folder of the target folder has already been loaded.');\n                return;\n            }\n\n            that._path = path;\n\n            if (that.trigger(DATABINDING, { source: \"navigation\", action: \"rebind\", items: [entry] })) {\n                return;\n            }\n\n            if (breadcrumb) {\n                that._buildBreadcrumbPath(entry);\n            }\n\n            if (isRoot) {\n                dataSource.sort([ that.folderSortOption, that.defaultSortOption ]);\n                that._viewDataSource = dataSource;\n                view.refresh(that._viewDataSource);\n                treeView.treeView.select($());\n\n                if (that.options.previewPane) {\n                    that._setPreviewPaneContent();\n                }\n\n                return;\n            }\n\n            if (entry.loaded && !entry.loaded()) {\n                entry.load();\n            }\n\n            if (view) {\n                that._viewDataSource = entry.children;\n                that._viewDataSource._sort = [ that.folderSortOption, that.defaultSortOption ];\n                view.refresh(that._viewDataSource);\n            }\n\n            if (treeView) {\n                treeView.refresh(entry.id);\n            }\n\n            if (that.options.previewPane) {\n                that._setPreviewPaneContent();\n            }\n        },\n\n        items: function() {\n            var that = this;\n\n            return that.treeView.widgetComponent.items().add(that._view.widgetComponent.items());\n        },\n\n        destroy: function() {\n            var that = this;\n\n            DataBoundWidget.fn.destroy.call(that);\n\n            that.dataSource\n                .unbind(ERROR, that._errorHandler)\n                .unbind(CHANGE, that._changeHandler);\n\n            if (that._resizeDraggable.navigation) {\n                that._resizeDraggable.navigation.destroy();\n                that._resizeDraggable.navigation = null;\n            }\n\n            if (that._resizeDraggable.preview) {\n                that._resizeDraggable.preview.destroy();\n                that._resizeDraggable.preview = null;\n            }\n\n            if (that.uploadDialog) {\n                that.uploadDialog.destroy();\n                that.uploadDialog = null;\n            }\n\n            if (that.upload) {\n                that.upload.destroy();\n                that.upload = null;\n            }\n\n            if (that.contextMenu) {\n                that.contextMenu.destroy();\n                that.contextMenu = null;\n            }\n\n            kendo.unbindResize(that._resizeHandler);\n\n            that.dataSource = null;\n            that._viewDataSource = null;\n\n            kendo.destroy(that.element);\n        }\n    });\n\n    ui.plugin(FileManager);\n})(window.kendo.jQuery);\n"]}