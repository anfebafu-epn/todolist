{"version":3,"file":"kendo.buttongroup.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","ui","Widget","ToggleButton","Button","keys","NS","KBUTTON","SELECTED","DISABLED","SELECT","ARIA_DISABLED","DOT","NONE","SINGLE","MULTIPLE","FOCUS","ButtonGroup","extend","init","element","options","that","this","fn","call","wrapper","selectedIndices","_buttons","_renderItems","items","addClass","KWIDGET","attr","_enable","enable","enabled","forEach","b","selection","select","index","_attachEvents","events","preventKeyNav","size","rounded","fillMode","themeColor","badge","item","value","badgeEl","button","isNaN","find","getKendoToggleButton","getKendoButton","validValue","_badge","text","htmlEncode","destroy","empty","remove","current","off","each","i","el","component","toggleClass","focused","hasClass","is","removeAttr","trigger","nodeType","length","idx","toggle","_toggleIndex","_resetIndexes","_addButton","selected","btn","bind","_select","on","_keyDown","e","buttonGroup","focusableItems","focusedElement","currentIndex","isRtl","support","keyCode","LEFT","RIGHT","eq","preventDefault","groupOptions","children","buttons","image","disabled","attrValue","icon","push","encoded","url","html","attributes","appendTo","indices","target","indexOf","splice","plugin","jQuery"],"sources":["kendo.buttongroup.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.togglebutton.js';\nimport './kendo.button.js';\n\nvar __meta__ = {\n    id: \"buttongroup\",\n    name: \"ButtonGroup\",\n    category: \"web\",\n    description: \"The Kendo ButtonGroup widget is a linear set of grouped buttons.\",\n    depends: [ \"core\", \"togglebutton\", \"button\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var ToggleButton = ui.ToggleButton;\n    var Button = ui.Button;\n    var keys = kendo.keys;\n    var NS = \".kendoButtonGroup\";\n    var KWIDGET = \"k-widget\";\n    var KBUTTONGROUP = \"k-button-group\";\n    var KBUTTON = \"k-button\";\n    var SELECTED = \"k-selected\";\n    var DISABLED = \"k-disabled\";\n    var KFOCUS = \"k-focus\";\n    var SELECT = \"select\";\n    var KEYDOWN = \"keydown\";\n    var ARIA_DISABLED = \"aria-disabled\";\n    var EMPTY = \" \";\n    var DOT = \".\";\n    var NONE = \"none\";\n    var SINGLE = \"single\";\n    var MULTIPLE = \"multiple\";\n    var TOGGLE = \"toggle\";\n    var FOCUS = \"focus\";\n\n    var ButtonGroup = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            that.selectedIndices = [];\n\n            that._buttons = that._renderItems(that.options.items);\n\n            that.element\n                .addClass(KWIDGET + EMPTY + KBUTTONGROUP)\n                .attr(\"role\", \"group\");\n\n            that._enable = true;\n\n            if (!that.options.enable || !that.options.enabled) {\n                that._enable = false;\n                that.element\n                        .attr(ARIA_DISABLED, true)\n                        .addClass(DISABLED);\n\n                that._buttons.forEach((b) => {\n                    b.enable(false);\n                });\n            }\n\n            if (that.options.selection !== NONE) {\n                that.select(that.options.index);\n            }\n\n            that._attachEvents();\n        },\n\n        events: [\n            SELECT\n        ],\n\n        options: {\n            name: \"ButtonGroup\",\n            selection: SINGLE,\n            index: -1,\n            enable: true,\n            enabled: true,\n            preventKeyNav: false,\n            size: \"medium\",\n            rounded: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\"\n        },\n\n        badge: function(item, value) {\n            var that = this,\n                element = that.element,\n                button = !isNaN(item) ? that._buttons[item] : element.find(item).getKendoToggleButton() || element.find(item).getKendoButton(),\n                validValue = value || value === 0,\n                badge, badgeEl;\n\n            if (!button) {\n                return;\n            }\n\n            badge = button.badge;\n\n            if (!badge && validValue) {\n                button._badge({ text: kendo.htmlEncode(value) });\n                return kendo.htmlEncode(value);\n            }\n\n            if (validValue) {\n                badge.text(kendo.htmlEncode(value));\n            } else if (value === false) {\n                button.badge = null;\n                badgeEl = badge.element;\n                badge.destroy();\n                badgeEl.empty().remove();\n                return;\n            }\n\n            return badge ? badge.text() : null;\n        },\n\n        current: function() {\n            return this.element.find(DOT + SELECTED);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n\n            that.element.find(DOT + KBUTTON).each(function(i, el) {\n                var component = $(el).getKendoToggleButton() || $(el).getKendoButton();\n\n                if (component) {\n                    component.destroy();\n                }\n            });\n\n            Widget.fn.destroy.call(that);\n        },\n\n        enable: function(enable) {\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            this.element\n                    .attr(ARIA_DISABLED, !enable)\n                    .toggleClass(DISABLED, !enable);\n\n            this._buttons.forEach((b) => {\n                var focused = b.element.hasClass(KFOCUS) || b.element.is(\":focus\");\n\n                b.enable(enable);\n\n                if (focused) {\n                    b.element.removeAttr(\"disabled\").addClass(\"k-focus\").trigger(\"focus\");\n                }\n            });\n\n            this._enable = this.options.enable = enable;\n        },\n\n        select: function(el) {\n            var that = this,\n                button,\n                index = -1;\n\n            if (this.options.selection === NONE || el === undefined$1 || el === -1) {\n                return;\n            }\n\n            if (typeof el === \"number\") {\n                index = el;\n            } else if (el.nodeType) {\n                el = $(el);\n                index = el.index();\n            } else {\n                index = el.index();\n            }\n\n            button = that._buttons[index];\n\n            if (!button) {\n                return;\n            }\n\n            if (that.options.selection === MULTIPLE) {\n                if (el.length > 1) {\n                    el.each((i, element) => {\n                        var idx = $(element).index();\n\n                        that._buttons[idx].toggle();\n                        that._toggleIndex(idx);\n                    });\n                } else {\n                    that._buttons[index].toggle();\n                    that._toggleIndex(index);\n                }\n            } else {\n                that._resetIndexes(index);\n            }\n        },\n\n        _addButton: function(el, options) {\n            if (this.options.selection === NONE) {\n                delete options.selected;\n\n                return new Button(el, options);\n            } else {\n                var btn = new ToggleButton(el, options);\n\n                btn.bind(TOGGLE, this._select.bind(this, el));\n\n                return btn;\n            }\n        },\n\n        _attachEvents: function() {\n            if (!this.options.preventKeyNav) {\n                this.element.on(KEYDOWN + NS, this._keyDown.bind(this));\n            }\n        },\n\n        _keyDown: function(e) {\n            var that = this,\n                buttonGroup = $(that.element),\n                focusableItems = buttonGroup.find(DOT + KBUTTON),\n                focusedElement = buttonGroup.find(\":focus\"),\n                currentIndex = focusableItems.index(focusedElement),\n                isRtl = kendo.support.isRtl(that.element),\n                itemToFocus;\n\n            if ((e.keyCode === keys.LEFT && !isRtl) || (e.keyCode === keys.RIGHT && isRtl)) {\n                itemToFocus = currentIndex === 0 ? focusableItems.eq(focusableItems.length - 1) : $(focusableItems[currentIndex - 1]);\n                itemToFocus.trigger(FOCUS);\n                e.preventDefault();\n            } else if ((e.keyCode === keys.LEFT && isRtl) || (e.keyCode === keys.RIGHT && !isRtl)) {\n                itemToFocus = currentIndex + 1 === focusableItems.length ? focusableItems.eq(0) : $(focusableItems[currentIndex + 1]);\n                itemToFocus.trigger(FOCUS);\n                e.preventDefault();\n            }\n        },\n\n        _renderItems: function(items) {\n            var that = this,\n                groupOptions = that.options,\n                children = that.element.children(),\n                buttons = [];\n\n            if (children.length > 0) {\n                children.each(function(index) {\n                    var el = $(this),\n                        image = el.find(\"img\").addClass(\"k-image\"),\n                        disabled = el.is(\"[disabled]\") || el.hasClass(DISABLED),\n                        options = {\n                            badge: kendo.attrValue(el, \"badge\"),\n                            icon: !image[0] ? kendo.attrValue(el, \"icon\") : null,\n                            disabled: disabled,\n                            selected: !disabled ? el.is(DOT + SELECTED) : false,\n                            size: groupOptions.size,\n                            rounded: groupOptions.rounded,\n                            fillMode: groupOptions.fillMode,\n                            themeColor: groupOptions.themeColor\n                        };\n\n                    buttons.push(that._addButton(el, options));\n\n                    if (options.selected) {\n                        that.selectedIndices.push(index);\n                    }\n                });\n            }\n\n            if (!items) {\n                return buttons;\n            }\n\n            items.forEach(function(item, index) {\n                var text = item.text ? item.encoded === false ? item.text : kendo.htmlEncode(item.text) : \"\",\n                    el = item.url ? $(\"<a href=\" + item.url + \">\") : $(\"<button>\");\n\n                el.html(text);\n\n                if (item.attributes) {\n                    el.attr(item.attributes);\n                }\n\n                item = $.extend({}, item, {\n                    size: groupOptions.size,\n                    rounded: groupOptions.rounded,\n                    fillMode: groupOptions.fillMode,\n                    themeColor: groupOptions.themeColor\n                });\n\n                el.appendTo(that.element);\n                buttons.push(that._addButton(el, item));\n\n                if (item.selected) {\n                    that.selectedIndices.push(index);\n                }\n            });\n\n            return buttons;\n        },\n\n        _resetIndexes: function(index) {\n            this.selectedIndices = [];\n            this._buttons.forEach((b) => {\n                b.toggle(false);\n            });\n\n            this._buttons[index].toggle(true);\n            this.selectedIndices.push(index);\n        },\n\n        _select: function(button) {\n            var selection = this.options.selection,\n                index = button.index();\n\n            if (!this._enable || button.is(DOT + DISABLED)) {\n                return;\n            }\n\n            if (selection === MULTIPLE) {\n                this._toggleIndex(index);\n            } else if (selection === SINGLE) {\n                this._resetIndexes(index);\n            }\n\n            this.trigger(SELECT, { indices: this.selectedIndices, target: button });\n        },\n\n        _toggleIndex: function(index) {\n            if (this.selectedIndices.indexOf(index) === -1) {\n                this.selectedIndices.push(index);\n            } else {\n                this.selectedIndices.splice(this.selectedIndices.indexOf(index), 1);\n            }\n        }\n    });\n\n    ui.plugin(ButtonGroup);\n})(window.kendo.jQuery);\n"]}