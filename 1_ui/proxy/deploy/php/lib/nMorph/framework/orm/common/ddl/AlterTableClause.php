<?php
/**
 * Generated by Haxe 4.2.2
 */

namespace nMorph\framework\orm\common\ddl;

use \php\Boot;
use \nMorph\framework\orm\interfaces\IColumnDefinition;
use \nMorph\framework\orm\interfaces\IClause;
use \nMorph\framework\orm\tools\BulkRun;
use \nMorph\framework\common\exceptions\ExceptionHelper;
use \nMorph\framework\orm\client\QueryTable;
use \nMorph\framework\orm\common\enums\ChangeTypeEnum;
use \nMorph\framework\orm\client\QueueItem;
use \nMorph\framework\orm\lang\DDL;
use \nMorph\framework\orm\tools\Context;

class AlterTableClause implements IClause {
	/**
	 * @var string
	 */
	static public $__rtti = "<class path=\"nMorph.framework.orm.common.ddl.AlterTableClause\" params=\"\">\x0A\x09<implements path=\"nMorph.framework.orm.interfaces.IClause\"/>\x0A\x09<CurrentDDL><c path=\"nMorph.framework.orm.lang.DDL\"/></CurrentDDL>\x0A\x09<TableName><c path=\"String\"/></TableName>\x0A\x09<ChangeType><e path=\"nMorph.framework.orm.common.enums.ChangeTypeEnum\"/></ChangeType>\x0A\x09<TableOldName><c path=\"String\"/></TableOldName>\x0A\x09<ADDCOLUMN public=\"1\" set=\"method\" line=\"28\"><f a=\"Column\">\x0A\x09<c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.ddl.AddColumnClause\"/>\x0A</f></ADDCOLUMN>\x0A\x09<DROPCOLUMN public=\"1\" set=\"method\" line=\"35\"><f a=\"ColumnName\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.ddl.DropColumnClause\"/>\x0A</f></DROPCOLUMN>\x0A\x09<ADDFOREIGNKEY public=\"1\" set=\"method\" line=\"41\"><f a=\"ForeignKeyName:BaseColumns:ReferenceTable:ReferenceColumns\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/></c>\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/></c>\x0A\x09<c path=\"nMorph.framework.orm.common.ddl.AddForeignKeyClause\"/>\x0A</f></ADDFOREIGNKEY>\x0A\x09<ADDPRIMARYKEY public=\"1\" set=\"method\" line=\"50\"><f a=\"PrimaryKeyName:BaseColumns\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/></c>\x0A\x09<c path=\"nMorph.framework.orm.common.ddl.AddPrimaryKeyClause\"/>\x0A</f></ADDPRIMARYKEY>\x0A\x09<DROPPRIMARYKEY public=\"1\" set=\"method\" line=\"59\"><f a=\"PrimaryKeyName:BaseColumns\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/></c>\x0A\x09<c path=\"nMorph.framework.orm.common.ddl.AddPrimaryKeyClause\"/>\x0A</f></DROPPRIMARYKEY>\x0A\x09<DROPCONSTRAINT public=\"1\" set=\"method\" line=\"68\"><f a=\"ConstraintName\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.ddl.DropConstraintClause\"/>\x0A</f></DROPCONSTRAINT>\x0A\x09<ALTERCOLUMN public=\"1\" set=\"method\" line=\"74\"><f a=\"ChangedColumn:TypeChange:?OldTable:?OldParameter\">\x0A\x09<c path=\"nMorph.framework.orm.interfaces.IColumnDefinition\"/>\x0A\x09<e path=\"nMorph.framework.orm.common.enums.ChangeTypeEnum\"/>\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"nMorph.framework.orm.common.ddl.AlterColumnClause\"/>\x0A</f></ALTERCOLUMN>\x0A\x09<RENAMETABLE public=\"1\" set=\"method\" line=\"86\"><f a=\"NewName:OldNewName\">\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"String\"/>\x0A\x09<c path=\"nMorph.framework.orm.lang.DDL\"/>\x0A</f></RENAMETABLE>\x0A\x09<SCRIPT_PART public=\"1\" set=\"method\" line=\"93\"><f a=\"?args\">\x0A\x09<c path=\"String\"/>\x0A\x09<x path=\"Void\"/>\x0A</f></SCRIPT_PART>\x0A\x09<SCRIPT public=\"1\" set=\"method\" line=\"119\"><f a=\"\"><c path=\"String\"/></f></SCRIPT>\x0A\x09<Execute public=\"1\" set=\"method\" line=\"123\"><f a=\"\"><d/></f></Execute>\x0A\x09<Register public=\"1\" set=\"method\" line=\"127\"><f a=\"context\">\x0A\x09<c path=\"nMorph.framework.orm.tools.Context\"/>\x0A\x09<x path=\"Void\"/>\x0A</f></Register>\x0A\x09<Queue public=\"1\" set=\"method\" line=\"131\"><f a=\"queue\">\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\x0A\x09<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\x0A</f></Queue>\x0A\x09<Bulk public=\"1\" set=\"method\" line=\"136\"><f a=\"bulk\">\x0A\x09<c path=\"nMorph.framework.orm.tools.BulkRun\"/>\x0A\x09<c path=\"nMorph.framework.orm.tools.BulkRun\"/>\x0A</f></Bulk>\x0A\x09<ReadValue public=\"1\" set=\"method\" line=\"141\"><f a=\"\"><d/></f></ReadValue>\x0A\x09<ReadTable public=\"1\" set=\"method\" line=\"146\"><f a=\"\"><c path=\"nMorph.framework.orm.client.QueryTable\"/></f></ReadTable>\x0A\x09<Read public=\"1\" params=\"T\" set=\"method\" line=\"151\"><f a=\"cl:?context\">\x0A\x09<x path=\"Class\"><c path=\"Read.T\"/></x>\x0A\x09<c path=\"nMorph.framework.orm.tools.Context\"/>\x0A\x09<c path=\"Array\"><c path=\"Read.T\"/></c>\x0A</f></Read>\x0A\x09<ReadOne public=\"1\" params=\"T\" set=\"method\" line=\"156\"><f a=\"cl:?context\">\x0A\x09<x path=\"Class\"><c path=\"ReadOne.T\"/></x>\x0A\x09<c path=\"nMorph.framework.orm.tools.Context\"/>\x0A\x09<c path=\"ReadOne.T\"/>\x0A</f></ReadOne>\x0A\x09<new public=\"1\" set=\"method\" line=\"22\"><f a=\"CurrentDDL:?TableName\">\x0A\x09<c path=\"nMorph.framework.orm.lang.DDL\"/>\x0A\x09<c path=\"String\"/>\x0A\x09<x path=\"Void\"/>\x0A</f></new>\x0A\x09<meta>\x0A\x09\x09<m n=\":directlyUsed\"/>\x0A\x09\x09<m n=\":keepSub\"/>\x0A\x09\x09<m n=\":rtti\"/>\x0A\x09</meta>\x0A</class>";

	/**
	 * @var ChangeTypeEnum
	 */
	public $ChangeType;
	/**
	 * @var DDL
	 */
	public $CurrentDDL;
	/**
	 * @var string
	 */
	public $TableName;
	/**
	 * @var string
	 */
	public $TableOldName;

	/**
	 * @param DDL $CurrentDDL
	 * @param string $TableName
	 * 
	 * @return void
	 */
	public function __construct ($CurrentDDL, $TableName = null) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:23: characters 9-37
		$this->CurrentDDL = $CurrentDDL;
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:24: lines 24-25
		if ($TableName !== null) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:25: characters 13-39
			$this->TableName = $TableName;
		}
	}

	/**
	 * @param IColumnDefinition $Column
	 * 
	 * @return AddColumnClause
	 */
	public function ADDCOLUMN ($Column) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:29: characters 9-75
		$acc = new AddColumnClause($this->CurrentDDL, $Column);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:30: characters 9-34
		$this->CurrentDDL->AddClause($acc);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:31: characters 9-41
		$Column->RegisterQuery($this->CurrentDDL);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:32: characters 9-19
		return $acc;
	}

	/**
	 * @param string $ForeignKeyName
	 * @param IColumnDefinition[]|\Array_hx $BaseColumns
	 * @param string $ReferenceTable
	 * @param IColumnDefinition[]|\Array_hx $ReferenceColumns
	 * 
	 * @return AddForeignKeyClause
	 */
	public function ADDFOREIGNKEY ($ForeignKeyName, $BaseColumns, $ReferenceTable, $ReferenceColumns) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:42: characters 9-139
		$afkc = new AddForeignKeyClause($this->CurrentDDL, $ForeignKeyName, $BaseColumns, $ReferenceTable, $ReferenceColumns);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:43: characters 9-35
		$this->CurrentDDL->AddClause($afkc);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:44: lines 44-46
		$_g = 0;
		while ($_g < $BaseColumns->length) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:44: characters 13-20
			$bcolumn = ($BaseColumns->arr[$_g] ?? null);
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:44: lines 44-46
			++$_g;
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:45: characters 13-46
			$bcolumn->RegisterQuery($this->CurrentDDL);
		}
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:47: characters 9-20
		return $afkc;
	}

	/**
	 * @param string $PrimaryKeyName
	 * @param IColumnDefinition[]|\Array_hx $BaseColumns
	 * 
	 * @return AddPrimaryKeyClause
	 */
	public function ADDPRIMARYKEY ($PrimaryKeyName, $BaseColumns) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:51: characters 9-105
		$apkc = new AddPrimaryKeyClause($this->CurrentDDL, $PrimaryKeyName, $BaseColumns);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:52: characters 9-35
		$this->CurrentDDL->AddClause($apkc);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:53: lines 53-55
		$_g = 0;
		while ($_g < $BaseColumns->length) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:53: characters 13-20
			$bcolumn = ($BaseColumns->arr[$_g] ?? null);
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:53: lines 53-55
			++$_g;
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:54: characters 13-46
			$bcolumn->RegisterQuery($this->CurrentDDL);
		}
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:56: characters 9-20
		return $apkc;
	}

	/**
	 * @param IColumnDefinition $ChangedColumn
	 * @param ChangeTypeEnum $TypeChange
	 * @param string $OldTable
	 * @param string $OldParameter
	 * 
	 * @return AlterColumnClause
	 */
	public function ALTERCOLUMN ($ChangedColumn, $TypeChange, $OldTable = null, $OldParameter = null) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:75: characters 9-35
		$this->ChangeType = $TypeChange;
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:76: characters 9-35
		$acc = null;
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:77: lines 77-80
		if (($OldParameter !== null) && ($OldParameter !== "")) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:78: characters 13-99
			$acc = new AlterColumnClause($this->CurrentDDL, $ChangedColumn, $TypeChange, $OldTable, $OldParameter);
		} else {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:80: characters 13-78
			$acc = new AlterColumnClause($this->CurrentDDL, $ChangedColumn, $TypeChange);
		}
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:81: characters 9-34
		$this->CurrentDDL->AddClause($acc);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:82: characters 9-48
		$ChangedColumn->RegisterQuery($this->CurrentDDL);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:83: characters 9-19
		return $acc;
	}

	/**
	 * @param BulkRun $bulk
	 * 
	 * @return BulkRun
	 */
	public function Bulk ($bulk) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:137: characters 9-62
		ExceptionHelper::LogicException(1, "Not Valid Method");
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:138: characters 9-20
		return null;
	}

	/**
	 * @param string $ColumnName
	 * 
	 * @return DropColumnClause
	 */
	public function DROPCOLUMN ($ColumnName) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:36: characters 9-81
		$dcc = new DropColumnClause($this->CurrentDDL, $ColumnName);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:37: characters 9-34
		$this->CurrentDDL->AddClause($dcc);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:38: characters 9-19
		return $dcc;
	}

	/**
	 * @param string $ConstraintName
	 * 
	 * @return DropConstraintClause
	 */
	public function DROPCONSTRAINT ($ConstraintName) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:69: characters 9-93
		$dcc = new DropConstraintClause($this->CurrentDDL, $ConstraintName);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:70: characters 9-34
		$this->CurrentDDL->AddClause($dcc);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:71: characters 9-19
		return $dcc;
	}

	/**
	 * @param string $PrimaryKeyName
	 * @param IColumnDefinition[]|\Array_hx $BaseColumns
	 * 
	 * @return AddPrimaryKeyClause
	 */
	public function DROPPRIMARYKEY ($PrimaryKeyName, $BaseColumns) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:60: characters 9-105
		$apkc = new AddPrimaryKeyClause($this->CurrentDDL, $PrimaryKeyName, $BaseColumns);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:61: characters 9-35
		$this->CurrentDDL->AddClause($apkc);
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:62: lines 62-64
		$_g = 0;
		while ($_g < $BaseColumns->length) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:62: characters 13-20
			$bcolumn = ($BaseColumns->arr[$_g] ?? null);
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:62: lines 62-64
			++$_g;
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:63: characters 13-46
			$bcolumn->RegisterQuery($this->CurrentDDL);
		}
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:65: characters 9-20
		return $apkc;
	}

	/**
	 * @return mixed
	 */
	public function Execute () {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:124: characters 9-36
		return $this->CurrentDDL->Execute();
	}

	/**
	 * @param QueueItem[]|\Array_hx $queue
	 * 
	 * @return QueueItem[]|\Array_hx
	 */
	public function Queue ($queue) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:132: characters 9-62
		ExceptionHelper::LogicException(1, "Not Valid Method");
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:133: characters 9-20
		return null;
	}

	/**
	 * @param string $NewName
	 * @param string $OldNewName
	 * 
	 * @return DDL
	 */
	public function RENAMETABLE ($NewName, $OldNewName) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:87: characters 9-49
		$this->ChangeType = ChangeTypeEnum::tableName();
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:88: characters 9-31
		$this->TableName = $NewName;
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:89: characters 9-37
		$this->TableOldName = $OldNewName;
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:90: characters 9-26
		return $this->CurrentDDL;
	}

	/**
	 * @param Class $cl
	 * @param Context $context
	 * 
	 * @return mixed[]|\Array_hx
	 */
	public function Read ($cl, $context = null) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:152: characters 9-62
		ExceptionHelper::LogicException(1, "Not Valid Method");
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:153: characters 9-20
		return null;
	}

	/**
	 * @param Class $cl
	 * @param Context $context
	 * 
	 * @return mixed
	 */
	public function ReadOne ($cl, $context = null) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:157: characters 9-62
		ExceptionHelper::LogicException(1, "Not Valid Method");
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:158: characters 9-20
		return null;
	}

	/**
	 * @return QueryTable
	 */
	public function ReadTable () {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:147: characters 9-62
		ExceptionHelper::LogicException(1, "Not Valid Method");
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:148: characters 9-20
		return null;
	}

	/**
	 * @return mixed
	 */
	public function ReadValue () {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:142: characters 9-62
		ExceptionHelper::LogicException(1, "Not Valid Method");
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:143: characters 9-20
		return null;
	}

	/**
	 * @param Context $context
	 * 
	 * @return void
	 */
	public function Register ($context) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:128: characters 9-62
		ExceptionHelper::LogicException(1, "Not Valid Method");
	}

	/**
	 * @return string
	 */
	public function SCRIPT () {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:120: characters 9-40
		return $this->CurrentDDL->GenerateAll();
	}

	/**
	 * @param string $args
	 * 
	 * @return void
	 */
	public function SCRIPT_PART ($args = null) {
		#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:96: characters 16-45
		$__hx__switch = ($this->CurrentDDL->getCurrentEngine()->index);
		if ($__hx__switch === 0) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:112: lines 112-115
			if ($this->ChangeType === ChangeTypeEnum::tableName()) {
				#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:113: characters 21-102
				$this->CurrentDDL->AddBlock("EXEC sp_rename \"" . ($this->TableOldName??'null') . "\",\"" . ($this->TableName??'null') . "\" ");
			} else {
				#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:115: characters 17-74
				$this->CurrentDDL->AddBlock("ALTER TABLE \"" . ($this->TableName??'null') . "\" ");
			}
		} else if ($__hx__switch === 1) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:106: characters 21-78
			$this->CurrentDDL->AddBlock("ALTER TABLE \"" . ($this->TableName??'null') . "\" ");
		} else if ($__hx__switch === 2) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:103: characters 17-74
			$this->CurrentDDL->AddBlock("ALTER TABLE \"" . ($this->TableName??'null') . "\" ");
		} else if ($__hx__switch === 3) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:109: characters 17-74
			$this->CurrentDDL->AddBlock("ALTER TABLE \"" . ($this->TableName??'null') . "\" ");
		} else if ($__hx__switch === 4) {
			#5_framework\orm\src/nMorph/framework/orm/common/ddl/AlterTableClause.hx:99: characters 17-74
			$this->CurrentDDL->AddBlock("ALTER TABLE \"" . ($this->TableName??'null') . "\" ");
		}
	}
}

Boot::registerClass(AlterTableClause::class, 'nMorph.framework.orm.common.ddl.AlterTableClause');
