// Generated by Haxe 4.2.2
package sys.thread._Thread;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Thread_Impl_
{
	
	
	public static sys.thread._Thread.HaxeThread _new(sys.thread._Thread.HaxeThread t)
	{
		//line 40 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		sys.thread._Thread.HaxeThread this1 = t;
		//line 40 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		return ((sys.thread._Thread.HaxeThread) (this1) );
	}
	
	
	public static sys.thread._Thread.HaxeThread create(haxe.lang.Function job)
	{
		//line 45 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		return sys.thread._Thread.HaxeThread.create(job, false);
	}
	
	
	public static sys.thread._Thread.HaxeThread current()
	{
		//line 49 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		return sys.thread._Thread.HaxeThread.get(java.lang.Thread.currentThread());
	}
	
	
	public static void runWithEventLoop(haxe.lang.Function job)
	{
		//line 53 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		sys.thread._Thread.HaxeThread.runWithEventLoop(job);
	}
	
	
	public static sys.thread._Thread.HaxeThread createWithEventLoop(haxe.lang.Function job)
	{
		//line 57 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		return sys.thread._Thread.HaxeThread.create(job, true);
	}
	
	
	public static java.lang.Object readMessage(boolean block)
	{
		//line 61 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		return ((sys.thread._Thread.HaxeThread) (sys.thread._Thread.HaxeThread.get(java.lang.Thread.currentThread())) ).readMessage(block);
	}
	
	
	public static void sendMessage(sys.thread._Thread.HaxeThread this1, java.lang.Object msg)
	{
		//line 65 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		this1.sendMessage(msg);
	}
	
	
	public static sys.thread._Thread.HaxeThread getHandle(sys.thread._Thread.HaxeThread this1)
	{
		//line 69 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		return this1;
	}
	
	
	public static sys.thread.EventLoop get_events(sys.thread._Thread.HaxeThread this1)
	{
		//line 73 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		if (( this1.events == null )) 
		{
			//line 74 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
			throw new sys.thread.NoEventLoopException(haxe.lang.Runtime.toString(null), ((haxe.Exception) (null) ));
		}
		
		//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		return this1.events;
	}
	
	
	public static void processEvents()
	{
		//line 80 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\thread\\Thread.hx"
		((sys.thread._Thread.HaxeThread) (sys.thread._Thread.HaxeThread.get(java.lang.Thread.currentThread())) ).events.loop();
	}
	
	
}


