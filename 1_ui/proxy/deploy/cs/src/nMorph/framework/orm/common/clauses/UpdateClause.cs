// Generated by Haxe 4.2.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nMorph.framework.orm.common.clauses {
	public class UpdateClause : global::haxe.lang.HxObject, global::nMorph.framework.orm.interfaces.IClause {
		
		static UpdateClause() {
			global::nMorph.framework.orm.common.clauses.UpdateClause.__rtti = "<class path=\"nMorph.framework.orm.common.clauses.UpdateClause\" params=\"\">\n\t<implements path=\"nMorph.framework.orm.interfaces.IClause\"/>\n\t<CurrentSQL><c path=\"nMorph.framework.orm.lang.SQL\"/></CurrentSQL>\n\t<UpdateSource><c path=\"nMorph.framework.orm.interfaces.ISource\"/></UpdateSource>\n\t<SET public=\"1\" set=\"method\" line=\"30\"><f a=\"Sets\">\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.interfaces.ISet\"/></c>\n\t<c path=\"nMorph.framework.orm.common.clauses.SetClause\"/>\n</f></SET>\n\t<SCRIPT public=\"1\" set=\"method\" line=\"37\"><f a=\"\"><c path=\"String\"/></f></SCRIPT>\n\t<SCRIPT_PART public=\"1\" set=\"method\" line=\"42\"><f a=\"?args\">\n\t<c path=\"String\"/>\n\t<x path=\"Void\"/>\n</f></SCRIPT_PART>\n\t<Execute public=\"1\" set=\"method\" line=\"65\"><f a=\"\"><d/></f></Execute>\n\t<Register public=\"1\" set=\"method\" line=\"70\"><f a=\"context\">\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<x path=\"Void\"/>\n</f></Register>\n\t<Queue public=\"1\" set=\"method\" line=\"75\"><f a=\"queue\">\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n\t<c path=\"Array\"><c path=\"nMorph.framework.orm.client.QueueItem\"/></c>\n</f></Queue>\n\t<Bulk public=\"1\" set=\"method\" line=\"79\"><f a=\"bulk\">\n\t<c path=\"nMorph.framework.orm.tools.BulkRun\"/>\n\t<c path=\"nMorph.framework.orm.tools.BulkRun\"/>\n</f></Bulk>\n\t<ReadValue public=\"1\" set=\"method\" line=\"85\"><f a=\"\"><d/></f></ReadValue>\n\t<ReadTable public=\"1\" set=\"method\" line=\"90\"><f a=\"\"><c path=\"nMorph.framework.orm.client.QueryTable\"/></f></ReadTable>\n\t<Read public=\"1\" params=\"T\" set=\"method\" line=\"95\"><f a=\"cl:?context\">\n\t<x path=\"Class\"><c path=\"Read.T\"/></x>\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<c path=\"Array\"><c path=\"Read.T\"/></c>\n</f></Read>\n\t<ReadOne public=\"1\" params=\"T\" set=\"method\" line=\"100\"><f a=\"cl:?context\">\n\t<x path=\"Class\"><c path=\"ReadOne.T\"/></x>\n\t<c path=\"nMorph.framework.orm.tools.Context\"/>\n\t<c path=\"ReadOne.T\"/>\n</f></ReadOne>\n\t<new public=\"1\" set=\"method\" line=\"23\"><f a=\"CurrentSQL:UpdateSource\">\n\t<c path=\"nMorph.framework.orm.lang.SQL\"/>\n\t<c path=\"nMorph.framework.orm.interfaces.ISource\"/>\n\t<x path=\"Void\"/>\n</f></new>\n\t<meta>\n\t\t<m n=\":directlyUsed\"/>\n\t\t<m n=\":hxGen\"/>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
		}
		
		
		public UpdateClause(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public UpdateClause(global::nMorph.framework.orm.lang.SQL CurrentSQL, global::nMorph.framework.orm.interfaces.ISource UpdateSource) {
			global::nMorph.framework.orm.common.clauses.UpdateClause.__hx_ctor_nMorph_framework_orm_common_clauses_UpdateClause(this, CurrentSQL, UpdateSource);
		}
		
		
		protected static void __hx_ctor_nMorph_framework_orm_common_clauses_UpdateClause(global::nMorph.framework.orm.common.clauses.UpdateClause __hx_this, global::nMorph.framework.orm.lang.SQL CurrentSQL, global::nMorph.framework.orm.interfaces.ISource UpdateSource) {
			__hx_this.CurrentSQL = CurrentSQL;
			__hx_this.UpdateSource = UpdateSource;
			UpdateSource.RegisterQuery(CurrentSQL);
		}
		
		
		public static string __rtti;
		
		public global::nMorph.framework.orm.lang.SQL CurrentSQL;
		
		public global::nMorph.framework.orm.interfaces.ISource UpdateSource;
		
		public virtual global::nMorph.framework.orm.common.clauses.SetClause SET(global::Array<object> Sets) {
			global::nMorph.framework.orm.common.clauses.SetClause sc = new global::nMorph.framework.orm.common.clauses.SetClause(((global::nMorph.framework.orm.lang.SQL) (this.CurrentSQL) ), ((global::Array<object>) (Sets) ));
			this.CurrentSQL.AddClause(sc);
			return sc;
		}
		
		
		public virtual string SCRIPT() {
			return this.CurrentSQL.GenerateAll();
		}
		
		
		public virtual void SCRIPT_PART(string args) {
			unchecked {
				switch (this.CurrentSQL.getCurrentEngine()._hx_index) {
					case 0:
					{
						this.CurrentSQL.AddBlock("UPDATE ");
						this.UpdateSource.SCRIPT_PART(null);
						break;
					}
					
					
					case 1:
					{
						this.CurrentSQL.AddBlock("UPDATE ");
						this.UpdateSource.SCRIPT_PART(null);
						break;
					}
					
					
					case 2:
					{
						this.CurrentSQL.AddBlock("UPDATE ");
						this.UpdateSource.SCRIPT_PART(null);
						break;
					}
					
					
					case 3:
					{
						this.CurrentSQL.AddBlock("UPDATE ");
						this.UpdateSource.SCRIPT_PART(null);
						break;
					}
					
					
					case 4:
					{
						this.CurrentSQL.AddBlock("UPDATE ");
						this.UpdateSource.SCRIPT_PART(null);
						break;
					}
					
					
				}
				
			}
		}
		
		
		public virtual object Execute() {
			return this.CurrentSQL.Execute();
		}
		
		
		public virtual void Register(global::nMorph.framework.orm.tools.Context context) {
			context.set_Queue(this.CurrentSQL.Queue(context.get_Queue()));
		}
		
		
		public virtual global::Array<object> Queue(global::Array<object> queue) {
			return this.CurrentSQL.Queue(queue);
		}
		
		
		public virtual global::nMorph.framework.orm.tools.BulkRun Bulk(global::nMorph.framework.orm.tools.BulkRun bulk) {
			bulk.set_queue(this.CurrentSQL.Queue(bulk.get_queue()));
			return bulk;
		}
		
		
		public virtual object ReadValue() {
			return this.CurrentSQL.ReadValue();
		}
		
		
		public virtual global::nMorph.framework.orm.client.QueryTable ReadTable() {
			return this.CurrentSQL.ReadTable();
		}
		
		
		public virtual global::Array<T> Read<T>(global::System.Type cl, global::nMorph.framework.orm.tools.Context context) {
			return this.CurrentSQL.Read<T>(((global::System.Type) (cl) ), ((global::nMorph.framework.orm.tools.Context) (context) ));
		}
		
		
		public virtual T ReadOne<T>(global::System.Type cl, global::nMorph.framework.orm.tools.Context context) {
			return this.CurrentSQL.ReadOne<T>(((global::System.Type) (cl) ), ((global::nMorph.framework.orm.tools.Context) (context) ));
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2047321060:
					{
						this.UpdateSource = ((global::nMorph.framework.orm.interfaces.ISource) (@value) );
						return @value;
					}
					
					
					case 1038308213:
					{
						this.CurrentSQL = ((global::nMorph.framework.orm.lang.SQL) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1344235664:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadOne", 1344235664)) );
					}
					
					
					case 914388854:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Read", 914388854)) );
					}
					
					
					case 2107499704:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadTable", 2107499704)) );
					}
					
					
					case 611494939:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ReadValue", 611494939)) );
					}
					
					
					case 737753906:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Bulk", 737753906)) );
					}
					
					
					case 1897397617:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Queue", 1897397617)) );
					}
					
					
					case 709976707:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Register", 709976707)) );
					}
					
					
					case 425603605:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Execute", 425603605)) );
					}
					
					
					case 2032371175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT_PART", 2032371175)) );
					}
					
					
					case 2044918283:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SCRIPT", 2044918283)) );
					}
					
					
					case 4142978:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "SET", 4142978)) );
					}
					
					
					case 2047321060:
					{
						return this.UpdateSource;
					}
					
					
					case 1038308213:
					{
						return this.CurrentSQL;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1344235664:
					{
						return this.ReadOne<object>(((global::System.Type) (dynargs[0]) ), ((global::nMorph.framework.orm.tools.Context) (( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )) ));
					}
					
					
					case 914388854:
					{
						return this.Read<object>(((global::System.Type) (dynargs[0]) ), ((global::nMorph.framework.orm.tools.Context) (( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )) ));
					}
					
					
					case 2107499704:
					{
						return this.ReadTable();
					}
					
					
					case 611494939:
					{
						return this.ReadValue();
					}
					
					
					case 737753906:
					{
						return this.Bulk(((global::nMorph.framework.orm.tools.BulkRun) (dynargs[0]) ));
					}
					
					
					case 1897397617:
					{
						return this.Queue(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					case 709976707:
					{
						this.Register(((global::nMorph.framework.orm.tools.Context) (dynargs[0]) ));
						break;
					}
					
					
					case 425603605:
					{
						return this.Execute();
					}
					
					
					case 2032371175:
					{
						this.SCRIPT_PART(global::haxe.lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 2044918283:
					{
						return this.SCRIPT();
					}
					
					
					case 4142978:
					{
						return this.SET(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			baseArr.push("UpdateSource");
			baseArr.push("CurrentSQL");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


